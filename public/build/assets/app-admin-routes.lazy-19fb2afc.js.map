{"version":3,"mappings":"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","names":["useIsMutating","filters","queryClient","client","useQueryClient","useMutationState","getResult","mutationCache","options","mutation","optionsRef","React.useRef","result","React.useEffect","React.useSyncExternalStore","React.useCallback","onStoreChange","nextResult","replaceEqualDeep","notifyManager","DashboardLeftSidebar","className","isCompactMode","matchDescendants","menuName","bottomContent","isOverlayMode","variant","customMenuRender","isDarkMode","useIsDarkMode","jsxs","clsx","Fragment","jsx","Logo","SidebarToggleButton","CustomMenu","isActive","dashboardLeftSidebarItemClassName","leftSidenavStatus","setLeftSidenavStatus","name","useContext","DashboardLayoutContext","handleToggle","newStatus","setInLocalStorage","KeyboardArrowLeftIcon","KeyboardArrowRightIcon","DashboardLeftSidebarItem","forwardRef","elementType","isCompact","icon","label","otherChildren","target","to","otherProps","ref","Element","cloneElement","KeyboardArrowUpIcon","createSvgIcon","AdminSidebar","props","version","useSettings","isMobileMode","AdminSidebarNotificationsItem","AdminSidebarAuthUserItem","Trans","user","useAuth","hasUnread","DialogTrigger","NotificationsIcon","Badge","NotificationsDialog","propsAvatar","ItemAvatar","UserAvatar","avatar","NavbarAuthMenu","useAdminSetupAlerts","useQuery","fetchAlerts","apiClient","response","AdminLayout","useIsMobileMediaQuery","DashboardLayout","DashboardNavbar","DashboardSidenav","DashboardContent","SetupAlertsList","Outlet","data","dismissValue","useLocalStorage","shouldShowAlert","SetupAlert","alert","description","SectionHelper","ErrorIcon","timestampFilter","FilterOperator","FilterControlType","_a","dateRangeToAbsoluteRange","DateRangePresets","createdAtFilter","message","updatedAtFilter","UserDatatableFilters","DataTablePage","title","headerContent","headerItemsAlign","padding","dataTableProps","titleId","useId","StaticPageTitle","DataTable","useDeleteSelectedRows","endpoint","selectedRows","setSelectedRows","baseQueryKey","useDataTable","useMutation","deleteSelectedRows","DatatableDataQueryKey","toast","err","showHttpErrorToast","ids","r","DeleteSelectedItemsAction","Button","DeleteItemsDialog","close","useDialogContext","ConfirmationDialog","errorStatusIs","teamSvg","DataTableAddItemButton","React","children","onClick","href","download","disabled","IconButton","AddIcon","useExportCsv","payload","exportCsv","CsvExportInfoDialog","Dialog","DialogHeader","DialogBody","DialogFooter","DataTableExportCsvButton","dialogIsOpen","setDialogIsOpen","useState","downloadFileFromUrl","FileDownloadIcon","NameWithAvatar","image","labelClassName","avatarSize","alwaysShowAvatar","avatarLabel","avatarCircle","Avatar","PersonOffIcon","useBanUser","form","userId","banUser","onFormQueryError","BanUserDialog","trans","useTrans","formId","useForm","isPermanent","Form","values","FormDatePicker","FormSwitch","FormTextField","useUnbanUser","unbanUser","useImpersonateUser","impersonateUser","userDatatableColumns","ChipList","role","Chip","Link","s","CheckIcon","CloseIcon","FormattedDate","Tooltip","EditIcon","UnbanButton","ImpersonateButton","unban","confirmed","impersonate","LoginIcon","useCreateUser","navigate","useNavigate","createUser","CreateUserDialog","FileUploadProvider","FormImageSelector","UserDatatable","billing","filteredColumns","c","Actions","DataTableEmptyStateMessage","subscribeWithSelectorImpl","fn","set","get","api","origSubscribe","selector","optListener","listener","equalityFn","currentSlice","state","nextSlice","previousSlice","subscribeWithSelector","DefaultAppearanceConfig","mergedAppearanceConfig","deepMerge","AppAppearanceConfig","resolvePreviewAppIsLoaded","previewAppIsLoaded","resolve","useAppearanceStore","create","value","e","preview","postMessage","font","themeId","mode","node","document","window","command","appearanceState","useAdminSettings","adminSettingsQueryOptions","fetchAdminSettings","prepareSettingsForHookForm","obj","key","useAppearanceEditorValuesQuery","fetchAppearanceValues","useAppearanceEditorValues","usePreviewRoute","pathname","useLocation","subRoute","_b","useMatches","activeSection","config","baseRoute","AppearanceEditorPage","isAppearanceEditorActive","useAppearanceEditorMode","base_url","iframeRef","useRef","iframeRoute","useEffect","Navigate","url","Sidebar","spinner","ProgressCircle","AppearanceButton","startIcon","endIcon","other","ButtonBase","MenuList","fields","append","useFieldArray","field","index","id","nanoid","useAvailableRoutes","menuConfig","route","ucFirst","string","AddMenuItemDialog","useValueLists","categories","routeItems","Accordion","AccordionItem","AddCustomLink","AddRoute","category","items","List","item","ListItem","last","DragIndicatorIcon","dropdownMenu","sortableLineStrategy","sortSession","onDropPositionChange","previousPosition","newPosition","rect","droppables","midY","overIndex","clearLinePreview","addLinePreview","droppableId","droppable","itemIndex","el","side","color","moveItemInArray","array","fromIndex","toIndex","from","clamp","delta","i","moveItemInNewArray","newArray","transition","sortableTransformStrategy","sortable","currentIndex","rects","newRects","oldRect","newRect","sortableTarget","x","y","sortableMoveNodeStrategy","moveNode","newIndex","parentEl","strategies","useSortable","type","onSortEnd","onSortStart","onDragEnd","strategy","draggableProps","dragHandleRef","useDraggable","getScrollParent","updateRects","droppableProps","useDroppable","oldIndex","mergeProps","AppearanceMenuEditor","menuIndex","useParams","getValues","useFormContext","menuFormPath","menu","MenuEditorSection","has_mobile_app","menuSectionConfig","menuPositions","useMemo","positions","position","FormChipField","Option","MenuItemsManager","DeleteMenuTrigger","formPath","useWatch","menuItemConfig","MenuListItem","IllustratedMessage","SvgImage","params","menus","isConfirmed","_","DeleteIcon","sortableProps","Icon","createSvgIconFromTree","iconOnlyLabel","PermissionSelector","valueListKey","permissions","setValue","useControlledState","showAdvanced","setShowAdvanced","groupedPermissions","buildPermissionList","onRestrictionChange","newPermission","newValue","p","groupName","anyChecked","prettyName","DoneAllIcon","permission","v","isChecked","Switch","Restrictions","onChange","setRestrictionValue","nextState","produce","draftState","restriction","isLast","TextField","FormPermissionSelector","useController","formProps","allPermissions","selectedPermissions","group","g","mergedPermission","mergeRestrictions","allRestrictions","selectedRestrictions","selected","iconGridStyle","skeletons","IconList","__vitePreload","IconPicker","onIconSelected","AnimatePresence","Suspense","m","opacityAnimation","Skeleton","IconPickerDialog","IconPickerWrapper","MenuItemForm","formPathPrefix","hideRoleAndPermissionFields","prefixName","IconDialogTrigger","DestinationSelector","TargetSelect","RoleSelector","SubscriptionStatusSelector","buttonProps","watch","fieldName","watchedItemIcon","iconTree","currentType","previousType","usePrevious","selectedCategory","FormSelect","Item","roles","Section","AppearanceMenuItemEditor","menuItemIndex","MenuItemEditor","itemsPath","MenuItemEditorSection","DeleteItemTrigger","currentItems","saveAppearanceChangesMutationKey","useSaveAppearanceChanges","saveChanges","changes","BlockerDialog","isBlocked","allowedPath","reset","proceed","useBlocker","nextLocation","handleBeforeUnload","AppearanceEditorForm","breadcrumb","blockerAllowedPath","isDirty","useFormState","subscription","AppearanceEditorLayout","AppearanceEditorHeader","isSaving","usePreviousPath","location","AppearanceEditorBreadcrumb","backLink","childrenArray","Children","previousPath","sections","LabelList","isEmphasized","GeneralSection","BrandingImageSelector","SiteNameTextField","SiteDescriptionTextArea","defaultValue","randomNumber","min","max","randomBuffer","number","ThemeList","lightThemeColors","currentThemes","NavLink","AceEditor","AceDialog","onSave","footerStartAction","beautify","editorRef","isValid","setIsValid","Footer","startAction","useSeoTags","fetchTags","useUpdateSeoTags","updateTags","tags","pages","names","page","SeoSection","isLoading","FullPageLoader","TagEditorTrigger","TagsEditorDialog","resetButton","CustomCodeSection","CustomCodeDialogTrigger","articlesSvg","USER_MODEL","CustomPageDatatableFilters","dynamicFilters","CustomPageDatatableColumns","LinkStyle","CustomPageDatablePage","SiteConfigContext","AppSettingsNavConfig","filteredSettingsNavConfig","getBootstrapData","SettingsNavConfig","AdminSettingsPage","propsNavConfig","isMobile","navConfig","a","b","MobileNav","DesktopNav","Select","newPage","useGenerateSitemap","generate","useUpdateAdminSettings","updateAdminSettings","server","files","formData","file","SettingsSeparator","SettingsFormLoadingIndicator","AdminSettingsForm","updateSettings","errors","keys","AdminSettingsLayout","headerMargin","LearnMoreLink","link","site","LinkIcon","ExternalLink","GeneralSettings","_c","_d","SiteUrlSection","HomepageSection","ThemeSection","SitemapSection","isInvalid","chunks","homepage","selectedType","option","themes","useBootstrapDataStore","theme","generateSitemap","ColorIcon","colorToThemeValue","parseColor","TuneIcon","ThemeSettingsDialogTrigger","themeIndex","currentTheme","SettingsDialog","RestartAltIcon","ThemeMoreOptionsButton","confirmDialogOpen","setConfirmDialogOpen","deleteTheme","MenuTrigger","path","defaultColors","colorName","themeValue","MoreVertIcon","Menu","MenuItem","u","t","n","o","f","d","h","l","C","E","H","L","w","K","I","q","D","S","T","F","X","Y","V","$","J","Q","U","W","Z","qe","ke","Ie","Oe","ColorPresets","ColorSwatch","colors","presetButtons","isSelected","DefaultPresets","ColorPicker","colorPresets","showInput","setColor","presets","style","getInputFieldClassNames","HexColorPicker","newColor","hex","HexColorInput","ColorPickerDialog","hideFooter","initialValue","navbarColorMap","NavbarColorPicker","selectedValue","previewColor","bgColor","AppearanceSectionTitle","marginTop","colorList","ThemeEditor","selectedFont","isAborted","ColorPickerTrigger","initialThemeValue","selectedThemeValue","setSelectedThemeValue","selectThemeValue","themeValueToHex","valueChanged","TabContext","Tabs","size","isLazy","overflow","tabsRef","selectedTab","setSelectedTab","ContextValue","TabLine","setStyle","useLayoutEffect","prevState","TabList","center","expand","border","FocusScope","child","isValidElement","Tab","isDisabled","paddingProp","relative","width","height","focusManager","useFocusManager","mergedClassname","textColor","onKeyDown","tabIndex","TabPanels","panelArray","rendered","panel","TabPanel","domProps","setTabIndex","update","walker","getFocusableTreeWalker","observer","SettingsErrorGroup","separatorBottom","separatorTop","error","JsonChipField","onBlur","invalid","arrayValue","mixedValue","ChipField","SubscriptionSettings","_e","_g","_f","_i","_h","_k","_j","_l","_m","_n","_o","_p","_q","PaypalSection","StripeSection","paypalIsEnabled","stripeEnabled","LocalizationSettings","optionQuery","timezones","localizations","today","useCurrentDateTime","timezone","locale","FormRadioGroup","FormRadio","DateFormatPresets","format","AuthenticationSettings","_r","_s","_t","_u","_v","_w","EmailConfirmationSection","EnvatoSection","GoogleSection","FacebookSection","TwitterSection","MailNotSetupWarning","text","settings","envatoLoginEnabled","googleLoginEnabled","facebookLoginEnabled","twitterLoginEnabled","spaceUnits","convertToBytes","unit","MaxValue","FormFileSizeField","setByteValue","byteValue","inputRef","liveValue","setLiveValue","setUnit","amount","newUnit","fromBytes","newBytes","unitSelect","memoize","bytes","pretty","prettyBytes","fetchMaxServerUploadSize","useMaxServerUploadSize","useGenerateDropboxRefreshToken","generateToken","DropboxForm","appKey","appSecret","refreshToken","DropboxRefreshTokenDialog","generateRefreshToken","useUploadS3Cors","uploadCors","UploadingSettings","PrivateUploadSection","PublicUploadSection","CredentialsSection","MaxUploadSizeSection","clearErrors","drives","S3Form","FtpForm","DigitalOceanForm","BackblazeForm","S3DirectUploadField","defaultSettings","s3DriverEnabled","MailgunCredentials","SmtpCredentials","SesCredentials","PostmarkCredentials","GmailIcon","ConnectGmailPanel","connectSocial","useSocialLogin","connectedEmail","handleGmailConnect","email","connectButton","reconnectPanel","OutgoingMailGroup","selectedDriver","credentialForms","CredentialsForm","OutgoingEmailSettings","ContactAddressSection","contactPageUrl","clearCache","useClearCache","CacheSettings","CacheSelect","cacheDriver","CredentialSection","MemcachedCredentials","LoggingSettings","SentrySection","parts","useQueueStats","fetchStats","QueueSettings","StatusWidget","DriverSection","status","OpenInNewIcon","queueDriver","SqsCredentials","WebsocketSettings","control","driver","PusherFields","AblyFields","RecaptchaSettings","RecaptchaSection","FileField","useObjectRef","fieldProps","inputProps","useField","inputFieldClassNames","Field","FormFileField","ReportsSettings","AnalyticsSection","useStickySentinel","isSticky","setIsSticky","observerRef","sentinelRef","useCallback","sentinel","CrupdateResourceLayout","onSubmit","subTitle","actions","backButton","disableSaveWhenNotDirty","wrapInContainer","submitButtonText","saveButton","CrupdateResourceHeader","DirtyFormSaveDrawer","startActions","endActions","CrupdateResourceSection","margin","labelMargin","formState","UpdateUserPageHeader","badge","isSuspended","banReason","AvatarSelector","ErrorOutlineIcon","uploadAvatar","useUploadAvatar","removeAvatar","useRemoveAvatar","ImageSelector","onSuccess","useUrlBackedTabs","tabName","tab","updateUserPageTabs","UpdateUserPageTabs","tabs","authUser","hasPermission","apiEnabled","filteredTabs","activeTab","setActiveTab","useDeleteUser","deleteUser","UpdateUserPageActions","deleteDialogOpen","setDeleteDialogOpen","DeleteUserDialog","KeyboardArrowDownIcon","openDialog","UpdateUserPage","query","useUser","PageContent","PageStatus","ArrowBackIcon","TranslateIcon","getLocalWithLinesQueryKey","localeId","useLocaleWithLines","fetchLocaleWithLines","UpdateLocalization","useUpdateLocalization","UpdateLocalizationDialog","localization","languages","updateLocalization","language","createLocalization","useCreateLocalization","CreateLocationDialog","aroundTheWorldSvg","useUploadTranslationFile","uploadFile","columnConfig","RowActionsMenuTrigger","LocalizationIndex","openUploadWindow","FileInputType","NewTranslationDialog","TranslationManagementPage","lines","setLines","searchQuery","setSearchQuery","Header","LinesList","Breadcrumb","BreadcrumbItem","SearchIcon","newTranslation","newLines","ActionsMenuTrigger","filteredLines","translation","lowerCaseQuery","rowVirtualizer","useVirtualizer","virtualItem","ImageZoomDialog","images","activeIndex","setActiveIndex","src","AdsPage","AdsForm","defaultValues","ads","ad","AdSection","adConfig","SectionList","sortedSection","section","RoleIndexPageFilters","RolesIndexPage","Endpoint","useRole","roleId","fetchRole","useUpdateRole","updateRole","CrupdateRolePageSettingsPanel","isInternal","workspaces","watchedType","SelectUserDialog","multiple","searchTerm","setSearchTerm","useNormalizedModels","users","selectedUsers","setSelectedUsers","emptyStateMessage","UserListItem","onSelected","useRemoveUsersFromRole","userIds","removeUsersFromRole","useAddUsersToRole","addUsersToRole","userColumn","desktopColumns","mobileColumns","EditRolePageUsersPanel","AssignUserAction","RemoveUsersAction","addUsers","removeUsers","EditRolePage","useCreateRole","createRole","CreateRolePage","TagIndexPageFilters","types","softwareEngineerSvg","CrupdateTagForm","isSystem","root","factory","module","this","charMap","locales","replace","replacement","trim","slug","ch","appendChar","customMap","slugifyString","strict","slugified","slugify","useCreateNewTag","createNewTag","CreateTagDialog","useUpdateTag","updateTag","UpdateTagDialog","tag","TagIndexPage","VisibilityIcon","uploadSvg","FILE_ENTRY_TYPE_FILTER","FILE_ENTRY_INDEX_FILTERS","entry","owner","FileTypeIcon","FormattedBytes","FilePreviewDialog","FileEntryIndexPage","SubscriptionIndexPageFilters","subscriptionsSvg","useUpdateSubscription","updateSubscription","CrupdateSubscriptionForm","useProducts","watchedProductId","selectedProduct","FormNormalizedModelField","product","price","FormattedPrice","UpdateSubscriptionDialog","useCreateSubscription","createNewSubscription","CreateSubscriptionDialog","createSubscription","PauseIcon","PlayArrowIcon","SubscriptionActions","SubscriptionsIndexPage","PageActions","ResumeSubscriptionButton","SuspendSubscriptionButton","CancelSubscriptionButton","cancelSubscription","useCancelSubscription","handleSuspendSubscription","resumeSubscription","useResumeSubscription","handleResumeSubscription","handleDeleteSubscription","SyncIcon","useSyncProducts","syncPlans","useDeleteProduct","updateProduct","productId","PlansIndexPageFilters","DeleteProductButton","PlansIndexPage","deleteProduct","useProduct","fetchProduct","BillingPeriodPresets","PriceForm","onRemovePrice","currencies","isNewProduct","isNewPrice","subscriberCount","billingPeriodPreset","setBillingPeriodPreset","interval","intervalCount","preset","allowPriceChanges","BillingPeriodSelect","CustomBillingPeriodField","onValueChange","setFormValue","maxIntervalCount","CrupdatePlanForm","FeatureListForm","PricingListForm","remove","useUpdateProduct","backendPayload","feature","EditPlanPage","useCreateProduct","createProduct","CreatePlanPage","GdprSettings","CookieNoticeSection","RegistrationPoliciesSection","noticeEnabled","useUpdateCustomPage","pageId","finalEndpoint","updatePage","ArticleEditorTitle","editingTitle","setEditingTitle","watchedTitle","titlePlaceholder","SlugEditor","host","placeholder","onInputBlur","showLinkIcon","pattern","minLength","maxLength","hideButton","prefix","suffix","isEditing","setIsEditing","handleSubmit","UndoIcon","RedoIcon","HistoryButtons","editor","CodeIcon","ModeButton","Divider","FormatBoldIcon","FormatItalicIcon","FormatUnderlinedIcon","FontStyleButtons","FormatListBulletedIcon","FormatListNumberedIcon","ListButtons","bulletActive","orderedActive","insertLinkIntoTextEditor","LinkButton","LinkDialog","previousUrl","previousText","ImageIcon","TwoMB","ImageButton","diskPrefix","selectAndUploadFile","useActiveUpload","handleUpload","Disk","FormatClearIcon","ClearFormatButton","HorizontalRuleIcon","PriorityHighIcon","NoteIcon","SmartDisplayIcon","InsertMenuTrigger","dialog","setDialog","WarningIcon","EmbedDialog","previousSrc","Keyboard","modifier","separator","modKey","isMac","FormatMenuTrigger","FormatColorTextIcon","FormatColorFillIcon","ColorButtons","textActive","backgroundActive","FormatAlignLeftIcon","FormatAlignCenterIcon","FormatAlignRightIcon","FormatAlignJustifyIcon","iconMap","AlignButtons","activeKey","ActiveIcon","FormatIndentDecreaseIcon","FormatIndentIncreaseIcon","IndentButtons","CodeBlockMenuTrigger","MenubarRowClassName","ArticleBodyEditorMenubar","justify","hideInsertButton","imageDiskPrefix","extendedVisible","setExtendedVisible","UnfoldLessIcon","UnfoldMoreIcon","ExtendedButtons","ArticleEditorStickyHeader","allowSlugEditing","slugPrefix","FormSlugEditor","SaveButton","manuallyChanged","formVal","ArticleBodyEditor","EditCustomPage","useCustomPage","PageMetaTags","crupdatePage","handleSave","editorContent","content","FormProvider","useCreateCustomPage","createPage","CreateCustomPage","fontImage","FontSelectorFilters","setFilters","BrowserSafeFonts","chunkArray","chunkSize","resultArray","chunkIndex","useFilter","collator","useCollator","substring","scan","sliceLen","slice","useFontSelectorState","currentPage","setCurrentPage","setFilterState","contains","allFonts","filteredFonts","fonts","loadFonts","FontSelectorPagination","total","FontSelector","FontList","gridClassName","FontListSkeleton","FontButton","displayName","ThemeFontPanel","radiusMap","ThemeRadiusPanel","RadiusSelector","hidePill","formKey","currentValue","PreviewButton","radius","LogsPage","BooleanIndicator","useRerunScheduledCommand","rerunCommand","EventRepeatIcon","ScheduleDatatableColumns","FormattedRelativeTime","RerunButton","timelineImage","DownloadIcon","ScheduleLogDatatable","bugFixingImage","ErrorLogDatatableColumns","InfoIcon","ErrorLogEntryDialog","downloadLogItem","useDeleteErrorLog","deleteLogFile","identifier","ErrorLogDatatable","setParams","setOnce","selectedFile","setSelectedFile","firstFile","FileSelector","ConfirmDeleteDialog","deleteLog","closeDialog","openedImage","useOutgoingEmailLogItemWithMime","fetchLogItem","OutgoingEmailLogEntryDialog","logItemId","iframe","OutgoingEmailLogDatatableColumns","StatusChip","PreviewEmailButton","OutgoingEmailLogDatatableFilters","OutgoingEmailLogDatatable","UserRoleSection","setQuery","suggestion","useUpdateUser","updateUser","UpdateUserForm","useOutletContext","UpdateUserDetailsTab","EmailConfirmSection","resendConfirmationEmail","useResendVerificationEmail","require_email_confirmation","UpdateUserPermissionsTab","UpdateUserDatetimeTab","LocalizationPanel","UpdateUserApiTab","AccessTokenPanel","UpdateUserSecurityTab","ChangePasswordPanel","TwoFactorPanel","SocialLoginPanel","SessionsPanel","ThemeEditorForm","ThemeEditorBreadcrumb","lastSegment","allThemes","activeTheme","MenuEditorForm","MenuEditorBreadcrumb","allMenus","activeMenu","activeItem","DriveSettings","LandingPageAppearanceForm","BaseSlider","inline","showValueLabel","slider","trackColor","fillColor","trackRef","getThumbPercent","getThumbValueLabel","labelId","groupId","thumbIds","numberFormatter","minValue","maxValue","step","getValueLabel","outputValue","maxLabelLength","wrapperClassname","getWrapperHeight","getTrackColor","getTrackHeight","getFillColor","wrapperHeight","useSlider","formatOptions","onChangeEnd","onPointerDown","showThumbOnHoverOnly","thumbSize","onPointerMove","isPointerOver","setIsPointerOver","useNumberFormatter","addGlobalListener","removeGlobalListener","useGlobalListeners","setValues","valuesRef","draggedThumbs","setDraggedThumbs","draggedThumbsRef","getFormattedValue","isThumbDragging","getThumbMinValue","getThumbMaxValue","setThumbValue","isThumbEditable","thisMin","thisMax","snapValueToStep","replaceIndex","updateDraggedThumbs","dragging","wasDragging","focusedThumb","setFocusedThumb","getValuePercent","setThumbPercent","percent","getPercentValue","getRoundedValue","val","editableThumbsRef","setThumbEditable","editable","realTimeTrackDraggingIndex","currentPointer","handlePointerDown","trackPosition","closestThumb","split","lastLeft","firstRight","onUpTrack","currentPosition","moveDomProps","usePointerEvents","deltaX","SliderThumb","isThumbDisabled","ariaLabel","inputObjRef","isSliderDisabled","isDragging","focusInput","isFocused","handlePointerUp","thumbColor","createEventHandler","Slider","baseProps","FormSlider","LandingPageSectionGeneral","HeaderSection","FooterSection","defaultImage","formValue","LandingPageSectionActionButtons","expandedValues","setExpandedValues","LandingPageSectionPrimaryFeatures","FeatureForm","LandingPageSecondaryFeatures","getDefaultImage"],"sources":["../../../node_modules/@tanstack/react-query/build/modern/useMutationState.js","../../../common/foundation/resources/client/ui/dashboard-layout/dashboard-left-sidebar.tsx","../../../common/foundation/resources/client/ui/library/icons/material/KeyboardArrowUp.tsx","../../../common/foundation/resources/client/admin/admin-sidebar.tsx","../../../common/foundation/resources/client/admin/use-admin-setup-alerts.ts","../../../common/foundation/resources/client/admin/admin-layout.tsx","../../../common/foundation/resources/client/datatable/filters/timestamp-filters.ts","../../../common/foundation/resources/client/admin/users/user-datatable-filters.ts","../../../common/foundation/resources/client/datatable/page/data-table-page.tsx","../../../common/foundation/resources/client/datatable/requests/delete-selected-rows.ts","../../../common/foundation/resources/client/datatable/page/delete-selected-items-action.tsx","../../../common/foundation/resources/client/admin/roles/team.svg","../../../common/foundation/resources/client/datatable/data-table-add-item-button.tsx","../../../common/foundation/resources/client/datatable/requests/use-export-csv.ts","../../../common/foundation/resources/client/datatable/csv-export/csv-export-info-dialog.tsx","../../../common/foundation/resources/client/datatable/csv-export/data-table-export-csv-button.tsx","../../../common/foundation/resources/client/datatable/column-templates/name-with-avatar.tsx","../../../common/foundation/resources/client/ui/library/icons/material/PersonOff.tsx","../../../common/foundation/resources/client/admin/users/requests/use-ban-user.ts","../../../common/foundation/resources/client/admin/users/ban-user-dialog.tsx","../../../common/foundation/resources/client/admin/users/requests/use-unban-user.ts","../../../common/foundation/resources/client/admin/users/requests/use-impersonate-user.ts","../../../common/foundation/resources/client/admin/users/user-datatable-columns.tsx","../../../common/foundation/resources/client/admin/users/requests/create-user.ts","../../../common/foundation/resources/client/admin/users/create-user-dialog.tsx","../../../common/foundation/resources/client/admin/users/user-datatable.tsx","../../../node_modules/zustand/esm/middleware.mjs","../../../common/foundation/resources/client/admin/appearance/config/default-appearance-config.ts","../../../common/foundation/resources/client/admin/appearance/config/merged-appearance-config.ts","../../../common/foundation/resources/client/admin/appearance/appearance-store.ts","../../../common/foundation/resources/client/admin/settings/requests/use-admin-settings.ts","../../../common/foundation/resources/client/admin/appearance/requests/use-appearance-editor-values.ts","../../../common/foundation/resources/client/admin/appearance/appearance-editor-page.tsx","../../../common/foundation/resources/client/admin/appearance/appearance-button.tsx","../../../common/foundation/resources/client/admin/appearance/sections/menus/menu-list.tsx","../../../common/foundation/resources/client/admin/appearance/sections/menus/hooks/available-routes.ts","../../../common/foundation/resources/client/ui/library/utils/string/uc-first.ts","../../../common/foundation/resources/client/admin/appearance/sections/menus/add-menu-item-dialog.tsx","../../../common/foundation/resources/client/ui/library/icons/material/DragIndicator.tsx","../../../common/foundation/resources/client/admin/appearance/sections/menus/dropdown-menu.svg","../../../common/foundation/resources/client/ui/library/interactions/dnd/sortable/sortable-line-strategy.ts","../../../common/foundation/resources/client/ui/library/utils/array/move-item-in-array.ts","../../../common/foundation/resources/client/ui/library/utils/array/move-item-in-new-array.ts","../../../common/foundation/resources/client/ui/library/interactions/dnd/sortable/sortable-transform-strategy.ts","../../../common/foundation/resources/client/ui/library/interactions/dnd/sortable/sortable-move-node-strategy.ts","../../../common/foundation/resources/client/ui/library/interactions/dnd/sortable/use-sortable.ts","../../../common/foundation/resources/client/admin/appearance/sections/menus/appearance-menu-editor.tsx","../../../common/foundation/resources/client/auth/ui/permission-selector.tsx","../../../common/foundation/resources/client/ui/icon-picker/icon-grid-style.ts","../../../common/foundation/resources/client/ui/icon-picker/icon-picker.tsx","../../../common/foundation/resources/client/ui/icon-picker/icon-picker-dialog.tsx","../../../common/foundation/resources/client/admin/menus/menu-item-form.tsx","../../../common/foundation/resources/client/admin/appearance/sections/menus/menu-item-editor.tsx","../../../common/foundation/resources/client/admin/appearance/requests/use-save-appearance-editor-changes.ts","../../../common/foundation/resources/client/ui/library/overlays/dialog/blocker-dialog.tsx","../../../common/foundation/resources/client/admin/appearance/appearance-editor-form.tsx","../../../common/foundation/resources/client/ui/navigation/use-previous-path.ts","../../../common/foundation/resources/client/admin/appearance/appearance-editor-breadcrumb.tsx","../../../common/foundation/resources/client/admin/appearance/sections/general-section.tsx","../../../common/foundation/resources/client/ui/library/utils/string/random-number.ts","../../../common/foundation/resources/client/admin/appearance/sections/themes/theme-list.tsx","../../../common/foundation/resources/client/ace-editor/ace-dialog.tsx","../../../common/foundation/resources/client/admin/appearance/sections/seo/use-seo-tags.ts","../../../common/foundation/resources/client/admin/appearance/sections/seo/use-update-seo-tags.ts","../../../common/foundation/resources/client/admin/appearance/sections/seo/seo-section.tsx","../../../common/foundation/resources/client/admin/appearance/sections/code/custom-code-section.tsx","../../../common/foundation/resources/client/admin/custom-pages/articles.svg","../../../common/foundation/resources/client/ui/library/types/user.ts","../../../common/foundation/resources/client/admin/custom-pages/custom-page-datatable-filters.tsx","../../../common/foundation/resources/client/admin/custom-pages/custom-page-datatable-columns.tsx","../../../common/foundation/resources/client/admin/custom-pages/custom-page-datable-page.tsx","../../../resources/client/admin/settings/app-settings-nav-config.ts","../../../common/foundation/resources/client/admin/settings/settings-nav-config.ts","../../../common/foundation/resources/client/admin/settings/admin-settings-page.tsx","../../../common/foundation/resources/client/admin/settings/requests/use-generate-sitemap.ts","../../../common/foundation/resources/client/admin/settings/requests/use-update-admin-settings.ts","../../../common/foundation/resources/client/admin/settings/form/settings-separator.tsx","../../../common/foundation/resources/client/admin/settings/form/settings-form-loading-indicator.tsx","../../../common/foundation/resources/client/admin/settings/form/admin-settings-form.tsx","../../../common/foundation/resources/client/admin/settings/form/learn-more-link.tsx","../../../common/foundation/resources/client/admin/settings/pages/general-settings.tsx","../../../common/foundation/resources/client/admin/appearance/sections/themes/color-icon.tsx","../../../common/foundation/resources/client/ui/library/themes/utils/color-to-theme-value.ts","../../../common/foundation/resources/client/ui/library/icons/material/Tune.tsx","../../../common/foundation/resources/client/admin/appearance/sections/themes/theme-settings-dialog-trigger.tsx","../../../common/foundation/resources/client/ui/library/icons/material/RestartAlt.tsx","../../../common/foundation/resources/client/admin/appearance/sections/themes/theme-more-options-button.tsx","../../../node_modules/react-colorful/dist/index.mjs","../../../common/foundation/resources/client/ui/library/color-picker/color-presets.ts","../../../common/foundation/resources/client/ui/library/color-picker/color-swatch.tsx","../../../common/foundation/resources/client/ui/library/color-picker/color-picker.tsx","../../../common/foundation/resources/client/ui/library/color-picker/color-picker-dialog.tsx","../../../common/foundation/resources/client/admin/appearance/sections/themes/navbar-color-picker.tsx","../../../common/foundation/resources/client/admin/appearance/appearance-section-title.tsx","../../../common/foundation/resources/client/admin/appearance/sections/themes/theme-editor.tsx","../../../common/foundation/resources/client/ui/library/tabs/tabs-context.tsx","../../../common/foundation/resources/client/ui/library/tabs/tabs.tsx","../../../common/foundation/resources/client/ui/library/tabs/tab-line.tsx","../../../common/foundation/resources/client/ui/library/tabs/tab-list.tsx","../../../common/foundation/resources/client/ui/library/tabs/tab.tsx","../../../common/foundation/resources/client/ui/library/tabs/tab-panels.tsx","../../../common/foundation/resources/client/admin/settings/form/settings-error-group.tsx","../../../common/foundation/resources/client/admin/settings/form/json-chip-field.tsx","../../../common/foundation/resources/client/admin/settings/pages/subscription-settings.tsx","../../../common/foundation/resources/client/admin/settings/pages/localization-settings.tsx","../../../common/foundation/resources/client/admin/settings/pages/authentication-settings.tsx","../../../common/foundation/resources/client/ui/library/utils/files/space-units.ts","../../../common/foundation/resources/client/ui/library/utils/files/convert-to-bytes.ts","../../../common/foundation/resources/client/uploads/components/file-size-field.tsx","../../../common/foundation/resources/client/admin/settings/pages/uploading-settings/max-server-upload-size.ts","../../../common/foundation/resources/client/admin/settings/pages/uploading-settings/dropbox-form/use-generate-dropbox-refresh-token.ts","../../../common/foundation/resources/client/admin/settings/pages/uploading-settings/dropbox-form/dropbox-form.tsx","../../../common/foundation/resources/client/admin/settings/pages/uploading-settings/use-upload-s3-cors.ts","../../../common/foundation/resources/client/admin/settings/pages/uploading-settings/uploading-settings.tsx","../../../common/foundation/resources/client/admin/settings/pages/mail-settings/mailgun-credentials.tsx","../../../common/foundation/resources/client/admin/settings/pages/mail-settings/smtp-credentials.tsx","../../../common/foundation/resources/client/admin/settings/pages/mail-settings/ses-credentials.tsx","../../../common/foundation/resources/client/admin/settings/pages/mail-settings/postmark-credentials.tsx","../../../common/foundation/resources/client/admin/settings/pages/mail-settings/gmail-icon.tsx","../../../common/foundation/resources/client/admin/settings/pages/mail-settings/connect-gmail-panel.tsx","../../../common/foundation/resources/client/admin/settings/pages/mail-settings/outgoing-mail-group.tsx","../../../common/foundation/resources/client/admin/settings/pages/mail-settings/outgoing-email-settings.tsx","../../../common/foundation/resources/client/admin/settings/pages/cache-settings/clear-cache.ts","../../../common/foundation/resources/client/admin/settings/pages/cache-settings/cache-settings.tsx","../../../common/foundation/resources/client/admin/settings/pages/logging-settings.tsx","../../../common/foundation/resources/client/admin/settings/requests/use-queue-stats.ts","../../../common/foundation/resources/client/admin/settings/pages/queue-settings.tsx","../../../common/foundation/resources/client/admin/settings/pages/websocket-settings.tsx","../../../common/foundation/resources/client/admin/settings/pages/recaptcha-settings.tsx","../../../common/foundation/resources/client/ui/library/forms/input-field/file-field.tsx","../../../common/foundation/resources/client/admin/settings/pages/reports-settings.tsx","../../../common/foundation/resources/client/ui/library/utils/hooks/sticky-sentinel.ts","../../../common/foundation/resources/client/admin/crupdate-resource-layout.tsx","../../../common/foundation/resources/client/admin/users/update-user-page/update-user-page-header.tsx","../../../common/foundation/resources/client/http/use-url-backed-tabs.ts","../../../common/foundation/resources/client/admin/users/update-user-page/update-user-page-tabs.tsx","../../../common/foundation/resources/client/admin/users/requests/use-delete-user.ts","../../../common/foundation/resources/client/admin/users/update-user-page/update-user-page-actions.tsx","../../../common/foundation/resources/client/admin/users/update-user-page/update-user-page.tsx","../../../common/foundation/resources/client/ui/library/icons/material/Translate.tsx","../../../common/foundation/resources/client/admin/translations/use-locale-with-lines.ts","../../../common/foundation/resources/client/admin/translations/update-localization.ts","../../../common/foundation/resources/client/admin/translations/update-localization-dialog.tsx","../../../common/foundation/resources/client/admin/translations/create-localization.ts","../../../common/foundation/resources/client/admin/translations/create-localization-dialog.tsx","../../../common/foundation/resources/client/admin/translations/around-the-world.svg","../../../common/foundation/resources/client/admin/translations/use-upload-translation-file.ts","../../../common/foundation/resources/client/admin/translations/localization-index.tsx","../../../common/foundation/resources/client/admin/translations/new-translation-dialog.tsx","../../../common/foundation/resources/client/admin/translations/translation-management-page.tsx","../../../common/foundation/resources/client/ui/library/overlays/dialog/image-zoom-dialog.tsx","../../../common/foundation/resources/client/admin/ads/ads-page.tsx","../../../common/foundation/resources/client/admin/appearance/section-list.tsx","../../../common/foundation/resources/client/admin/roles/role-index-page-filters.ts","../../../common/foundation/resources/client/admin/roles/roles-index-page.tsx","../../../common/foundation/resources/client/admin/roles/requests/use-role.ts","../../../common/foundation/resources/client/admin/roles/requests/use-update-role.ts","../../../common/foundation/resources/client/admin/roles/crupdate-role-page/crupdate-role-settings-panel.tsx","../../../common/foundation/resources/client/users/select-user-dialog.tsx","../../../common/foundation/resources/client/admin/roles/requests/use-remove-users-from-role.ts","../../../common/foundation/resources/client/admin/roles/requests/use-add-users-to-role.ts","../../../common/foundation/resources/client/admin/roles/crupdate-role-page/edit-role-page-users-panel.tsx","../../../common/foundation/resources/client/admin/roles/crupdate-role-page/edit-role-page.tsx","../../../common/foundation/resources/client/admin/roles/requests/user-create-role.ts","../../../common/foundation/resources/client/admin/roles/crupdate-role-page/create-role-page.tsx","../../../common/foundation/resources/client/admin/tags/tag-index-page-filters.ts","../../../common/foundation/resources/client/admin/tags/software-engineer.svg","../../../common/foundation/resources/client/admin/tags/crupdate-tag-form.tsx","../../../node_modules/slugify/slugify.js","../../../common/foundation/resources/client/ui/library/utils/string/slugify-string.ts","../../../common/foundation/resources/client/admin/tags/requests/use-create-new-tag.ts","../../../common/foundation/resources/client/admin/tags/create-tag-dialog.tsx","../../../common/foundation/resources/client/admin/tags/requests/use-update-tag.ts","../../../common/foundation/resources/client/admin/tags/update-tag-dialog.tsx","../../../common/foundation/resources/client/admin/tags/tag-index-page.tsx","../../../common/foundation/resources/client/ui/library/icons/material/Visibility.tsx","../../../common/foundation/resources/client/admin/file-entry/upload.svg","../../../common/foundation/resources/client/admin/file-entry/file-entry-index-filters.ts","../../../common/foundation/resources/client/admin/file-entry/file-entry-index-page.tsx","../../../common/foundation/resources/client/admin/subscriptions/subscription-index-page-filters.ts","../../../common/foundation/resources/client/admin/subscriptions/subscriptions.svg","../../../common/foundation/resources/client/admin/subscriptions/requests/use-update-subscription.ts","../../../common/foundation/resources/client/admin/subscriptions/crupdate-subscription-form.tsx","../../../common/foundation/resources/client/admin/subscriptions/update-subscription-dialog.tsx","../../../common/foundation/resources/client/admin/subscriptions/requests/use-create-subscription.ts","../../../common/foundation/resources/client/admin/subscriptions/create-subscription-dialog.tsx","../../../common/foundation/resources/client/ui/library/icons/material/Pause.tsx","../../../common/foundation/resources/client/ui/library/icons/material/PlayArrow.tsx","../../../common/foundation/resources/client/admin/subscriptions/subscriptions-index-page.tsx","../../../common/foundation/resources/client/ui/library/icons/material/Sync.tsx","../../../common/foundation/resources/client/admin/plans/requests/use-sync-products.ts","../../../common/foundation/resources/client/admin/plans/requests/use-delete-product.ts","../../../common/foundation/resources/client/admin/plans/plans-index-page-filters.ts","../../../common/foundation/resources/client/admin/plans/plans-index-page.tsx","../../../common/foundation/resources/client/admin/plans/requests/use-product.ts","../../../common/foundation/resources/client/admin/plans/crupdate-plan-page/billing-period-presets.ts","../../../common/foundation/resources/client/admin/plans/crupdate-plan-page/price-form.tsx","../../../common/foundation/resources/client/admin/plans/crupdate-plan-page/crupdate-plan-form.tsx","../../../common/foundation/resources/client/admin/plans/requests/use-update-product.ts","../../../common/foundation/resources/client/admin/plans/crupdate-plan-page/edit-plan-page.tsx","../../../common/foundation/resources/client/admin/plans/requests/use-create-product.ts","../../../common/foundation/resources/client/admin/plans/crupdate-plan-page/create-plan-page.tsx","../../../common/foundation/resources/client/admin/settings/pages/gdpr-settings.tsx","../../../common/foundation/resources/client/admin/custom-pages/requests/use-update-custom-page.ts","../../../common/foundation/resources/client/article-editor/article-editor-title.tsx","../../../common/foundation/resources/client/ui/other/slug-editor.tsx","../../../common/foundation/resources/client/ui/library/icons/material/Undo.tsx","../../../common/foundation/resources/client/ui/library/icons/material/Redo.tsx","../../../common/foundation/resources/client/text-editor/menubar/history-buttons.tsx","../../../common/foundation/resources/client/ui/library/icons/material/Code.tsx","../../../common/foundation/resources/client/text-editor/menubar/mode-button.tsx","../../../common/foundation/resources/client/text-editor/menubar/divider.tsx","../../../common/foundation/resources/client/ui/library/icons/material/FormatBold.tsx","../../../common/foundation/resources/client/ui/library/icons/material/FormatItalic.tsx","../../../common/foundation/resources/client/ui/library/icons/material/FormatUnderlined.tsx","../../../common/foundation/resources/client/text-editor/menubar/font-style-buttons.tsx","../../../common/foundation/resources/client/ui/library/icons/material/FormatListBulleted.tsx","../../../common/foundation/resources/client/ui/library/icons/material/FormatListNumbered.tsx","../../../common/foundation/resources/client/text-editor/menubar/list-buttons.tsx","../../../common/foundation/resources/client/text-editor/insert-link-into-text-editor.ts","../../../common/foundation/resources/client/text-editor/menubar/link-button.tsx","../../../common/foundation/resources/client/ui/library/icons/material/Image.tsx","../../../common/foundation/resources/client/text-editor/menubar/image-button.tsx","../../../common/foundation/resources/client/ui/library/icons/material/FormatClear.tsx","../../../common/foundation/resources/client/text-editor/menubar/clear-format-button.tsx","../../../common/foundation/resources/client/ui/library/icons/material/HorizontalRule.tsx","../../../common/foundation/resources/client/ui/library/icons/material/PriorityHigh.tsx","../../../common/foundation/resources/client/ui/library/icons/material/Note.tsx","../../../common/foundation/resources/client/ui/library/icons/material/SmartDisplay.tsx","../../../common/foundation/resources/client/text-editor/menubar/insert-menu-trigger.tsx","../../../common/foundation/resources/client/ui/library/keyboard/keyboard.tsx","../../../common/foundation/resources/client/text-editor/menubar/format-menu-trigger.tsx","../../../common/foundation/resources/client/ui/library/icons/material/FormatColorText.tsx","../../../common/foundation/resources/client/ui/library/icons/material/FormatColorFill.tsx","../../../common/foundation/resources/client/text-editor/menubar/color-buttons.tsx","../../../common/foundation/resources/client/ui/library/icons/material/FormatAlignLeft.tsx","../../../common/foundation/resources/client/ui/library/icons/material/FormatAlignCenter.tsx","../../../common/foundation/resources/client/ui/library/icons/material/FormatAlignRight.tsx","../../../common/foundation/resources/client/ui/library/icons/material/FormatAlignJustify.tsx","../../../common/foundation/resources/client/text-editor/menubar/align-buttons.tsx","../../../common/foundation/resources/client/ui/library/icons/material/FormatIndentDecrease.tsx","../../../common/foundation/resources/client/ui/library/icons/material/FormatIndentIncrease.tsx","../../../common/foundation/resources/client/text-editor/menubar/indent-buttons.tsx","../../../common/foundation/resources/client/text-editor/menubar/code-block-menu-trigger.tsx","../../../common/foundation/resources/client/article-editor/article-body-editor-menubar.tsx","../../../common/foundation/resources/client/article-editor/article-editor-sticky-header.tsx","../../../common/foundation/resources/client/admin/custom-pages/edit-custom-page.tsx","../../../common/foundation/resources/client/admin/custom-pages/requests/use-create-custom-page.ts","../../../common/foundation/resources/client/admin/custom-pages/create-custom-page.tsx","../../../common/foundation/resources/client/ui/font-selector/font.svg","../../../common/foundation/resources/client/ui/font-selector/font-selector-filters.tsx","../../../common/foundation/resources/client/ui/library/fonts/font-picker/browser-safe-fonts.ts","../../../common/foundation/resources/client/ui/library/utils/array/chunk-array.ts","../../../common/foundation/resources/client/ui/library/i18n/use-filter.ts","../../../common/foundation/resources/client/ui/font-selector/font-selector-state.ts","../../../common/foundation/resources/client/ui/font-selector/font-selector-pagination.tsx","../../../common/foundation/resources/client/ui/font-selector/font-selector.tsx","../../../common/foundation/resources/client/admin/appearance/sections/themes/theme-font-panel.tsx","../../../common/foundation/resources/client/admin/appearance/sections/themes/theme-radius-panel.tsx","../../../common/foundation/resources/client/admin/logging/logs-page.tsx","../../../common/foundation/resources/client/datatable/column-templates/boolean-indicator.tsx","../../../common/foundation/resources/client/admin/logging/schedule/use-rerurun-scheduled-command.tsx","../../../common/foundation/resources/client/ui/library/icons/material/EventRepeat.tsx","../../../common/foundation/resources/client/admin/logging/schedule/schedule-datatable-columns.tsx","../../../common/foundation/resources/client/admin/logging/schedule/timeline.svg","../../../common/foundation/resources/client/ui/library/icons/material/Download.tsx","../../../common/foundation/resources/client/admin/logging/schedule/schedule-log-datatable.tsx","../../../common/foundation/resources/client/admin/logging/error/bug-fixing.svg","../../../common/foundation/resources/client/admin/logging/error/error-log-datatable-columns.tsx","../../../common/foundation/resources/client/admin/logging/error/error-log-entry-dialog.tsx","../../../common/foundation/resources/client/admin/logging/error/use-delete-error-log.ts","../../../common/foundation/resources/client/admin/logging/error/error-log-datatable.tsx","../../../common/foundation/resources/client/admin/logging/outgoing-email/opened.svg","../../../common/foundation/resources/client/admin/logging/outgoing-email/use-outgoing-email-log-item-with-mime.ts","../../../common/foundation/resources/client/admin/logging/outgoing-email/outgoing-email-log-entry-dialog.tsx","../../../common/foundation/resources/client/admin/logging/outgoing-email/outgoing-email-log-datatable-columns.tsx","../../../common/foundation/resources/client/admin/logging/outgoing-email/outgoing-email-log-datatable-filters.tsx","../../../common/foundation/resources/client/admin/logging/outgoing-email/outgoing-email-log-datatable.tsx","../../../common/foundation/resources/client/admin/users/update-user-page/user-role-section.tsx","../../../common/foundation/resources/client/admin/users/requests/user-update-user.ts","../../../common/foundation/resources/client/admin/users/update-user-page/update-user-form.tsx","../../../common/foundation/resources/client/admin/users/update-user-page/update-user-details-tab.tsx","../../../common/foundation/resources/client/admin/users/update-user-page/update-user-permissions-tab.tsx","../../../common/foundation/resources/client/admin/users/update-user-page/update-user-datetime-tab.tsx","../../../common/foundation/resources/client/admin/users/update-user-page/update-user-api-tab.tsx","../../../common/foundation/resources/client/admin/users/update-user-page/update-user-security-tab.tsx","../../../common/foundation/resources/client/admin/appearance/sections/themes/theme-editor-form.tsx","../../../common/foundation/resources/client/admin/appearance/sections/menus/menu-editor-form.tsx","../../../resources/client/admin/settings/drive-settings.tsx","../../../resources/client/admin/appearance/sections/landing-page-section/landing-page-appearance-form.tsx","../../../common/foundation/resources/client/ui/library/forms/slider/base-slider.tsx","../../../common/foundation/resources/client/ui/library/forms/slider/use-slider.ts","../../../common/foundation/resources/client/ui/library/forms/slider/slider-thumb.tsx","../../../common/foundation/resources/client/ui/library/forms/slider/slider.tsx","../../../resources/client/admin/appearance/sections/landing-page-section/landing-page-section-general.tsx","../../../resources/client/admin/appearance/sections/landing-page-section/landing-page-section-action-buttons.tsx","../../../resources/client/admin/appearance/sections/landing-page-section/landing-page-section-primary-features.tsx","../../../resources/client/admin/appearance/sections/landing-page-section/landing-page-section-secondary-features.tsx"],"sourcesContent":["\"use client\";\n\n// src/useMutationState.ts\nimport * as React from \"react\";\nimport { notifyManager, replaceEqualDeep } from \"@tanstack/query-core\";\nimport { useQueryClient } from \"./QueryClientProvider.js\";\nfunction useIsMutating(filters, queryClient) {\n  const client = useQueryClient(queryClient);\n  return useMutationState(\n    { filters: { ...filters, status: \"pending\" } },\n    client\n  ).length;\n}\nfunction getResult(mutationCache, options) {\n  return mutationCache.findAll(options.filters).map(\n    (mutation) => options.select ? options.select(\n      mutation\n    ) : mutation.state\n  );\n}\nfunction useMutationState(options = {}, queryClient) {\n  const mutationCache = useQueryClient(queryClient).getMutationCache();\n  const optionsRef = React.useRef(options);\n  const result = React.useRef();\n  if (!result.current) {\n    result.current = getResult(mutationCache, options);\n  }\n  React.useEffect(() => {\n    optionsRef.current = options;\n  });\n  return React.useSyncExternalStore(\n    React.useCallback(\n      (onStoreChange) => mutationCache.subscribe(() => {\n        const nextResult = replaceEqualDeep(\n          result.current,\n          getResult(mutationCache, optionsRef.current)\n        );\n        if (result.current !== nextResult) {\n          result.current = nextResult;\n          notifyManager.schedule(onStoreChange);\n        }\n      }),\n      [mutationCache]\n    ),\n    () => result.current,\n    () => result.current\n  );\n}\nexport {\n  useIsMutating,\n  useMutationState\n};\n//# sourceMappingURL=useMutationState.js.map","import clsx from 'clsx';\nimport React, {\n  cloneElement,\n  forwardRef,\n  Fragment,\n  JSXElementConstructor,\n  ReactElement,\n  ReactNode,\n  useContext,\n} from 'react';\nimport {CustomMenu, CustomMenuProps} from '@common/menus/custom-menu';\nimport {DashboardSidenavChildrenProps} from '@common/ui/dashboard-layout/dashboard-sidenav';\nimport {Logo} from '@common/ui/navigation/navbar/logo';\nimport {DashboardLayoutContext} from '@common/ui/dashboard-layout/dashboard-layout-context';\nimport {KeyboardArrowLeftIcon} from '@ui/icons/material/KeyboardArrowLeft';\nimport {KeyboardArrowRightIcon} from '@ui/icons/material/KeyboardArrowRight';\nimport {useIsDarkMode} from '@ui/themes/use-is-dark-mode';\nimport {SvgIconProps} from '@ui/icons/svg-icon';\nimport type {To} from 'react-router';\nimport {setInLocalStorage} from '@ui/utils/hooks/local-storage';\n\ntype MatchDescendants = undefined | boolean | ((to: string) => boolean);\n\nexport type DashboardLeftSidebarVariant = 'withoutNavbar' | 'withNavbar';\n\nexport interface DashboardLeftSidebarProps\n  extends DashboardSidenavChildrenProps {\n  matchDescendants?: MatchDescendants;\n  menuName: string;\n  bottomContent?: ReactNode;\n  variant?: DashboardLeftSidebarVariant;\n  customMenuRender?: CustomMenuProps['children'];\n}\nexport function DashboardLeftSidebar({\n  className,\n  isCompactMode = false,\n  matchDescendants,\n  menuName,\n  bottomContent,\n  isOverlayMode,\n  variant = 'withNavbar',\n  customMenuRender,\n}: DashboardLeftSidebarProps) {\n  const isDarkMode = useIsDarkMode();\n  return (\n    <div\n      className={clsx(\n        className,\n        isCompactMode ? 'px-6 pt-6' : 'px-12 pt-26',\n        'relative flex flex-col gap-20 overflow-y-auto overflow-x-hidden bg-alt pb-16 text-sm font-medium text-muted',\n        isOverlayMode && 'border-r',\n      )}\n    >\n      {variant === 'withoutNavbar' && (\n        <Fragment>\n          <Logo\n            color={isDarkMode ? 'light' : 'dark'}\n            logoType={isCompactMode ? 'compact' : 'wide'}\n            className={isCompactMode ? 'mx-auto mt-12' : 'mb-12'}\n            size={isCompactMode ? 'h-34 w-34' : 'h-36'}\n          />\n          <SidebarToggleButton />\n        </Fragment>\n      )}\n\n      <CustomMenu\n        matchDescendants={matchDescendants}\n        menu={menuName}\n        orientation=\"vertical\"\n        onlyShowIcons={isCompactMode}\n        iconSize={isCompactMode ? 'md' : 'sm'}\n        gap={isCompactMode ? 'gap-2' : 'gap-4'}\n        itemClassName={({isActive}) =>\n          dashboardLeftSidebarItemClassName({isActive, isCompactMode})\n        }\n      >\n        {customMenuRender}\n      </CustomMenu>\n      <div className={clsx('mt-auto space-y-2', isCompactMode && 'mx-auto')}>\n        {bottomContent}\n      </div>\n    </div>\n  );\n}\n\nfunction SidebarToggleButton() {\n  const {leftSidenavStatus, setLeftSidenavStatus, name} = useContext(\n    DashboardLayoutContext,\n  );\n\n  const handleToggle = () => {\n    const newStatus = leftSidenavStatus === 'open' ? 'compact' : 'open';\n    setLeftSidenavStatus(newStatus);\n    setInLocalStorage(`${name}.sidenav.compact`, newStatus === 'compact');\n  };\n\n  return (\n    <button\n      className={clsx(\n        'fixed bottom-180 z-10 flex select-none appearance-none items-center justify-center rounded-full border bg align-middle outline-none transition-[left,color,shadow] duration-200 hover:text-primary focus-visible:ring',\n        leftSidenavStatus === 'open' ? 'left-[212px]' : 'left-48',\n      )}\n      onClick={() => handleToggle()}\n    >\n      {leftSidenavStatus === 'open' ? (\n        <KeyboardArrowLeftIcon size=\"sm\" />\n      ) : (\n        <KeyboardArrowRightIcon size=\"sm\" />\n      )}\n    </button>\n  );\n}\n\ninterface DashboardLeftSidebarItemProps {\n  elementType?: 'button' | 'a' | JSXElementConstructor<any>;\n  isCompact?: boolean;\n  children: [ReactElement<SvgIconProps>, ReactNode, ...ReactNode[]];\n  className?: string;\n  to?: To;\n  target?: '_blank';\n}\n\nexport const DashboardLeftSidebarItem = forwardRef<\n  unknown,\n  DashboardLeftSidebarItemProps\n>(\n  (\n    {\n      elementType = 'button',\n      isCompact = false,\n      children: [icon, label, ...otherChildren],\n      className,\n      target,\n      to,\n      ...otherProps\n    },\n    ref,\n  ) => {\n    const Element = elementType;\n    return (\n      <Element\n        ref={ref}\n        {...otherProps}\n        target={target}\n        to={to}\n        className={clsx(\n          className,\n          'flex',\n          isCompact ? 'gap-2' : 'gap-8',\n          dashboardLeftSidebarItemClassName({\n            isActive: false,\n            isCompactMode: isCompact,\n          }),\n        )}\n      >\n        {cloneElement(icon, {size: isCompact ? 'md' : 'sm'})}\n        {!isCompact && label}\n        {otherChildren}\n      </Element>\n    );\n  },\n);\n\nexport function dashboardLeftSidebarItemClassName({\n  isActive,\n  isCompactMode,\n}: {\n  isActive: boolean;\n  isCompactMode: boolean;\n}) {\n  return clsx(\n    'rounded-button',\n    isCompactMode\n      ? 'w-48 h-48 items-center justify-center'\n      : 'w-full py-12 px-16 block justify-start',\n    isActive ? 'bg-primary/6 text-primary font-semibold' : 'hover:bg-hover',\n  );\n}\n","import {createSvgIcon} from '../create-svg-icon';\n\nexport const KeyboardArrowUpIcon = createSvgIcon(\n  <path d=\"M7.41 15.41 12 10.83l4.59 4.58L18 14l-6-6-6 6 1.41 1.41z\" />\n, 'KeyboardArrowUpOutlined');\n","import React, {Fragment, JSXElementConstructor, useContext} from 'react';\nimport {Trans} from '@ui/i18n/trans';\nimport {useSettings} from '@ui/settings/use-settings';\nimport {\n  DashboardLeftSidebar,\n  DashboardLeftSidebarItem,\n  DashboardLeftSidebarProps,\n} from '@common/ui/dashboard-layout/dashboard-left-sidebar';\nimport {DashboardSidenavChildrenProps} from '@common/ui/dashboard-layout/dashboard-sidenav';\nimport {useAuth} from '@common/auth/use-auth';\nimport {DialogTrigger} from '@ui/overlays/dialog/dialog-trigger';\nimport {NotificationsIcon} from '@ui/icons/material/Notifications';\nimport {Badge} from '@ui/badge/badge';\nimport {NotificationsDialog} from '@common/notifications/dialog/notification-dialog-trigger';\nimport {NavbarAuthMenu} from '@common/ui/navigation/navbar/navbar-auth-menu';\nimport {UserAvatar, UserAvatarProps} from '@common/auth/user-avatar';\nimport {DashboardLayoutContext} from '@common/ui/dashboard-layout/dashboard-layout-context';\nimport {KeyboardArrowUpIcon} from '@ui/icons/material/KeyboardArrowUp';\n\ninterface Props extends DashboardSidenavChildrenProps {\n  variant?: DashboardLeftSidebarProps['variant'];\n}\nexport function AdminSidebar(props: Props) {\n  const {version} = useSettings();\n  const {isMobileMode, leftSidenavStatus} = useContext(DashboardLayoutContext);\n  const isCompactMode =\n    isMobileMode || leftSidenavStatus === 'compact' || false;\n\n  const bottomContent = (\n    <Fragment>\n      {props.variant === 'withoutNavbar' && (\n        <Fragment>\n          <AdminSidebarNotificationsItem isCompact={isCompactMode} />\n          <AdminSidebarAuthUserItem isCompact={isCompactMode} />\n        </Fragment>\n      )}\n      {!props.isCompactMode ? (\n        <span>\n          <div className=\"mt-16 overflow-hidden text-ellipsis whitespace-nowrap px-16 text-xs\">\n            <Trans message=\"Version: :number\" values={{number: version}} />\n          </div>\n        </span>\n      ) : undefined}\n    </Fragment>\n  );\n\n  return (\n    <DashboardLeftSidebar\n      {...props}\n      matchDescendants={to => to === '/admin'}\n      menuName=\"admin-sidebar\"\n      bottomContent={bottomContent}\n    />\n  );\n}\n\ninterface AdminSidebarNotificationsItemProps {\n  isCompact: boolean;\n}\nexport function AdminSidebarNotificationsItem({\n  isCompact,\n}: AdminSidebarNotificationsItemProps) {\n  const {user} = useAuth();\n  const hasUnread = !!user?.unread_notifications_count;\n  return (\n    <DialogTrigger type=\"popover\" placement=\"top\">\n      <DashboardLeftSidebarItem isCompact={isCompact} className=\"relative\">\n        <NotificationsIcon />\n        <Trans message=\"Notifications\" />\n        {hasUnread ? (\n          <Badge>{user?.unread_notifications_count}</Badge>\n        ) : undefined}\n      </DashboardLeftSidebarItem>\n      <NotificationsDialog />\n    </DialogTrigger>\n  );\n}\n\ninterface AuthUserItemProps {\n  isCompact: boolean;\n  avatar?: JSXElementConstructor<UserAvatarProps>;\n}\nexport function AdminSidebarAuthUserItem({\n  isCompact,\n  avatar: propsAvatar,\n}: AuthUserItemProps) {\n  const {user} = useAuth();\n  if (!user) return null;\n\n  const ItemAvatar = propsAvatar || UserAvatar;\n  const avatar = <ItemAvatar user={user} size=\"w-32 h-32\" />;\n\n  return (\n    <NavbarAuthMenu placement=\"top\">\n      {isCompact ? (\n        <button\n          aria-label=\"toggle authentication menu\"\n          className=\"flex h-48 w-48 items-center justify-center rounded-button hover:bg-hover\"\n        >\n          {avatar}\n        </button>\n      ) : (\n        <button className=\"flex w-full items-center rounded-button px-12 py-8 hover:bg-hover\">\n          {avatar}\n          <span className=\"ml-8 block min-w-0 overflow-x-hidden overflow-ellipsis whitespace-nowrap text-sm\">\n            {user.name}\n          </span>\n          <KeyboardArrowUpIcon size=\"xs\" className=\"ml-auto block\" />\n        </button>\n      )}\n    </NavbarAuthMenu>\n  );\n}\n","import {useQuery} from '@tanstack/react-query';\nimport {apiClient} from '@common/http/query-client';\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\n\nexport interface AdminSetupAlert {\n  title: string;\n  description: string;\n}\n\ninterface Response extends BackendResponse {\n  alerts: AdminSetupAlert[];\n}\n\nexport function useAdminSetupAlerts() {\n  return useQuery({\n    queryKey: ['admin-setup-alerts'],\n    queryFn: () => fetchAlerts(),\n  });\n}\n\nfunction fetchAlerts() {\n  return apiClient\n    .get<Response>(`admin/setup-alerts`)\n    .then(response => response.data);\n}\n","import {Outlet} from 'react-router';\r\nimport {AdminSidebar} from './admin-sidebar';\r\nimport {DashboardLayout} from '@common/ui/dashboard-layout/dashboard-layout';\r\nimport {DashboardContent} from '@common/ui/dashboard-layout/dashboard-content';\r\nimport {DashboardSidenav} from '@common/ui/dashboard-layout/dashboard-sidenav';\r\nimport {DashboardNavbar} from '@common/ui/dashboard-layout/dashboard-navbar';\r\nimport {\r\n  AdminSetupAlert,\r\n  useAdminSetupAlerts,\r\n} from '@common/admin/use-admin-setup-alerts';\r\nimport {SectionHelper} from '@common/ui/other/section-helper';\r\nimport {ErrorIcon} from '@ui/icons/material/Error';\r\nimport {\r\n  setInLocalStorage,\r\n  useLocalStorage,\r\n} from '@ui/utils/hooks/local-storage';\r\nimport clsx from 'clsx';\r\nimport {useIsMobileMediaQuery} from '@ui/utils/hooks/is-mobile-media-query';\r\nimport {DashboardLeftSidebarVariant} from '@common/ui/dashboard-layout/dashboard-left-sidebar';\r\n\r\nexport function AdminLayout() {\r\n  const isMobile = useIsMobileMediaQuery();\r\n  const variant: DashboardLeftSidebarVariant = isMobile\r\n    ? 'withNavbar'\r\n    : 'withoutNavbar';\r\n  return (\r\n    <DashboardLayout name=\"admin\" leftSidenavCanBeCompact className=\"bg-alt\">\r\n      {variant === 'withNavbar' && (\r\n        <DashboardNavbar size=\"sm\" menuPosition=\"admin-navbar\" />\r\n      )}\r\n      <DashboardSidenav position=\"left\" size=\"sm\">\r\n        <AdminSidebar variant=\"withoutNavbar\" />\r\n      </DashboardSidenav>\r\n      <DashboardContent>\r\n        <div\r\n          className={clsx(\r\n            variant === 'withoutNavbar'\r\n              ? 'relative bg ring-divider dark:bg-alt md:mt-6 md:rounded-tl-md md:shadow-sm md:ring md:ring-1'\r\n              : 'border-l bg dark:bg-alt',\r\n          )}\r\n        >\r\n          <SetupAlertsList />\r\n          <Outlet />\r\n        </div>\r\n      </DashboardContent>\r\n    </DashboardLayout>\r\n  );\r\n}\r\n\r\nfunction SetupAlertsList() {\r\n  const {data} = useAdminSetupAlerts();\r\n  const [dismissValue] = useLocalStorage<{\r\n    timestamp: number;\r\n  } | null>('admin-setup-alert-dismissed', null);\r\n\r\n  // show alert if 1 day passed since last dismiss\r\n  const shouldShowAlert =\r\n    !dismissValue || Date.now() - dismissValue.timestamp > 86400000;\r\n\r\n  if (!data?.alerts.length || !shouldShowAlert) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <div className=\"fixed left-24 right-24 top-24 z-10 mx-auto w-max max-w-[calc(100%-48px)] overflow-hidden rounded-panel bg shadow-md\">\r\n      <SetupAlert alert={data.alerts[0]} />\r\n    </div>\r\n  );\r\n}\r\n\r\ninterface SetupAlertProps {\r\n  alert: AdminSetupAlert;\r\n}\r\nfunction SetupAlert({alert}: SetupAlertProps) {\r\n  const description = (\r\n    <div dangerouslySetInnerHTML={{__html: alert.description}}></div>\r\n  );\r\n  return (\r\n    <SectionHelper\r\n      leadingIcon={<ErrorIcon size=\"xs\" className=\"text-danger\" />}\r\n      onClose={() => {\r\n        setInLocalStorage('admin-setup-alert-dismissed', {\r\n          timestamp: Date.now(),\r\n        });\r\n      }}\r\n      key={alert.title}\r\n      title={alert.title}\r\n      description={description}\r\n      color=\"neutral\"\r\n    />\r\n  );\r\n}\r\n","import {\n  BackendFilter,\n  DatePickerFilterControl,\n  FilterControlType,\n  FilterOperator,\n} from './backend-filter';\nimport {\n  DateRangePreset,\n  DateRangePresets,\n} from '@ui/forms/input-field/date/date-range-picker/dialog/date-range-presets';\nimport {message} from '@ui/i18n/message';\nimport {dateRangeToAbsoluteRange} from '@ui/forms/input-field/date/date-range-picker/form-date-range-picker';\nimport {PartialWithRequired} from '@ui/utils/ts/partial-with-required';\n\nexport function timestampFilter(\n  options: PartialWithRequired<\n    BackendFilter<DatePickerFilterControl>,\n    'key' | 'label'\n  >,\n): BackendFilter<DatePickerFilterControl> {\n  return {\n    ...options,\n    defaultOperator: FilterOperator.between,\n    control: {\n      type: FilterControlType.DateRangePicker,\n      defaultValue:\n        options.control?.defaultValue ||\n        dateRangeToAbsoluteRange(\n          (DateRangePresets[3] as Required<DateRangePreset>).getRangeValue(),\n        ),\n    },\n  };\n}\n\nexport function createdAtFilter(\n  options: Partial<BackendFilter<DatePickerFilterControl>>,\n): BackendFilter<DatePickerFilterControl> {\n  return timestampFilter({\n    key: 'created_at',\n    label: message('Date created'),\n    ...options,\n  });\n}\n\nexport function updatedAtFilter(\n  options: Partial<BackendFilter<DatePickerFilterControl>>,\n): BackendFilter<DatePickerFilterControl> {\n  return timestampFilter({\n    key: 'updated_at',\n    label: message('Last updated'),\n    ...options,\n  });\n}\n","import {\n  BackendFilter,\n  FilterControlType,\n  FilterOperator,\n} from '../../datatable/filters/backend-filter';\nimport {\n  createdAtFilter,\n  updatedAtFilter,\n} from '../../datatable/filters/timestamp-filters';\nimport {message} from '@ui/i18n/message';\n\nexport const UserDatatableFilters: BackendFilter[] = [\n  {\n    key: 'email_verified_at',\n    label: message('Email'),\n    description: message('Email verification status'),\n    defaultOperator: FilterOperator.ne,\n    control: {\n      type: FilterControlType.Select,\n      defaultValue: '01',\n      options: [\n        {\n          key: '01',\n          label: message('is confirmed'),\n          value: {value: null, operator: FilterOperator.ne},\n        },\n        {\n          key: '02',\n          label: message('is not confirmed'),\n          value: {value: null, operator: FilterOperator.eq},\n        },\n      ],\n    },\n  },\n  createdAtFilter({\n    description: message('Date user registered or was created'),\n  }),\n  updatedAtFilter({\n    description: message('Date user was last updated'),\n  }),\n  {\n    key: 'subscriptions',\n    label: message('Subscription'),\n    description: message('Whether user is subscribed or not'),\n    defaultOperator: FilterOperator.eq,\n    control: {\n      type: FilterControlType.Select,\n      defaultValue: '01',\n      options: [\n        {\n          key: '01',\n          label: message('is subscribed'),\n          value: {value: '*', operator: FilterOperator.has},\n        },\n        {\n          key: '02',\n          label: message('is not subscribed'),\n          value: {value: '*', operator: FilterOperator.doesntHave},\n        },\n      ],\n    },\n  },\n];\n","import React, {ReactElement, ReactNode, useId} from 'react';\nimport {TableDataItem} from '../../ui/tables/types/table-data-item';\nimport {DataTable, DataTableProps} from '../data-table';\nimport {TableProps} from '../../ui/tables/table';\nimport {StaticPageTitle} from '../../seo/static-page-title';\nimport {MessageDescriptor} from '@ui/i18n/message-descriptor';\nimport clsx from 'clsx';\n\ninterface Props<T extends TableDataItem> extends DataTableProps<T> {\n  title?: ReactElement<MessageDescriptor>;\n  headerContent?: ReactNode;\n  headerItemsAlign?: string;\n  enableSelection?: boolean;\n  onRowAction?: TableProps<T>['onAction'];\n  padding?: string;\n  className?: string;\n  variant?: 'default' | 'fullPage';\n}\nexport function DataTablePage<T extends TableDataItem>({\n  title,\n  headerContent,\n  headerItemsAlign = 'items-end',\n  className,\n  padding,\n  variant,\n  ...dataTableProps\n}: Props<T>) {\n  const titleId = useId();\n\n  return (\n    <div\n      className={clsx(\n        padding ?? variant === 'fullPage' ? 'p-0' : 'p-12 md:p-24',\n        className,\n      )}\n    >\n      {title && (\n        <div\n          className={clsx(\n            variant === 'fullPage' ? 'mb-6 border-b px-24 py-12' : 'mb-16',\n            headerContent && `flex ${headerItemsAlign} gap-4`,\n          )}\n        >\n          <StaticPageTitle>{title}</StaticPageTitle>\n          <h1 className=\"text-3xl font-light first:capitalize\" id={titleId}>\n            {title}\n          </h1>\n          {headerContent}\n        </div>\n      )}\n      <div className={clsx(variant === 'fullPage' ? 'p-12 md:p-24' : 'p-0')}>\n        <DataTable\n          {...dataTableProps}\n          tableDomProps={{\n            'aria-labelledby': title ? titleId : undefined,\n          }}\n        />\n      </div>\n    </div>\n  );\n}\n","import {useMutation} from '@tanstack/react-query';\nimport {apiClient, queryClient} from '../../http/query-client';\nimport {BackendResponse} from '../../http/backend-response/backend-response';\nimport {toast} from '@ui/toast/toast';\nimport {DatatableDataQueryKey} from './paginated-resources';\nimport {useDataTable} from '../page/data-table-context';\nimport {message} from '@ui/i18n/message';\nimport {showHttpErrorToast} from '../../http/show-http-error-toast';\nimport {Key} from 'react';\n\ninterface Response extends BackendResponse {\n  //\n}\n\nexport function useDeleteSelectedRows() {\n  const {endpoint, selectedRows, setSelectedRows, baseQueryKey} =\n    useDataTable();\n  return useMutation({\n    mutationFn: () => deleteSelectedRows(endpoint, selectedRows),\n    onSuccess: async () => {\n      await queryClient.invalidateQueries({\n        queryKey: DatatableDataQueryKey(endpoint, undefined, baseQueryKey),\n      });\n      toast(\n        message('Deleted [one 1 record|other :count records]', {\n          values: {count: selectedRows.length},\n        }),\n      );\n      setSelectedRows([]);\n    },\n    onError: err =>\n      showHttpErrorToast(err, message('Could not delete records')),\n  });\n}\n\nfunction deleteSelectedRows(endpoint: string, ids: Key[]): Promise<Response> {\n  return apiClient.delete(`${endpoint}/${ids.join(',')}`).then(r => r.data);\n}\n","import {Button} from '@ui/buttons/button';\nimport {Trans} from '@ui/i18n/trans';\nimport {ConfirmationDialog} from '@ui/overlays/dialog/confirmation-dialog';\nimport {DialogTrigger} from '@ui/overlays/dialog/dialog-trigger';\nimport React from 'react';\nimport {useDeleteSelectedRows} from '../requests/delete-selected-rows';\nimport {useDataTable} from './data-table-context';\nimport {useDialogContext} from '@ui/overlays/dialog/dialog-context';\nimport {errorStatusIs} from '@common/http/error-status-is';\n\nexport function DeleteSelectedItemsAction() {\n  return (\n    <DialogTrigger type=\"modal\">\n      <Button variant=\"flat\" color=\"danger\" className=\"ml-auto\">\n        <Trans message=\"Delete\" />\n      </Button>\n      <DeleteItemsDialog />\n    </DialogTrigger>\n  );\n}\n\nfunction DeleteItemsDialog() {\n  const deleteSelectedRows = useDeleteSelectedRows();\n  const {selectedRows, setSelectedRows} = useDataTable();\n  const {close} = useDialogContext();\n  return (\n    <ConfirmationDialog\n      isLoading={deleteSelectedRows.isPending}\n      title={\n        <Trans\n          message=\"Delete [one 1 item|other :count items]?\"\n          values={{count: selectedRows.length}}\n        />\n      }\n      body={\n        <Trans message=\"This will permanently remove the items and cannot be undone.\" />\n      }\n      confirm={<Trans message=\"Delete\" />}\n      isDanger\n      onConfirm={() => {\n        deleteSelectedRows.mutate(undefined, {\n          onSuccess: () => close(),\n          onError: err => {\n            if (errorStatusIs(err, 422)) {\n              setSelectedRows([]);\n              close();\n            }\n          },\n        });\n      }}\n    />\n  );\n}\n","export default \"__VITE_ASSET__d109d853__\"","import {AddIcon} from '@ui/icons/material/Add';\nimport {Button} from '@ui/buttons/button';\nimport React, {ReactElement, ReactNode} from 'react';\nimport {useIsMobileMediaQuery} from '@ui/utils/hooks/is-mobile-media-query';\nimport {IconButton} from '@ui/buttons/icon-button';\nimport {To} from 'react-router';\nimport {ButtonBaseProps} from '@ui/buttons/button-base';\n\nexport interface DataTableAddItemButtonProps {\n  children: ReactNode;\n  to?: To;\n  href?: string;\n  download?: boolean | string;\n  elementType?: ButtonBaseProps['elementType'];\n  onClick?: ButtonBaseProps['onClick'];\n  icon?: ReactElement;\n  disabled?: boolean;\n}\nexport const DataTableAddItemButton = React.forwardRef<\n  HTMLButtonElement,\n  DataTableAddItemButtonProps\n>(\n  (\n    {children, to, elementType, onClick, href, download, icon, disabled},\n    ref,\n  ) => {\n    const isMobile = useIsMobileMediaQuery();\n\n    if (isMobile) {\n      return (\n        <IconButton\n          ref={ref}\n          variant=\"flat\"\n          color=\"primary\"\n          className=\"flex-shrink-0\"\n          size=\"sm\"\n          to={to}\n          href={href}\n          download={download}\n          elementType={elementType}\n          onClick={onClick}\n          disabled={disabled}\n        >\n          {icon || <AddIcon />}\n        </IconButton>\n      );\n    }\n\n    return (\n      <Button\n        ref={ref}\n        startIcon={icon || <AddIcon />}\n        variant=\"flat\"\n        color=\"primary\"\n        size=\"sm\"\n        to={to}\n        href={href}\n        download={download}\n        elementType={elementType}\n        onClick={onClick}\n        disabled={disabled}\n      >\n        {children}\n      </Button>\n    );\n  },\n);\n","import {apiClient} from '../../http/query-client';\nimport {BackendResponse} from '../../http/backend-response/backend-response';\nimport {useMutation} from '@tanstack/react-query';\nimport {showHttpErrorToast} from '../../http/show-http-error-toast';\n\ninterface Response extends BackendResponse {\n  downloadPath?: string;\n  result?: 'jobQueued';\n}\n\nexport type ExportCsvPayload = Record<string, string | number | undefined>;\n\nexport function useExportCsv(endpoint: string) {\n  return useMutation({\n    mutationFn: (payload?: ExportCsvPayload) => exportCsv(endpoint, payload),\n    onError: err => showHttpErrorToast(err),\n  });\n}\n\nfunction exportCsv(\n  endpoint: string,\n  payload: ExportCsvPayload | undefined,\n): Promise<Response> {\n  return apiClient.post(endpoint, payload).then(r => r.data);\n}\n","import {DialogBody} from '@ui/overlays/dialog/dialog-body';\nimport {DialogFooter} from '@ui/overlays/dialog/dialog-footer';\nimport {DialogHeader} from '@ui/overlays/dialog/dialog-header';\nimport {useDialogContext} from '@ui/overlays/dialog/dialog-context';\nimport {Dialog} from '@ui/overlays/dialog/dialog';\nimport {Button} from '@ui/buttons/button';\nimport {Trans} from '@ui/i18n/trans';\n\nexport function CsvExportInfoDialog() {\n  const {close} = useDialogContext();\n  return (\n    <Dialog>\n      <DialogHeader>\n        <Trans message=\"Csv export\" />\n      </DialogHeader>\n      <DialogBody>\n        <Trans\n          message=\"Your request is being processed. We'll email you when the report is ready to download. In\n            certain cases, it might take a little longer, depending on the number of items beings\n            exported and the volume of activity.\"\n        />\n      </DialogBody>\n      <DialogFooter>\n        <Button variant=\"flat\" color=\"primary\" onClick={close}>\n          <Trans message=\"Got it\" />\n        </Button>\n      </DialogFooter>\n    </Dialog>\n  );\n}\n","import {IconButton} from '@ui/buttons/icon-button';\nimport {FileDownloadIcon} from '@ui/icons/material/FileDownload';\nimport React, {Fragment, useState} from 'react';\nimport {DialogTrigger} from '@ui/overlays/dialog/dialog-trigger';\nimport {ExportCsvPayload, useExportCsv} from '../requests/use-export-csv';\nimport {downloadFileFromUrl} from '@ui/utils/files/download-file-from-url';\nimport {CsvExportInfoDialog} from './csv-export-info-dialog';\n\ninterface DataTableExportCsvButtonProps {\n  endpoint: string;\n  payload?: ExportCsvPayload;\n}\nexport function DataTableExportCsvButton({\n  endpoint,\n  payload,\n}: DataTableExportCsvButtonProps) {\n  const [dialogIsOpen, setDialogIsOpen] = useState(false);\n  const exportCsv = useExportCsv(endpoint);\n\n  return (\n    <Fragment>\n      <IconButton\n        variant=\"outline\"\n        color=\"primary\"\n        size=\"sm\"\n        className=\"flex-shrink-0\"\n        disabled={exportCsv.isPending}\n        onClick={() => {\n          exportCsv.mutate(payload, {\n            onSuccess: response => {\n              if (response.downloadPath) {\n                downloadFileFromUrl(response.downloadPath);\n              } else {\n                setDialogIsOpen(true);\n              }\n            },\n          });\n        }}\n      >\n        <FileDownloadIcon />\n      </IconButton>\n      <DialogTrigger\n        type=\"modal\"\n        isOpen={dialogIsOpen}\n        onOpenChange={setDialogIsOpen}\n      >\n        <CsvExportInfoDialog />\n      </DialogTrigger>\n    </Fragment>\n  );\n}\n","import React, {ReactNode} from 'react';\nimport {Avatar, AvatarProps} from '@ui/avatar/avatar';\nimport {Skeleton} from '@ui/skeleton/skeleton';\nimport clsx from 'clsx';\n\ninterface Props {\n  image?: string;\n  label: ReactNode;\n  description?: ReactNode;\n  labelClassName?: string;\n  className?: string;\n  avatarSize?: AvatarProps['size'];\n  alwaysShowAvatar?: boolean;\n  avatarLabel?: string;\n  avatarCircle?: boolean;\n}\nexport function NameWithAvatar({\n  image,\n  label,\n  description,\n  className,\n  labelClassName,\n  avatarSize = 'md',\n  alwaysShowAvatar,\n  avatarLabel,\n  avatarCircle,\n}: Props) {\n  return (\n    <div className={clsx('flex items-center gap-12', className)}>\n      {(image || alwaysShowAvatar) && (\n        <Avatar\n          size={avatarSize}\n          className=\"flex-shrink-0\"\n          src={image}\n          label={avatarLabel ?? label}\n          fallback=\"initials\"\n          circle={avatarCircle}\n        />\n      )}\n      <div className=\"min-w-0 overflow-hidden\">\n        <div\n          className={clsx(labelClassName, 'overflow-hidden overflow-ellipsis')}\n        >\n          {label}\n        </div>\n        {description && (\n          <div className=\"overflow-hidden overflow-ellipsis text-xs text-muted\">\n            {description}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport function NameWithAvatarPlaceholder({\n  className,\n  labelClassName,\n  showDescription,\n  avatarCircle,\n}: Partial<Props> & {\n  showDescription?: boolean;\n}) {\n  return (\n    <div\n      className={clsx('flex w-full max-w-4/5 items-center gap-12', className)}\n    >\n      <Skeleton\n        size=\"w-40 h-40 md:w-32 md:h-32\"\n        variant=\"rect\"\n        radius={avatarCircle ? 'rounded-full' : undefined}\n      />\n      <div className=\"flex-auto\">\n        <div className={clsx(labelClassName, showDescription && 'leading-3')}>\n          <Skeleton />\n        </div>\n        {showDescription && (\n          <div className=\"mt-4 leading-3 text-muted\">{<Skeleton />}</div>\n        )}\n      </div>\n    </div>\n  );\n}\n","import {createSvgIcon} from '../create-svg-icon';\n\nexport const PersonOffIcon = createSvgIcon(\n  <path d=\"m20 17.17-3.37-3.38c.64.22 1.23.48 1.77.76.97.51 1.58 1.52 1.6 2.62zm1.19 4.02-1.41 1.41-2.61-2.6H4v-2.78c0-1.12.61-2.15 1.61-2.66 1.29-.66 2.87-1.22 4.67-1.45L1.39 4.22 2.8 2.81l18.39 18.38zM15.17 18l-3-3H12c-2.37 0-4.29.73-5.48 1.34-.32.16-.52.5-.52.88V18h9.17zM12 6c1.1 0 2 .9 2 2 0 .86-.54 1.59-1.3 1.87l1.48 1.48C15.28 10.64 16 9.4 16 8c0-2.21-1.79-4-4-4-1.4 0-2.64.72-3.35 1.82l1.48 1.48C10.41 6.54 11.14 6 12 6z\" />\n, 'PersonOffOutlined');\n","import {useMutation} from '@tanstack/react-query';\nimport {UseFormReturn} from 'react-hook-form';\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\nimport {toast} from '@ui/toast/toast';\nimport {apiClient, queryClient} from '@common/http/query-client';\nimport {onFormQueryError} from '@common/errors/on-form-query-error';\nimport {message} from '@ui/i18n/message';\n\ninterface Response extends BackendResponse {\n  bannable: unknown;\n}\n\nexport interface CreateBanPayload {\n  ban_until?: string;\n  permanent?: boolean;\n  comment?: string;\n}\n\nexport function useBanUser(\n  form: UseFormReturn<CreateBanPayload>,\n  userId: number | string,\n) {\n  return useMutation({\n    mutationFn: (payload: CreateBanPayload) => banUser(userId, payload),\n    onSuccess: async () => {\n      toast(message('User suspended'));\n      await queryClient.invalidateQueries({queryKey: ['users']});\n    },\n    onError: r => onFormQueryError(r, form),\n  });\n}\n\nfunction banUser(\n  userId: number | string,\n  payload: CreateBanPayload,\n): Promise<Response> {\n  return apiClient.post(`users/ban/${userId}`, payload).then(r => r.data);\n}\n","import {Dialog} from '@ui/overlays/dialog/dialog';\nimport {DialogHeader} from '@ui/overlays/dialog/dialog-header';\nimport {Trans} from '@ui/i18n/trans';\nimport {DialogBody} from '@ui/overlays/dialog/dialog-body';\nimport {DialogFooter} from '@ui/overlays/dialog/dialog-footer';\nimport {Button} from '@ui/buttons/button';\nimport {useDialogContext} from '@ui/overlays/dialog/dialog-context';\nimport {Form} from '@ui/forms/form';\nimport {FormDatePicker} from '@ui/forms/input-field/date/date-picker/date-picker';\nimport {FormTextField} from '@ui/forms/input-field/text-field/text-field';\nimport {useTrans} from '@ui/i18n/use-trans';\nimport {message} from '@ui/i18n/message';\nimport {FormSwitch} from '@ui/forms/toggle/switch';\nimport {\n  CreateBanPayload,\n  useBanUser,\n} from '@common/admin/users/requests/use-ban-user';\nimport {CompactUser} from '@ui/types/user';\nimport {useForm} from 'react-hook-form';\n\ninterface Props {\n  user: CompactUser;\n}\nexport function BanUserDialog({user}: Props) {\n  const {trans} = useTrans();\n  const {close, formId} = useDialogContext();\n  const form = useForm<CreateBanPayload>({\n    defaultValues: {\n      permanent: true,\n    },\n  });\n  const isPermanent = form.watch('permanent');\n  const banUser = useBanUser(form, user.id);\n  return (\n    <Dialog>\n      <DialogHeader>\n        <Trans message=\"Suspend “:name“\" values={{name: user.name}} />\n      </DialogHeader>\n      <DialogBody>\n        <Form\n          id={formId}\n          form={form}\n          onSubmit={values =>\n            banUser.mutate(values, {\n              onSuccess: () => close(true),\n            })\n          }\n        >\n          <FormDatePicker\n            name=\"ban_until\"\n            label={<Trans message=\"Suspend until\" />}\n            disabled={isPermanent}\n          />\n          <FormSwitch name=\"permanent\" className=\"mt-12\">\n            <Trans message=\"Permanent\" />\n          </FormSwitch>\n          <FormTextField\n            className=\"mt-24\"\n            name=\"comment\"\n            inputElementType=\"textarea\"\n            maxLength={250}\n            label={<Trans message=\"Reason\" />}\n            placeholder={trans(message('Optional'))}\n          />\n        </Form>\n      </DialogBody>\n      <DialogFooter>\n        <Button onClick={() => close()}>\n          <Trans message=\"Cancel\" />\n        </Button>\n        <Button\n          form={formId}\n          variant=\"flat\"\n          color=\"primary\"\n          type=\"submit\"\n          disabled={banUser.isPending}\n        >\n          <Trans message=\"Suspend\" />\n        </Button>\n      </DialogFooter>\n    </Dialog>\n  );\n}\n","import {useMutation} from '@tanstack/react-query';\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\nimport {toast} from '@ui/toast/toast';\nimport {apiClient, queryClient} from '@common/http/query-client';\nimport {message} from '@ui/i18n/message';\nimport {showHttpErrorToast} from '@common/http/show-http-error-toast';\n\ninterface Response extends BackendResponse {}\n\nexport function useUnbanUser(userId: number) {\n  return useMutation({\n    mutationFn: () => unbanUser(userId),\n    onSuccess: () => {\n      toast(message('User unsuspended'));\n      queryClient.invalidateQueries({queryKey: ['users']});\n    },\n    onError: r => showHttpErrorToast(r),\n  });\n}\n\nfunction unbanUser(userId: number): Promise<Response> {\n  return apiClient.delete(`users/unban/${userId}`).then(r => r.data);\n}\n","import {useMutation} from '@tanstack/react-query';\nimport {toast} from '@ui/toast/toast';\nimport {apiClient} from '@common/http/query-client';\nimport {message} from '@ui/i18n/message';\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\nimport {User} from '@ui/types/user';\nimport {showHttpErrorToast} from '@common/http/show-http-error-toast';\n\ninterface Response extends BackendResponse {\n  user: User;\n}\n\ninterface Payload {\n  userId: string | number;\n}\n\nexport function useImpersonateUser() {\n  return useMutation({\n    mutationFn: (payload: Payload) => impersonateUser(payload),\n    onSuccess: async response => {\n      toast(message(`Impersonating User \"${response.user.name}\"`));\n      window.location.href = '/';\n    },\n    onError: r => showHttpErrorToast(r),\n  });\n}\n\nfunction impersonateUser(payload: Payload) {\n  return apiClient\n    .post<Response>(`admin/users/impersonate/${payload.userId}`, payload)\n    .then(r => r.data);\n}\n","import {ColumnConfig} from '@common/datatable/column-config';\nimport {User} from '@ui/types/user';\nimport {Trans} from '@ui/i18n/trans';\nimport {NameWithAvatar} from '@common/datatable/column-templates/name-with-avatar';\nimport {CheckIcon} from '@ui/icons/material/Check';\nimport {CloseIcon} from '@ui/icons/material/Close';\nimport {ChipList} from '@ui/forms/input-field/chip-field/chip-list';\nimport {Chip} from '@ui/forms/input-field/chip-field/chip';\nimport {Link} from 'react-router';\nimport clsx from 'clsx';\nimport {FormattedDate} from '@ui/i18n/formatted-date';\nimport {Tooltip} from '@ui/tooltip/tooltip';\nimport {IconButton} from '@ui/buttons/icon-button';\nimport {EditIcon} from '@ui/icons/material/Edit';\nimport {DialogTrigger} from '@ui/overlays/dialog/dialog-trigger';\nimport {PersonOffIcon} from '@ui/icons/material/PersonOff';\nimport {BanUserDialog} from '@common/admin/users/ban-user-dialog';\nimport React from 'react';\nimport {useUnbanUser} from '@common/admin/users/requests/use-unban-user';\nimport {ConfirmationDialog} from '@ui/overlays/dialog/confirmation-dialog';\nimport {useImpersonateUser} from '@common/admin/users/requests/use-impersonate-user';\nimport {LoginIcon} from '@ui/icons/material/Login';\n\nexport const userDatatableColumns: ColumnConfig<User>[] = [\n  {\n    key: 'name',\n    allowsSorting: true,\n    sortingKey: 'email',\n    width: 'flex-3 min-w-200',\n    visibleInMode: 'all',\n    header: () => <Trans message=\"User\" />,\n    body: user => (\n      <NameWithAvatar\n        image={user.image}\n        label={user.name}\n        description={user.email}\n        alwaysShowAvatar\n        avatarCircle\n      />\n    ),\n  },\n  {\n    key: 'roles',\n    header: () => <Trans message=\"Roles\" />,\n    body: user => (\n      <ChipList radius=\"rounded\" size=\"xs\">\n        {user?.roles?.map(role => (\n          <Chip key={role.id} selectable>\n            <Link\n              className={clsx('capitalize')}\n              target=\"_blank\"\n              to={`/admin/roles/${role.id}/edit`}\n            >\n              <Trans message={role.name} />\n            </Link>\n          </Chip>\n        ))}\n      </ChipList>\n    ),\n  },\n  {\n    key: 'subscribed',\n    header: () => <Trans message=\"Subscribed\" />,\n    width: 'w-96',\n    body: user =>\n      user.subscriptions?.filter(s => s.valid).length ? (\n        <CheckIcon className=\"text-positive icon-md\" />\n      ) : (\n        <CloseIcon className=\"text-danger icon-md\" />\n      ),\n  },\n  {\n    key: 'banned_at',\n    allowsSorting: true,\n    header: () => <Trans message=\"Suspended\" />,\n    width: 'w-96',\n    body: user =>\n      user.banned_at ? <CheckIcon className=\"text-danger icon-md\" /> : null,\n  },\n  {\n    key: 'last_login',\n    width: 'w-110',\n    header: () => <Trans message=\"Last active\" />,\n    body: user =>\n      user.last_login ? (\n        <time>\n          <FormattedDate date={user.last_login.created_at} />\n        </time>\n      ) : (\n        '-'\n      ),\n  },\n  {\n    key: 'createdAt',\n    allowsSorting: true,\n    width: 'w-110',\n    header: () => <Trans message=\"Created at\" />,\n    body: user => (\n      <time>\n        <FormattedDate date={user.created_at} />\n      </time>\n    ),\n  },\n  {\n    key: 'actions',\n    header: () => <Trans message=\"Actions\" />,\n    width: 'w-128 flex-shrink-0',\n    hideHeader: true,\n    align: 'end',\n    visibleInMode: 'all',\n    body: user => (\n      <div className=\"text-muted\">\n        <Link to={`${user.id}/details`}>\n          <Tooltip label={<Trans message=\"Edit user\" />}>\n            <IconButton size=\"md\">\n              <EditIcon />\n            </IconButton>\n          </Tooltip>\n        </Link>\n        {user.banned_at ? (\n          <UnbanButton user={user} />\n        ) : (\n          <DialogTrigger type=\"modal\">\n            <Tooltip label={<Trans message=\"Suspend user\" />}>\n              <IconButton size=\"md\">\n                <PersonOffIcon />\n              </IconButton>\n            </Tooltip>\n            <BanUserDialog user={user} />\n          </DialogTrigger>\n        )}\n        <ImpersonateButton user={user} />\n      </div>\n    ),\n  },\n];\n\ninterface UnbanButtonProps {\n  user: User;\n}\nfunction UnbanButton({user}: UnbanButtonProps) {\n  const unban = useUnbanUser(user.id);\n  return (\n    <DialogTrigger\n      type=\"modal\"\n      onClose={confirmed => {\n        if (confirmed) {\n          unban.mutate();\n        }\n      }}\n    >\n      <Tooltip label={<Trans message=\"Remove suspension\" />}>\n        <IconButton size=\"md\" color=\"danger\">\n          <PersonOffIcon />\n        </IconButton>\n      </Tooltip>\n      <ConfirmationDialog\n        isDanger\n        title={<Trans message=\"Suspend “:name“\" values={{name: user.name}} />}\n        body={\n          <Trans message=\"Are you sure you want to remove suspension from this user?\" />\n        }\n        confirm={<Trans message=\"Unsuspend\" />}\n      />\n    </DialogTrigger>\n  );\n}\n\ninterface ImpersonateButtonProps {\n  user: User;\n}\nfunction ImpersonateButton({user}: ImpersonateButtonProps) {\n  const impersonate = useImpersonateUser();\n  return (\n    <DialogTrigger type=\"modal\">\n      <Tooltip label={<Trans message=\"Login as user\" />}>\n        <IconButton size=\"md\">\n          <LoginIcon />\n        </IconButton>\n      </Tooltip>\n      <ConfirmationDialog\n        title={<Trans message=\"Login as “:name“\" values={{name: user.name}} />}\n        isLoading={impersonate.isPending}\n        body={<Trans message=\"Are you sure you want to login as this user?\" />}\n        confirm={<Trans message=\"Login\" />}\n        onConfirm={() => {\n          impersonate.mutate({userId: user.id});\n        }}\n      />\n    </DialogTrigger>\n  );\n}\n","import {useMutation} from '@tanstack/react-query';\nimport {UseFormReturn} from 'react-hook-form';\nimport {User} from '@ui/types/user';\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\nimport {toast} from '@ui/toast/toast';\nimport {apiClient, queryClient} from '@common/http/query-client';\nimport {DatatableDataQueryKey} from '@common/datatable/requests/paginated-resources';\nimport {onFormQueryError} from '@common/errors/on-form-query-error';\nimport {message} from '@ui/i18n/message';\nimport {useNavigate} from '@common/ui/navigation/use-navigate';\n\ninterface Response extends BackendResponse {\n  user: User;\n}\n\nexport interface CreateUserPayload\n  extends Omit<Partial<User>, 'email_verified_at'> {\n  email_verified_at?: boolean;\n}\n\nexport function useCreateUser(form: UseFormReturn<CreateUserPayload>) {\n  const navigate = useNavigate();\n  return useMutation({\n    mutationFn: (props: CreateUserPayload) => createUser(props),\n    onSuccess: () => {\n      toast(message('User created'));\n      queryClient.invalidateQueries({queryKey: DatatableDataQueryKey('users')});\n      navigate('/admin/users');\n    },\n    onError: r => onFormQueryError(r, form),\n  });\n}\n\nfunction createUser(payload: CreateUserPayload): Promise<Response> {\n  if (payload.roles) {\n    payload.roles = payload.roles.map(r => r.id) as any;\n  }\n  return apiClient.post('users', payload).then(r => r.data);\n}\n","import {useForm} from 'react-hook-form';\nimport React from 'react';\nimport {CreateUserPayload, useCreateUser} from './requests/create-user';\nimport {FileUploadProvider} from '../../uploads/uploader/file-upload-provider';\nimport {Trans} from '@ui/i18n/trans';\nimport {FormImageSelector} from '@common/uploads/components/image-selector';\nimport {Dialog} from '@ui/overlays/dialog/dialog';\nimport {DialogHeader} from '@ui/overlays/dialog/dialog-header';\nimport {DialogBody} from '@ui/overlays/dialog/dialog-body';\nimport {Form} from '@ui/forms/form';\nimport {FormTextField} from '@ui/forms/input-field/text-field/text-field';\nimport {useNavigate} from '@common/ui/navigation/use-navigate';\nimport {DialogFooter} from '@ui/overlays/dialog/dialog-footer';\nimport {useDialogContext} from '@ui/overlays/dialog/dialog-context';\nimport {Button} from '@ui/buttons/button';\n\nexport function CreateUserDialog() {\n  const form = useForm<CreateUserPayload>();\n  const createUser = useCreateUser(form);\n  const navigate = useNavigate();\n  const {close, formId} = useDialogContext();\n\n  return (\n    <Dialog>\n      <DialogHeader>\n        <Trans message=\"Create user\" />\n      </DialogHeader>\n      <DialogBody>\n        <Form\n          id={formId}\n          form={form}\n          onSubmit={values => {\n            createUser.mutate(values, {\n              onSuccess: r => {\n                close();\n                navigate(`${r.user.id}/details`, {replace: true});\n              },\n            });\n          }}\n        >\n          <FileUploadProvider>\n            <FormImageSelector\n              className=\"mb-24\"\n              name=\"image\"\n              diskPrefix=\"avatars\"\n              label={<Trans message=\"Avatar\" />}\n              showRemoveButton\n            />\n          </FileUploadProvider>\n          <FormTextField\n            required\n            className=\"mb-24\"\n            name=\"email\"\n            type=\"email\"\n            label={<Trans message=\"Email\" />}\n          />\n          <FormTextField\n            className=\"mb-24\"\n            name=\"first_name\"\n            label={<Trans message=\"First name\" />}\n          />\n          <FormTextField\n            className=\"mb-24\"\n            name=\"last_name\"\n            label={<Trans message=\"Last name\" />}\n          />\n          <FormTextField\n            required\n            name=\"password\"\n            type=\"password\"\n            label={<Trans message=\"Password\" />}\n          />\n        </Form>\n      </DialogBody>\n      <DialogFooter>\n        <Button variant=\"outline\" onClick={() => close()}>\n          <Trans message=\"Cancel\" />\n        </Button>\n        <Button\n          variant=\"flat\"\n          color=\"primary\"\n          type=\"submit\"\n          form={formId}\n          disabled={createUser.isPending}\n        >\n          <Trans message=\"Create\" />\n        </Button>\n      </DialogFooter>\n    </Dialog>\n  );\n}\n","import React, {Fragment} from 'react';\nimport {UserDatatableFilters} from '@common/admin/users/user-datatable-filters';\nimport {DataTablePage} from '@common/datatable/page/data-table-page';\nimport {Trans} from '@ui/i18n/trans';\nimport {DeleteSelectedItemsAction} from '@common/datatable/page/delete-selected-items-action';\nimport {DataTableEmptyStateMessage} from '@common/datatable/page/data-table-emty-state-message';\nimport teamSvg from '../roles/team.svg';\nimport {DataTableAddItemButton} from '@common/datatable/data-table-add-item-button';\nimport {DataTableExportCsvButton} from '@common/datatable/csv-export/data-table-export-csv-button';\nimport {useSettings} from '@ui/settings/use-settings';\nimport {userDatatableColumns} from '@common/admin/users/user-datatable-columns';\nimport {DialogTrigger} from '@ui/overlays/dialog/dialog-trigger';\nimport {CreateUserDialog} from '@common/admin/users/create-user-dialog';\n\nexport function UserDatatable() {\n  const {billing} = useSettings();\n\n  const filteredColumns = !billing.enable\n    ? userDatatableColumns.filter(c => c.key !== 'subscribed')\n    : userDatatableColumns;\n\n  return (\n    <Fragment>\n      <DataTablePage\n        endpoint=\"users\"\n        title={<Trans message=\"Users\" />}\n        filters={UserDatatableFilters}\n        columns={filteredColumns}\n        actions={<Actions />}\n        queryParams={{with: 'subscriptions,bans,lastLogin'}}\n        selectedActions={<DeleteSelectedItemsAction />}\n        emptyStateMessage={\n          <DataTableEmptyStateMessage\n            image={teamSvg}\n            title={<Trans message=\"No users have been created yet\" />}\n            filteringTitle={<Trans message=\"No matching users\" />}\n          />\n        }\n      />\n    </Fragment>\n  );\n}\n\nfunction Actions() {\n  return (\n    <Fragment>\n      <DataTableExportCsvButton endpoint=\"users/csv/export\" />\n      <DialogTrigger type=\"modal\">\n        <DataTableAddItemButton>\n          <Trans message=\"Add new user\" />\n        </DataTableAddItemButton>\n        <CreateUserDialog />\n      </DialogTrigger>\n    </Fragment>\n  );\n}\n","const reduxImpl = (reducer, initial) => (set, _get, api) => {\n  api.dispatch = (action) => {\n    set((state) => reducer(state, action), false, action);\n    return action;\n  };\n  api.dispatchFromDevtools = true;\n  return { dispatch: (...a) => api.dispatch(...a), ...initial };\n};\nconst redux = reduxImpl;\n\nconst trackedConnections = /* @__PURE__ */ new Map();\nconst getTrackedConnectionState = (name) => {\n  const api = trackedConnections.get(name);\n  if (!api)\n    return {};\n  return Object.fromEntries(\n    Object.entries(api.stores).map(([key, api2]) => [key, api2.getState()])\n  );\n};\nconst extractConnectionInformation = (store, extensionConnector, options) => {\n  if (store === void 0) {\n    return {\n      type: \"untracked\",\n      connection: extensionConnector.connect(options)\n    };\n  }\n  const existingConnection = trackedConnections.get(options.name);\n  if (existingConnection) {\n    return { type: \"tracked\", store, ...existingConnection };\n  }\n  const newConnection = {\n    connection: extensionConnector.connect(options),\n    stores: {}\n  };\n  trackedConnections.set(options.name, newConnection);\n  return { type: \"tracked\", store, ...newConnection };\n};\nconst devtoolsImpl = (fn, devtoolsOptions = {}) => (set, get, api) => {\n  const { enabled, anonymousActionType, store, ...options } = devtoolsOptions;\n  let extensionConnector;\n  try {\n    extensionConnector = (enabled != null ? enabled : (import.meta.env ? import.meta.env.MODE : void 0) !== \"production\") && window.__REDUX_DEVTOOLS_EXTENSION__;\n  } catch (e) {\n  }\n  if (!extensionConnector) {\n    if ((import.meta.env ? import.meta.env.MODE : void 0) !== \"production\" && enabled) {\n      console.warn(\n        \"[zustand devtools middleware] Please install/enable Redux devtools extension\"\n      );\n    }\n    return fn(set, get, api);\n  }\n  const { connection, ...connectionInformation } = extractConnectionInformation(store, extensionConnector, options);\n  let isRecording = true;\n  api.setState = (state, replace, nameOrAction) => {\n    const r = set(state, replace);\n    if (!isRecording)\n      return r;\n    const action = nameOrAction === void 0 ? { type: anonymousActionType || \"anonymous\" } : typeof nameOrAction === \"string\" ? { type: nameOrAction } : nameOrAction;\n    if (store === void 0) {\n      connection == null ? void 0 : connection.send(action, get());\n      return r;\n    }\n    connection == null ? void 0 : connection.send(\n      {\n        ...action,\n        type: `${store}/${action.type}`\n      },\n      {\n        ...getTrackedConnectionState(options.name),\n        [store]: api.getState()\n      }\n    );\n    return r;\n  };\n  const setStateFromDevtools = (...a) => {\n    const originalIsRecording = isRecording;\n    isRecording = false;\n    set(...a);\n    isRecording = originalIsRecording;\n  };\n  const initialState = fn(api.setState, get, api);\n  if (connectionInformation.type === \"untracked\") {\n    connection == null ? void 0 : connection.init(initialState);\n  } else {\n    connectionInformation.stores[connectionInformation.store] = api;\n    connection == null ? void 0 : connection.init(\n      Object.fromEntries(\n        Object.entries(connectionInformation.stores).map(([key, store2]) => [\n          key,\n          key === connectionInformation.store ? initialState : store2.getState()\n        ])\n      )\n    );\n  }\n  if (api.dispatchFromDevtools && typeof api.dispatch === \"function\") {\n    let didWarnAboutReservedActionType = false;\n    const originalDispatch = api.dispatch;\n    api.dispatch = (...a) => {\n      if ((import.meta.env ? import.meta.env.MODE : void 0) !== \"production\" && a[0].type === \"__setState\" && !didWarnAboutReservedActionType) {\n        console.warn(\n          '[zustand devtools middleware] \"__setState\" action type is reserved to set state from the devtools. Avoid using it.'\n        );\n        didWarnAboutReservedActionType = true;\n      }\n      originalDispatch(...a);\n    };\n  }\n  connection.subscribe((message) => {\n    var _a;\n    switch (message.type) {\n      case \"ACTION\":\n        if (typeof message.payload !== \"string\") {\n          console.error(\n            \"[zustand devtools middleware] Unsupported action format\"\n          );\n          return;\n        }\n        return parseJsonThen(\n          message.payload,\n          (action) => {\n            if (action.type === \"__setState\") {\n              if (store === void 0) {\n                setStateFromDevtools(action.state);\n                return;\n              }\n              if (Object.keys(action.state).length !== 1) {\n                console.error(\n                  `\n                    [zustand devtools middleware] Unsupported __setState action format. \n                    When using 'store' option in devtools(), the 'state' should have only one key, which is a value of 'store' that was passed in devtools(),\n                    and value of this only key should be a state object. Example: { \"type\": \"__setState\", \"state\": { \"abc123Store\": { \"foo\": \"bar\" } } }\n                    `\n                );\n              }\n              const stateFromDevtools = action.state[store];\n              if (stateFromDevtools === void 0 || stateFromDevtools === null) {\n                return;\n              }\n              if (JSON.stringify(api.getState()) !== JSON.stringify(stateFromDevtools)) {\n                setStateFromDevtools(stateFromDevtools);\n              }\n              return;\n            }\n            if (!api.dispatchFromDevtools)\n              return;\n            if (typeof api.dispatch !== \"function\")\n              return;\n            api.dispatch(action);\n          }\n        );\n      case \"DISPATCH\":\n        switch (message.payload.type) {\n          case \"RESET\":\n            setStateFromDevtools(initialState);\n            if (store === void 0) {\n              return connection == null ? void 0 : connection.init(api.getState());\n            }\n            return connection == null ? void 0 : connection.init(getTrackedConnectionState(options.name));\n          case \"COMMIT\":\n            if (store === void 0) {\n              connection == null ? void 0 : connection.init(api.getState());\n              return;\n            }\n            return connection == null ? void 0 : connection.init(getTrackedConnectionState(options.name));\n          case \"ROLLBACK\":\n            return parseJsonThen(message.state, (state) => {\n              if (store === void 0) {\n                setStateFromDevtools(state);\n                connection == null ? void 0 : connection.init(api.getState());\n                return;\n              }\n              setStateFromDevtools(state[store]);\n              connection == null ? void 0 : connection.init(getTrackedConnectionState(options.name));\n            });\n          case \"JUMP_TO_STATE\":\n          case \"JUMP_TO_ACTION\":\n            return parseJsonThen(message.state, (state) => {\n              if (store === void 0) {\n                setStateFromDevtools(state);\n                return;\n              }\n              if (JSON.stringify(api.getState()) !== JSON.stringify(state[store])) {\n                setStateFromDevtools(state[store]);\n              }\n            });\n          case \"IMPORT_STATE\": {\n            const { nextLiftedState } = message.payload;\n            const lastComputedState = (_a = nextLiftedState.computedStates.slice(-1)[0]) == null ? void 0 : _a.state;\n            if (!lastComputedState)\n              return;\n            if (store === void 0) {\n              setStateFromDevtools(lastComputedState);\n            } else {\n              setStateFromDevtools(lastComputedState[store]);\n            }\n            connection == null ? void 0 : connection.send(\n              null,\n              // FIXME no-any\n              nextLiftedState\n            );\n            return;\n          }\n          case \"PAUSE_RECORDING\":\n            return isRecording = !isRecording;\n        }\n        return;\n    }\n  });\n  return initialState;\n};\nconst devtools = devtoolsImpl;\nconst parseJsonThen = (stringified, f) => {\n  let parsed;\n  try {\n    parsed = JSON.parse(stringified);\n  } catch (e) {\n    console.error(\n      \"[zustand devtools middleware] Could not parse the received json\",\n      e\n    );\n  }\n  if (parsed !== void 0)\n    f(parsed);\n};\n\nconst subscribeWithSelectorImpl = (fn) => (set, get, api) => {\n  const origSubscribe = api.subscribe;\n  api.subscribe = (selector, optListener, options) => {\n    let listener = selector;\n    if (optListener) {\n      const equalityFn = (options == null ? void 0 : options.equalityFn) || Object.is;\n      let currentSlice = selector(api.getState());\n      listener = (state) => {\n        const nextSlice = selector(state);\n        if (!equalityFn(currentSlice, nextSlice)) {\n          const previousSlice = currentSlice;\n          optListener(currentSlice = nextSlice, previousSlice);\n        }\n      };\n      if (options == null ? void 0 : options.fireImmediately) {\n        optListener(currentSlice, currentSlice);\n      }\n    }\n    return origSubscribe(listener);\n  };\n  const initialState = fn(set, get, api);\n  return initialState;\n};\nconst subscribeWithSelector = subscribeWithSelectorImpl;\n\nconst combine = (initialState, create) => (...a) => Object.assign({}, initialState, create(...a));\n\nfunction createJSONStorage(getStorage, options) {\n  let storage;\n  try {\n    storage = getStorage();\n  } catch (e) {\n    return;\n  }\n  const persistStorage = {\n    getItem: (name) => {\n      var _a;\n      const parse = (str2) => {\n        if (str2 === null) {\n          return null;\n        }\n        return JSON.parse(str2, options == null ? void 0 : options.reviver);\n      };\n      const str = (_a = storage.getItem(name)) != null ? _a : null;\n      if (str instanceof Promise) {\n        return str.then(parse);\n      }\n      return parse(str);\n    },\n    setItem: (name, newValue) => storage.setItem(\n      name,\n      JSON.stringify(newValue, options == null ? void 0 : options.replacer)\n    ),\n    removeItem: (name) => storage.removeItem(name)\n  };\n  return persistStorage;\n}\nconst toThenable = (fn) => (input) => {\n  try {\n    const result = fn(input);\n    if (result instanceof Promise) {\n      return result;\n    }\n    return {\n      then(onFulfilled) {\n        return toThenable(onFulfilled)(result);\n      },\n      catch(_onRejected) {\n        return this;\n      }\n    };\n  } catch (e) {\n    return {\n      then(_onFulfilled) {\n        return this;\n      },\n      catch(onRejected) {\n        return toThenable(onRejected)(e);\n      }\n    };\n  }\n};\nconst oldImpl = (config, baseOptions) => (set, get, api) => {\n  let options = {\n    getStorage: () => localStorage,\n    serialize: JSON.stringify,\n    deserialize: JSON.parse,\n    partialize: (state) => state,\n    version: 0,\n    merge: (persistedState, currentState) => ({\n      ...currentState,\n      ...persistedState\n    }),\n    ...baseOptions\n  };\n  let hasHydrated = false;\n  const hydrationListeners = /* @__PURE__ */ new Set();\n  const finishHydrationListeners = /* @__PURE__ */ new Set();\n  let storage;\n  try {\n    storage = options.getStorage();\n  } catch (e) {\n  }\n  if (!storage) {\n    return config(\n      (...args) => {\n        console.warn(\n          `[zustand persist middleware] Unable to update item '${options.name}', the given storage is currently unavailable.`\n        );\n        set(...args);\n      },\n      get,\n      api\n    );\n  }\n  const thenableSerialize = toThenable(options.serialize);\n  const setItem = () => {\n    const state = options.partialize({ ...get() });\n    let errorInSync;\n    const thenable = thenableSerialize({ state, version: options.version }).then(\n      (serializedValue) => storage.setItem(options.name, serializedValue)\n    ).catch((e) => {\n      errorInSync = e;\n    });\n    if (errorInSync) {\n      throw errorInSync;\n    }\n    return thenable;\n  };\n  const savedSetState = api.setState;\n  api.setState = (state, replace) => {\n    savedSetState(state, replace);\n    void setItem();\n  };\n  const configResult = config(\n    (...args) => {\n      set(...args);\n      void setItem();\n    },\n    get,\n    api\n  );\n  let stateFromStorage;\n  const hydrate = () => {\n    var _a;\n    if (!storage)\n      return;\n    hasHydrated = false;\n    hydrationListeners.forEach((cb) => cb(get()));\n    const postRehydrationCallback = ((_a = options.onRehydrateStorage) == null ? void 0 : _a.call(options, get())) || void 0;\n    return toThenable(storage.getItem.bind(storage))(options.name).then((storageValue) => {\n      if (storageValue) {\n        return options.deserialize(storageValue);\n      }\n    }).then((deserializedStorageValue) => {\n      if (deserializedStorageValue) {\n        if (typeof deserializedStorageValue.version === \"number\" && deserializedStorageValue.version !== options.version) {\n          if (options.migrate) {\n            return options.migrate(\n              deserializedStorageValue.state,\n              deserializedStorageValue.version\n            );\n          }\n          console.error(\n            `State loaded from storage couldn't be migrated since no migrate function was provided`\n          );\n        } else {\n          return deserializedStorageValue.state;\n        }\n      }\n    }).then((migratedState) => {\n      var _a2;\n      stateFromStorage = options.merge(\n        migratedState,\n        (_a2 = get()) != null ? _a2 : configResult\n      );\n      set(stateFromStorage, true);\n      return setItem();\n    }).then(() => {\n      postRehydrationCallback == null ? void 0 : postRehydrationCallback(stateFromStorage, void 0);\n      hasHydrated = true;\n      finishHydrationListeners.forEach((cb) => cb(stateFromStorage));\n    }).catch((e) => {\n      postRehydrationCallback == null ? void 0 : postRehydrationCallback(void 0, e);\n    });\n  };\n  api.persist = {\n    setOptions: (newOptions) => {\n      options = {\n        ...options,\n        ...newOptions\n      };\n      if (newOptions.getStorage) {\n        storage = newOptions.getStorage();\n      }\n    },\n    clearStorage: () => {\n      storage == null ? void 0 : storage.removeItem(options.name);\n    },\n    getOptions: () => options,\n    rehydrate: () => hydrate(),\n    hasHydrated: () => hasHydrated,\n    onHydrate: (cb) => {\n      hydrationListeners.add(cb);\n      return () => {\n        hydrationListeners.delete(cb);\n      };\n    },\n    onFinishHydration: (cb) => {\n      finishHydrationListeners.add(cb);\n      return () => {\n        finishHydrationListeners.delete(cb);\n      };\n    }\n  };\n  hydrate();\n  return stateFromStorage || configResult;\n};\nconst newImpl = (config, baseOptions) => (set, get, api) => {\n  let options = {\n    storage: createJSONStorage(() => localStorage),\n    partialize: (state) => state,\n    version: 0,\n    merge: (persistedState, currentState) => ({\n      ...currentState,\n      ...persistedState\n    }),\n    ...baseOptions\n  };\n  let hasHydrated = false;\n  const hydrationListeners = /* @__PURE__ */ new Set();\n  const finishHydrationListeners = /* @__PURE__ */ new Set();\n  let storage = options.storage;\n  if (!storage) {\n    return config(\n      (...args) => {\n        console.warn(\n          `[zustand persist middleware] Unable to update item '${options.name}', the given storage is currently unavailable.`\n        );\n        set(...args);\n      },\n      get,\n      api\n    );\n  }\n  const setItem = () => {\n    const state = options.partialize({ ...get() });\n    return storage.setItem(options.name, {\n      state,\n      version: options.version\n    });\n  };\n  const savedSetState = api.setState;\n  api.setState = (state, replace) => {\n    savedSetState(state, replace);\n    void setItem();\n  };\n  const configResult = config(\n    (...args) => {\n      set(...args);\n      void setItem();\n    },\n    get,\n    api\n  );\n  let stateFromStorage;\n  const hydrate = () => {\n    var _a, _b;\n    if (!storage)\n      return;\n    hasHydrated = false;\n    hydrationListeners.forEach((cb) => {\n      var _a2;\n      return cb((_a2 = get()) != null ? _a2 : configResult);\n    });\n    const postRehydrationCallback = ((_b = options.onRehydrateStorage) == null ? void 0 : _b.call(options, (_a = get()) != null ? _a : configResult)) || void 0;\n    return toThenable(storage.getItem.bind(storage))(options.name).then((deserializedStorageValue) => {\n      if (deserializedStorageValue) {\n        if (typeof deserializedStorageValue.version === \"number\" && deserializedStorageValue.version !== options.version) {\n          if (options.migrate) {\n            return options.migrate(\n              deserializedStorageValue.state,\n              deserializedStorageValue.version\n            );\n          }\n          console.error(\n            `State loaded from storage couldn't be migrated since no migrate function was provided`\n          );\n        } else {\n          return deserializedStorageValue.state;\n        }\n      }\n    }).then((migratedState) => {\n      var _a2;\n      stateFromStorage = options.merge(\n        migratedState,\n        (_a2 = get()) != null ? _a2 : configResult\n      );\n      set(stateFromStorage, true);\n      return setItem();\n    }).then(() => {\n      postRehydrationCallback == null ? void 0 : postRehydrationCallback(stateFromStorage, void 0);\n      stateFromStorage = get();\n      hasHydrated = true;\n      finishHydrationListeners.forEach((cb) => cb(stateFromStorage));\n    }).catch((e) => {\n      postRehydrationCallback == null ? void 0 : postRehydrationCallback(void 0, e);\n    });\n  };\n  api.persist = {\n    setOptions: (newOptions) => {\n      options = {\n        ...options,\n        ...newOptions\n      };\n      if (newOptions.storage) {\n        storage = newOptions.storage;\n      }\n    },\n    clearStorage: () => {\n      storage == null ? void 0 : storage.removeItem(options.name);\n    },\n    getOptions: () => options,\n    rehydrate: () => hydrate(),\n    hasHydrated: () => hasHydrated,\n    onHydrate: (cb) => {\n      hydrationListeners.add(cb);\n      return () => {\n        hydrationListeners.delete(cb);\n      };\n    },\n    onFinishHydration: (cb) => {\n      finishHydrationListeners.add(cb);\n      return () => {\n        finishHydrationListeners.delete(cb);\n      };\n    }\n  };\n  if (!options.skipHydration) {\n    hydrate();\n  }\n  return stateFromStorage || configResult;\n};\nconst persistImpl = (config, baseOptions) => {\n  if (\"getStorage\" in baseOptions || \"serialize\" in baseOptions || \"deserialize\" in baseOptions) {\n    if ((import.meta.env ? import.meta.env.MODE : void 0) !== \"production\") {\n      console.warn(\n        \"[DEPRECATED] `getStorage`, `serialize` and `deserialize` options are deprecated. Use `storage` option instead.\"\n      );\n    }\n    return oldImpl(config, baseOptions);\n  }\n  return newImpl(config, baseOptions);\n};\nconst persist = persistImpl;\n\nexport { combine, createJSONStorage, devtools, persist, redux, subscribeWithSelector };\n","import {\n  IAppearanceConfig,\n  MenuSectionConfig,\n} from '@common/admin/appearance/types/appearance-editor-config';\nimport {message} from '@ui/i18n/message';\n\nexport const DefaultAppearanceConfig: IAppearanceConfig = {\n  preview: {\n    defaultRoute: '/',\n    navigationRoutes: [],\n  },\n  sections: {\n    general: {\n      label: message('General'),\n      position: 1,\n    },\n    themes: {\n      label: message('Themes'),\n      position: 2,\n    },\n    menus: {\n      label: message('Menus'),\n      position: 3,\n      config: {\n        availableRoutes: [\n          '/',\n          '/login',\n          '/register',\n          '/contact',\n          '/pricing',\n          '/account-settings',\n          '/admin',\n          '/admin/appearance',\n          '/admin/settings',\n          '/admin/plans',\n          '/admin/subscriptions',\n          '/admin/users',\n          '/admin/roles',\n          '/admin/pages',\n          '/admin/tags',\n          '/admin/files',\n          '/admin/localizations',\n          '/admin/ads',\n          '/admin/logs',\n          '/admin/settings/authentication',\n          '/admin/settings/branding',\n          '/admin/settings/cache',\n          '/admin/settings/providers',\n          '/api-docs',\n        ],\n        positions: [\n          'admin-navbar',\n          'admin-sidebar',\n          'custom-page-navbar',\n          'auth-page-footer',\n          'auth-dropdown',\n          'account-settings-page',\n          'billing-page',\n          'checkout-page-navbar',\n          'checkout-page-footer',\n          'pricing-table-page',\n          'contact-us-page',\n          'notifications-page',\n          'footer',\n          'footer-secondary',\n        ],\n      } as MenuSectionConfig,\n    },\n    'custom-code': {\n      label: message('Custom Code'),\n      position: 4,\n    },\n    'seo-settings': {\n      label: message('SEO Settings'),\n      position: 5,\n    },\n  },\n};\n","import deepMerge from 'deepmerge';\nimport {DefaultAppearanceConfig} from '@common/admin/appearance/config/default-appearance-config';\nimport {AppAppearanceConfig} from '@app/admin/appearance/app-appearance-config';\nimport {IAppearanceConfig} from '@common/admin/appearance/types/appearance-editor-config';\n\nconst mergedAppearanceConfig = deepMerge.all([\n  DefaultAppearanceConfig,\n  AppAppearanceConfig,\n]);\n\nexport default mergedAppearanceConfig as IAppearanceConfig;\n","import {create} from 'zustand';\nimport {subscribeWithSelector} from 'zustand/middleware';\nimport {Settings} from '@ui/settings/settings';\nimport type {IAppearanceConfig} from './types/appearance-editor-config';\nimport {AllCommands} from './commands/commands';\nimport mergedAppearanceConfig from './config/merged-appearance-config';\nimport {BootstrapData} from '@ui/bootstrap-data/bootstrap-data';\nimport {FontConfig} from '@ui/fonts/font-picker/font-config';\nimport {ThemeId} from '@ui/themes/theme-selector-context';\n\nexport interface AppearanceEditorValues {\n  appearance: {\n    env: {app_name: string; app_url: string};\n    seo: {\n      key: string;\n      name: string;\n      value: string;\n      defaultValue: string;\n    }[];\n    themes: BootstrapData['themes'];\n    custom_code: {\n      css?: string;\n      html?: string;\n    };\n  };\n  settings: Settings;\n}\n\nexport interface AppearanceDefaults {\n  appearance: {\n    themes: {\n      light: Record<string, string>;\n      dark: Record<string, string>;\n    };\n  };\n  settings: Settings;\n}\n\ninterface AppearanceStore {\n  defaults: AppearanceDefaults | null;\n  iframeWindow: Window | null;\n  config: IAppearanceConfig | null;\n  setDefaults: (value: AppearanceDefaults) => void;\n  setIframeWindow: (value: Window) => void;\n  isDirty: boolean;\n  setIsDirty: (value: boolean) => void;\n  preview: {\n    setValues: (settings: AppearanceEditorValues) => void;\n    setThemeFont: (font: FontConfig | null) => void;\n    setThemeValue: (name: string, value: string) => void;\n    setActiveTheme: (themeId: ThemeId | null) => void;\n    setHighlight: (selector: string | null | undefined) => void;\n    setCustomCode: (mode: 'css' | 'html', value?: string) => void;\n  };\n}\n\nlet resolvePreviewAppIsLoaded = () => {};\nexport const previewAppIsLoaded = new Promise<void>(\n  resolve => (resolvePreviewAppIsLoaded = resolve),\n);\n\nexport const useAppearanceStore = create<AppearanceStore>()(\n  subscribeWithSelector((set, get) => ({\n    defaults: null,\n    iframeWindow: null,\n    isDirty: false,\n    setIsDirty: value => {\n      set(() => ({isDirty: value}));\n    },\n    config: mergedAppearanceConfig,\n    setDefaults: value => {\n      set({defaults: {...value}});\n    },\n    setIframeWindow: value => {\n      set({iframeWindow: value});\n      value.addEventListener('message', e => {\n        if (\n          e.data.source === 'be-appearance-preview' &&\n          e.data.type === 'appLoaded'\n        ) {\n          resolvePreviewAppIsLoaded();\n        }\n      });\n    },\n    preview: {\n      setValues: values => {\n        const preview = get().iframeWindow;\n        postMessage(preview, {type: 'setValues', values});\n      },\n      setThemeFont: font => {\n        const preview = get().iframeWindow;\n        postMessage(preview, {type: 'setThemeFont', value: font});\n      },\n      setThemeValue: (name, value) => {\n        const preview = get().iframeWindow;\n        postMessage(preview, {type: 'setThemeValue', name, value});\n      },\n      setActiveTheme: themeId => {\n        const preview = get().iframeWindow!;\n        postMessage(preview, {type: 'setActiveTheme', themeId});\n      },\n      setCustomCode: (mode, value) => {\n        const preview = get().iframeWindow;\n        postMessage(preview, {type: 'setCustomCode', mode, value});\n      },\n      setHighlight: selector => {\n        let node: HTMLElement | null = null;\n        const document = get().iframeWindow?.document;\n        if (document && selector) {\n          node = document.querySelector(selector);\n        }\n        if (node) {\n          requestAnimationFrame(() => {\n            if (!node) return;\n            node.scrollIntoView({\n              behavior: 'smooth',\n              block: 'center',\n              inline: 'center',\n            });\n          });\n        }\n      },\n    },\n  })),\n);\n\nfunction postMessage(window: Window | null, command: AllCommands) {\n  if (window) {\n    window.postMessage({source: 'be-appearance-editor', ...command}, '*');\n  }\n}\n\nexport function appearanceState(): AppearanceStore {\n  return useAppearanceStore.getState();\n}\n","import {queryOptions, useQuery} from '@tanstack/react-query';\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\nimport {AdminSettings} from '../admin-settings';\nimport {apiClient} from '@common/http/query-client';\n\nexport interface FetchAdminSettingsResponse\n  extends BackendResponse,\n    AdminSettings {}\n\nexport function useAdminSettings() {\n  return useQuery(adminSettingsQueryOptions);\n}\n\nexport const adminSettingsQueryOptions = queryOptions({\n  queryKey: ['fetchAdminSettings'],\n  queryFn: () => fetchAdminSettings(),\n  staleTime: Infinity,\n  select: prepareSettingsForHookForm,\n});\n\nfunction fetchAdminSettings() {\n  return apiClient\n    .get<FetchAdminSettingsResponse>('settings')\n    .then(r => r.data);\n}\n\n// need to cast all numbers to strings and null/undefined to empty string recursively, otherwise hook form isDirty functionality will not work properly when binding numbers to text fields due to string/number type mismatch\nexport function prepareSettingsForHookForm(obj: any) {\n  for (const key in obj) {\n    if (Array.isArray(obj[key])) {\n      obj[key] = obj[key].map(prepareSettingsForHookForm);\n    } else if (typeof obj[key] === 'object') {\n      obj[key] = prepareSettingsForHookForm(obj[key]);\n    } else if (typeof obj[key] === 'number') {\n      obj[key] = obj[key].toString();\n    } else if (obj[key] == null) {\n      obj[key] = '';\n    }\n  }\n  return obj;\n}\n","import {useQuery} from '@tanstack/react-query';\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\nimport {apiClient} from '@common/http/query-client';\nimport {AppearanceDefaults, AppearanceEditorValues} from '../appearance-store';\nimport {prepareSettingsForHookForm} from '@common/admin/settings/requests/use-admin-settings';\n\nexport interface FetchAppearanceValuesResponse extends BackendResponse {\n  values: AppearanceEditorValues;\n  defaults: AppearanceDefaults;\n}\n\nexport function useAppearanceEditorValuesQuery() {\n  return useQuery({\n    queryKey: ['admin/appearance/values'],\n    queryFn: () => fetchAppearanceValues(),\n    staleTime: Infinity,\n    select: prepareSettingsForHookForm,\n  });\n}\n\nexport function useAppearanceEditorValues(): AppearanceEditorValues {\n  const {data} = useAppearanceEditorValuesQuery();\n  return data!.values;\n}\n\nfunction fetchAppearanceValues(): Promise<FetchAppearanceValuesResponse> {\n  return apiClient.get('admin/appearance/values').then(r => r.data);\n}\n","import {Navigate, Outlet, useLocation, useMatches} from 'react-router';\nimport {useEffect, useRef} from 'react';\nimport {AppearanceEditorValues, appearanceState} from './appearance-store';\nimport {useAppearanceEditorValuesQuery} from './requests/use-appearance-editor-values';\nimport {Trans} from '@ui/i18n/trans';\nimport {ProgressCircle} from '@ui/progress/progress-circle';\nimport {useAppearanceEditorMode} from './commands/use-appearance-editor-mode';\nimport {StaticPageTitle} from '../../seo/static-page-title';\nimport {useSettings} from '@ui/settings/use-settings';\nimport mergedAppearanceConfig from '@common/admin/appearance/config/merged-appearance-config';\n\nfunction usePreviewRoute(): string {\n  const {pathname} = useLocation();\n  const matches = useMatches();\n  const subRoute = (matches.at(-1)?.handle as any)?.previewRoute;\n  const activeSection = pathname.split('/')[3];\n  const config = mergedAppearanceConfig.sections[activeSection];\n\n  const baseRoute =\n    config?.previewRoute || mergedAppearanceConfig.preview.defaultRoute || '/';\n\n  if (subRoute) {\n    return `${baseRoute}/${subRoute}`;\n  }\n\n  return baseRoute;\n}\n\nexport function AppearanceEditorPage() {\n  const {isAppearanceEditorActive} = useAppearanceEditorMode();\n  const {data} = useAppearanceEditorValuesQuery();\n  const {base_url} = useSettings();\n  const iframeRef = useRef<HTMLIFrameElement>(null);\n  const iframeRoute = usePreviewRoute();\n\n  useEffect(() => {\n    // only set defaults snapshot once on route init\n    if (data?.defaults && !appearanceState().defaults) {\n      appearanceState().setDefaults(data.defaults);\n    }\n  }, [data]);\n\n  useEffect(() => {\n    if (iframeRef.current) {\n      appearanceState().setIframeWindow(iframeRef.current.contentWindow!);\n    }\n  }, []);\n\n  // make sure appearance editor iframe can't be nested\n  if (isAppearanceEditorActive) {\n    return <Navigate to=\"/admin\" />;\n  }\n\n  // iframeRoute might contain search params, so we need to parse\n  // it and construct new url with appearanceEditor appended\n  const url = new URL(\n    iframeRoute && iframeRoute !== '/'\n      ? `${base_url}/${iframeRoute}`\n      : `${base_url}`,\n  );\n  url.searchParams.append('appearanceEditor', 'true');\n\n  // set key so iframe is recreated on route change and there's no entry pushed into history stack\n  return (\n    <div className=\"h-screen items-center md:flex\">\n      <StaticPageTitle>\n        <Trans message=\"Appearance\" />\n      </StaticPageTitle>\n      <Sidebar values={data?.values} />\n      <div className=\"relative h-full flex-auto\">\n        <iframe\n          key={iframeRoute}\n          ref={iframeRef}\n          className=\"h-full w-full max-md:hidden\"\n          src={url.toString()}\n        />\n      </div>\n    </div>\n  );\n}\n\ninterface SidebarProps {\n  values: AppearanceEditorValues | undefined;\n}\nfunction Sidebar({values}: SidebarProps) {\n  const spinner = (\n    <div className=\"flex h-full flex-auto items-center justify-center\">\n      <ProgressCircle isIndeterminate aria-label=\"Loading editor\" />\n    </div>\n  );\n\n  return (\n    <div className=\"relative z-10 h-full w-full border-r bg shadow-lg @container md:w-320\">\n      {values ? <Outlet /> : spinner}\n    </div>\n  );\n}\n","import clsx from 'clsx';\nimport {forwardRef, ReactNode} from 'react';\nimport {KeyboardArrowRightIcon} from '@ui/icons/material/KeyboardArrowRight';\nimport {ButtonBase, ButtonBaseProps} from '@ui/buttons/button-base';\n\ninterface Props extends ButtonBaseProps {\n  startIcon?: ReactNode;\n  endIcon?: ReactNode;\n  description?: ReactNode;\n}\nexport const AppearanceButton = forwardRef<HTMLButtonElement, Props>(\n  ({startIcon, children, className, description, endIcon, ...other}, ref) => {\n    return (\n      <ButtonBase\n        ref={ref}\n        display=\"flex\"\n        className={clsx(\n          'relative mb-10 h-54 w-full items-center gap-10 rounded-input border bg px-14 text-sm hover:bg-hover',\n          className,\n          other.disabled && 'pointer-events-none opacity-50',\n        )}\n        variant={null}\n        {...other}\n      >\n        {startIcon}\n        <span className=\"block min-w-0\">\n          <span className=\"block\">{children}</span>\n          {description && (\n            <span className=\"block overflow-hidden overflow-ellipsis whitespace-nowrap text-xs text-muted\">\n              {description}\n            </span>\n          )}\n        </span>\n        <div className=\"ml-auto\">\n          {endIcon ?? (\n            <KeyboardArrowRightIcon\n              aria-hidden\n              className=\"text-muted icon-sm\"\n            />\n          )}\n        </div>\n      </ButtonBase>\n    );\n  },\n);\n","import {Link, useNavigate} from 'react-router';\nimport {AppearanceEditorValues} from '../../appearance-store';\nimport {Button} from '@ui/buttons/button';\nimport {AddIcon} from '@ui/icons/material/Add';\nimport {Trans} from '@ui/i18n/trans';\nimport {useFieldArray} from 'react-hook-form';\nimport {AppearanceButton} from '../../appearance-button';\nimport {nanoid} from 'nanoid';\nimport {useTrans} from '@ui/i18n/use-trans';\nimport {message} from '@ui/i18n/message';\nimport {Fragment} from 'react';\n\nexport function MenuList() {\n  const navigate = useNavigate();\n  const {trans} = useTrans();\n  const {fields, append} = useFieldArray<\n    AppearanceEditorValues,\n    'settings.menus',\n    'key'\n  >({\n    name: 'settings.menus',\n    keyName: 'key',\n  });\n\n  return (\n    <Fragment>\n      <div>\n        {fields.map((field, index) => (\n          <AppearanceButton to={`${index}`} key={field.key} elementType={Link}>\n            {field.name}\n          </AppearanceButton>\n        ))}\n      </div>\n      <div className=\"text-right\">\n        <Button\n          variant=\"outline\"\n          color=\"primary\"\n          startIcon={<AddIcon />}\n          size=\"xs\"\n          onClick={() => {\n            const id = nanoid(10);\n            append({\n              name: trans(\n                message('New menu :number', {\n                  values: {number: fields.length + 1},\n                }),\n              ),\n              id,\n              positions: [],\n              items: [],\n            });\n            navigate(`${fields.length}`);\n          }}\n        >\n          <Trans message=\"Create menu\" />\n        </Button>\n      </div>\n    </Fragment>\n  );\n}\n","import {MenuSectionConfig} from '../../../types/appearance-editor-config';\nimport mergedAppearanceConfig from '../../../config/merged-appearance-config';\nimport {MenuItemConfig} from '@common/menus/menu-config';\n\nexport function useAvailableRoutes(): Partial<MenuItemConfig>[] {\n  const menuConfig = mergedAppearanceConfig.sections.menus.config;\n\n  if (!menuConfig) return [];\n\n  return (menuConfig as MenuSectionConfig).availableRoutes.map(route => {\n    return {\n      id: route,\n      label: route,\n      action: route,\n      type: 'route',\n      target: '_self',\n    };\n  });\n}\n","export function ucFirst<T extends string>(string: T): T {\n  if (!string) return string;\n  return (string.charAt(0).toUpperCase() + string.slice(1)) as T;\n}\n","import {useForm} from 'react-hook-form';\nimport {Accordion, AccordionItem} from '@ui/accordion/accordion';\nimport {Form} from '@ui/forms/form';\nimport {FormTextField} from '@ui/forms/input-field/text-field/text-field';\nimport {AddIcon} from '@ui/icons/material/Add';\nimport {Button} from '@ui/buttons/button';\nimport {useAvailableRoutes} from '@common/admin/appearance/sections/menus/hooks/available-routes';\nimport {List, ListItem} from '@ui/list/list';\nimport {useDialogContext} from '@ui/overlays/dialog/dialog-context';\nimport {Dialog} from '@ui/overlays/dialog/dialog';\nimport {DialogHeader} from '@ui/overlays/dialog/dialog-header';\nimport {DialogBody} from '@ui/overlays/dialog/dialog-body';\nimport {Trans} from '@ui/i18n/trans';\nimport {useValueLists} from '@common/http/value-lists';\nimport {ReactNode} from 'react';\nimport {nanoid} from 'nanoid';\nimport {MenuItemConfig} from '@common/menus/menu-config';\nimport {ucFirst} from '@ui/utils/string/uc-first';\n\ninterface AddMenuItemDialogProps {\n  title?: ReactNode;\n}\nexport function AddMenuItemDialog({\n  title = <Trans message=\"Add menu item\" />,\n}: AddMenuItemDialogProps) {\n  const {data} = useValueLists(['menuItemCategories']);\n  const categories = data?.menuItemCategories || [];\n  const routeItems = useAvailableRoutes();\n\n  return (\n    <Dialog size=\"sm\">\n      <DialogHeader>{title}</DialogHeader>\n      <DialogBody>\n        <Accordion variant=\"outline\">\n          <AccordionItem\n            label={<Trans message=\"Link\" />}\n            bodyClassName=\"max-h-240 overflow-y-auto\"\n          >\n            <AddCustomLink />\n          </AccordionItem>\n          <AccordionItem\n            label={<Trans message=\"Route\" />}\n            bodyClassName=\"max-h-240 overflow-y-auto\"\n          >\n            <AddRoute items={routeItems} />\n          </AccordionItem>\n          {categories.map(category => (\n            <AccordionItem\n              key={category.name}\n              label={<Trans message={category.name} />}\n            >\n              <AddRoute items={category.items} />\n            </AccordionItem>\n          ))}\n        </Accordion>\n      </DialogBody>\n    </Dialog>\n  );\n}\n\nfunction AddCustomLink() {\n  const form = useForm<MenuItemConfig>({\n    defaultValues: {\n      id: nanoid(6),\n      type: 'link',\n      target: '_blank',\n    },\n  });\n  const {close} = useDialogContext();\n\n  return (\n    <Form\n      form={form}\n      onSubmit={value => {\n        close(value);\n      }}\n    >\n      <FormTextField\n        required\n        name=\"label\"\n        label={<Trans message=\"Label\" />}\n        className=\"mb-20\"\n      />\n      <FormTextField\n        required\n        type=\"url\"\n        name=\"action\"\n        placeholder=\"https://\"\n        label={<Trans message=\"Url\" />}\n        className=\"mb-20\"\n      />\n      <div className=\"text-right\">\n        <Button type=\"submit\" variant=\"flat\" color=\"primary\" size=\"xs\">\n          <Trans message=\"Add to menu\" />\n        </Button>\n      </div>\n    </Form>\n  );\n}\n\ninterface AddRouteProps {\n  items: Partial<MenuItemConfig>[];\n}\nfunction AddRoute({items}: AddRouteProps) {\n  const {close} = useDialogContext();\n\n  return (\n    <List>\n      {items.map(item => {\n        return (\n          <ListItem\n            key={item.id}\n            startIcon={<AddIcon size=\"sm\" />}\n            onSelected={() => {\n              if (item.label) {\n                const last = item.label.split('/').pop();\n                item.label = last ? ucFirst(last) : item.label;\n                item.id = nanoid(6);\n              }\n              if (!item.target) {\n                item.target = '_self';\n              }\n              close(item);\n            }}\n          >\n            {item.label}\n          </ListItem>\n        );\n      })}\n    </List>\n  );\n}\n","import {createSvgIcon} from '../create-svg-icon';\n\nexport const DragIndicatorIcon = createSvgIcon(\n  <path d=\"M11 18c0 1.1-.9 2-2 2s-2-.9-2-2 .9-2 2-2 2 .9 2 2zm-2-8c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0-6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm6 4c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z\" />\n, 'DragIndicatorOutlined');\n","export default \"__VITE_ASSET__abcb02f6__\"","import {\n  DropPosition,\n  SortSession,\n} from '@ui/interactions/dnd/sortable/use-sortable';\nimport {SortableStrategy} from '@ui/interactions/dnd/sortable/sortable-strategy';\nimport {droppables} from '@ui/interactions/dnd/drag-state';\n\nexport const sortableLineStrategy: SortableStrategy = {\n  onDragStart: () => {},\n  onDragEnter: () => {},\n  onDragOver: ({e, ref, item, sortSession, onDropPositionChange}) => {\n    const previousPosition = sortSession.dropPosition;\n    let newPosition: DropPosition = null;\n\n    const rect = droppables.get(item)?.rect;\n    if (rect) {\n      const midY = rect.top + rect.height / 2;\n      if (e.clientY <= midY) {\n        newPosition = 'before';\n      } else if (e.clientY >= midY) {\n        newPosition = 'after';\n      }\n    }\n\n    if (newPosition !== previousPosition) {\n      const overIndex = sortSession.sortables.indexOf(item);\n      sortSession.dropPosition = newPosition;\n      onDropPositionChange?.(sortSession.dropPosition);\n\n      clearLinePreview(sortSession);\n      if (ref.current) {\n        if (sortSession.dropPosition === 'after') {\n          addLinePreview(ref.current, 'bottom', sortSession);\n        } else {\n          // if it's the first row, add preview to the top border, as there's no previous element\n          if (overIndex === 0) {\n            addLinePreview(ref.current, 'top', sortSession);\n            // otherwise add preview to the bottom border of the previous row\n          } else {\n            const droppableId = sortSession.sortables[overIndex - 1];\n            const droppable = droppables.get(droppableId);\n            if (droppable?.ref.current) {\n              addLinePreview(droppable.ref.current, 'bottom', sortSession);\n            }\n          }\n        }\n      }\n\n      const itemIndex = sortSession.sortables.indexOf(item);\n\n      // don't move item at all if hovering over itself\n      if (sortSession.activeIndex === itemIndex) {\n        sortSession.finalIndex = sortSession.activeIndex;\n        return;\n      }\n\n      // adjust final drop index based on whether we're dropping drag target after or before it's original index\n      // this is needed, so we get the same index if target is dropped after current item or before next item\n      const dragDirection =\n        overIndex > sortSession.activeIndex ? 'after' : 'before';\n      if (dragDirection === 'after') {\n        sortSession.finalIndex =\n          sortSession.dropPosition === 'before' ? itemIndex - 1 : itemIndex;\n      } else {\n        sortSession.finalIndex =\n          sortSession.dropPosition === 'after' ? itemIndex + 1 : itemIndex;\n      }\n    }\n  },\n  onDragEnd: sortSession => {\n    clearLinePreview(sortSession);\n  },\n};\n\nfunction clearLinePreview(sortSession: SortSession) {\n  if (sortSession?.linePreviewEl) {\n    sortSession.linePreviewEl.style.borderBottomColor = '';\n    sortSession.linePreviewEl.style.borderTopColor = '';\n    sortSession.linePreviewEl = undefined;\n  }\n}\n\nfunction addLinePreview(\n  el: HTMLElement,\n  side: 'top' | 'bottom',\n  sortSession: SortSession,\n) {\n  const color = 'rgb(var(--be-primary))';\n  if (side === 'top') {\n    el.style.borderTopColor = color;\n  } else {\n    el.style.borderBottomColor = color;\n  }\n  if (sortSession) {\n    sortSession.linePreviewEl = el;\n  }\n}\n","import {clamp} from '@ui/utils/number/clamp';\n\nexport function moveItemInArray<T = any>(\n  array: T[],\n  fromIndex: number,\n  toIndex: number,\n): T[] {\n  const from = clamp(fromIndex, 0, array.length - 1);\n  const to = clamp(toIndex, 0, array.length - 1);\n\n  if (from === to) {\n    return array;\n  }\n\n  const target = array[from];\n  const delta = to < from ? -1 : 1;\n\n  for (let i = from; i !== to; i += delta) {\n    array[i] = array[i + delta];\n  }\n\n  array[to] = target;\n\n  return array;\n}\n","export function moveItemInNewArray<T>(\n  array: T[],\n  from: number,\n  to: number\n): T[] {\n  const newArray = array.slice();\n  newArray.splice(\n    to < 0 ? newArray.length + to : to,\n    0,\n    newArray.splice(from, 1)[0]\n  );\n\n  return newArray;\n}\n","import {moveItemInArray} from '@ui/utils/array/move-item-in-array';\nimport {droppables} from '@ui/interactions/dnd/drag-state';\nimport {moveItemInNewArray} from '@ui/utils/array/move-item-in-new-array';\nimport type {SortSession} from '@ui/interactions/dnd/sortable/use-sortable';\nimport type {SortableStrategy} from '@ui/interactions/dnd/sortable/sortable-strategy';\n\nconst transition = 'transform 0.2s cubic-bezier(0.2, 0, 0, 1)';\n\nexport const sortableTransformStrategy: SortableStrategy = {\n  onDragStart: sortSession => {\n    sortSession.sortables.forEach((sortable, index) => {\n      const droppable = droppables.get(sortable);\n      if (!droppable?.ref.current) return;\n\n      droppable.ref.current.style.transition = transition;\n\n      if (sortSession?.activeIndex === index) {\n        droppable.ref.current.style.opacity = '0.4';\n      }\n    });\n  },\n  onDragEnter: (\n    sortSession: SortSession,\n    overIndex: number,\n    currentIndex: number,\n  ) => {\n    moveItemInArray(sortSession.sortables, currentIndex, overIndex);\n    const rects = sortSession.sortables.map(s => droppables.get(s)?.rect);\n\n    sortSession.sortables.forEach((sortable, index) => {\n      if (!sortSession) return;\n\n      const newRects = moveItemInNewArray(\n        rects,\n        overIndex,\n        sortSession.activeIndex,\n      );\n      const oldRect = rects[index];\n      const newRect = newRects[index];\n      const sortableTarget = droppables.get(sortable);\n\n      if (sortableTarget?.ref.current && newRect && oldRect) {\n        const x = newRect.left - oldRect.left;\n        const y = newRect.top - oldRect.top;\n        sortableTarget.ref.current.style.transform = `translate3d(${x}px, ${y}px, 0)`;\n      }\n    });\n\n    sortSession.finalIndex = overIndex;\n  },\n  onDragOver: () => {},\n  onDragEnd: sortSession => {\n    // clear any styles and transforms applied to sortables during sorting\n    sortSession.sortables.forEach(sortable => {\n      const droppable = droppables.get(sortable);\n      if (droppable?.ref.current) {\n        droppable.ref.current.style.transform = '';\n        droppable.ref.current.style.transition = '';\n        droppable.ref.current.style.opacity = '';\n        droppable.ref.current.style.zIndex = '';\n      }\n    });\n  },\n};\n","import {moveItemInArray} from '@ui/utils/array/move-item-in-array';\nimport {droppables} from '@ui/interactions/dnd/drag-state';\nimport {SortableStrategy} from '@ui/interactions/dnd/sortable/sortable-strategy';\n\nexport const sortableMoveNodeStrategy: SortableStrategy = {\n  onDragStart: () => {},\n  onDragOver: () => {},\n  onDragEnter: (sortSession, overIndex: number, currentIndex: number) => {\n    const node = droppables.get(sortSession.sortables[currentIndex])?.ref\n      .current;\n    if (node) {\n      moveNode(node, currentIndex, overIndex);\n      moveItemInArray(sortSession.sortables, currentIndex, overIndex);\n      sortSession.finalIndex = overIndex;\n    }\n  },\n  onDragEnd: () => {},\n};\n\nfunction moveNode(el: HTMLElement, currentIndex: number, newIndex: number) {\n  const parentEl = el.parentElement!;\n  if (newIndex < 0) {\n    parentEl.prepend(el);\n  } else {\n    // if parent already contains this node, and we're changing\n    // node's index within parent, need to adjust index by one\n    if (currentIndex > -1 && currentIndex <= newIndex) {\n      newIndex++;\n    }\n    const ref = parentEl.children.item(newIndex);\n    if (ref) {\n      ref.before(el);\n    } else {\n      parentEl.append(el);\n    }\n  }\n}\n","import {DraggableId, DragPreviewRenderer, useDraggable} from '../use-draggable';\nimport {useDroppable} from '../use-droppable';\nimport {RefObject, useEffect} from 'react';\nimport {getScrollParent, mergeProps} from '@react-aria/utils';\nimport {droppables} from '../drag-state';\nimport {SortableStrategy} from '@ui/interactions/dnd/sortable/sortable-strategy';\nimport {sortableLineStrategy} from '@ui/interactions/dnd/sortable/sortable-line-strategy';\nimport {sortableTransformStrategy} from '@ui/interactions/dnd/sortable/sortable-transform-strategy';\nimport {sortableMoveNodeStrategy} from '@ui/interactions/dnd/sortable/sortable-move-node-strategy';\nimport {updateRects} from '@ui/interactions/dnd/update-rects';\n\nexport interface SortSession {\n  // items in this list will be moved when user is sorting\n  sortables: DraggableId[];\n\n  // sortable user started dragging to start this session\n  activeSortable: DraggableId;\n  activeIndex: number;\n\n  // final index sortable was dropped in and should be moved to\n  finalIndex: number;\n\n  // drop position for displaying line preview\n  dropPosition: DropPosition;\n  // element that currently has a line preview at the top or bottom\n  linePreviewEl?: HTMLElement;\n  scrollParent?: Element;\n  scrollListener: () => void;\n  ref: RefObject<HTMLElement>;\n}\n\nlet sortSession: null | SortSession = null;\n\nexport type DropPosition = 'before' | 'after' | null;\n\ntype StrategyName = 'line' | 'liveSort' | 'moveNode';\n\nconst strategies: Record<StrategyName, SortableStrategy> = {\n  line: sortableLineStrategy,\n  liveSort: sortableTransformStrategy,\n  moveNode: sortableMoveNodeStrategy,\n};\n\nexport interface UseSortableProps {\n  item: DraggableId;\n  items: DraggableId[];\n  onSortStart?: () => void;\n  onSortEnd?: (oldIndex: number, newIndex: number) => void;\n  onDragEnd?: () => void;\n  onDropPositionChange?: (dropPosition: DropPosition) => void;\n  ref: RefObject<HTMLElement>;\n  type: string;\n  preview?: RefObject<DragPreviewRenderer>;\n  strategy?: StrategyName;\n  disabled?: boolean;\n}\nexport function useSortable({\n  item,\n  items,\n  type,\n  ref,\n  onSortEnd,\n  onSortStart,\n  onDragEnd,\n  preview,\n  disabled,\n  onDropPositionChange,\n  strategy = 'liveSort',\n}: UseSortableProps) {\n  // todo: issue with sorting after scrolling menu editor item list\n\n  // update sortables and active index, in case we lazy load more items while sorting\n  useEffect(() => {\n    if (sortSession && sortSession.sortables.length !== items.length) {\n      sortSession.sortables = [...items];\n      sortSession.activeIndex = items.indexOf(item);\n    }\n  }, [items, item]);\n\n  const {draggableProps, dragHandleRef} = useDraggable({\n    id: item,\n    ref,\n    type,\n    preview,\n    disabled,\n    onDragStart: () => {\n      sortSession = {\n        sortables: [...items],\n        activeSortable: item,\n        activeIndex: items.indexOf(item),\n        finalIndex: items.indexOf(item),\n        dropPosition: null,\n        ref,\n        scrollParent: ref.current ? getScrollParent(ref.current) : undefined,\n        scrollListener: () => {\n          updateRects(droppables);\n        },\n      };\n      strategies[strategy].onDragStart(sortSession);\n\n      onSortStart?.();\n      sortSession.scrollParent?.addEventListener(\n        'scroll',\n        sortSession.scrollListener,\n      );\n    },\n    onDragEnd: () => {\n      if (!sortSession) return;\n\n      sortSession.dropPosition = null;\n      onDropPositionChange?.(sortSession.dropPosition);\n      if (sortSession.activeIndex !== sortSession.finalIndex) {\n        onSortEnd?.(sortSession.activeIndex, sortSession.finalIndex);\n      }\n      sortSession.scrollParent?.removeEventListener(\n        'scroll',\n        sortSession.scrollListener,\n      );\n      strategies[strategy].onDragEnd(sortSession);\n      // call \"onDragEnd\" after \"onSortEnd\", so listener has a chance to use sort session data\n      onDragEnd?.();\n      sortSession = null;\n    },\n    getData: () => {},\n  });\n\n  const {droppableProps} = useDroppable({\n    id: item,\n    ref,\n    types: [type],\n    disabled,\n    allowDragEventsFromItself: true,\n    onDragOver: (target, e) => {\n      if (!sortSession) return;\n      strategies[strategy].onDragOver({\n        e,\n        ref,\n        item,\n        sortSession,\n        onDropPositionChange,\n      });\n    },\n    onDragEnter: () => {\n      if (!sortSession) return;\n      const overIndex = sortSession.sortables.indexOf(item);\n      const oldIndex = sortSession.sortables.indexOf(\n        sortSession.activeSortable,\n      );\n      strategies[strategy].onDragEnter(sortSession, overIndex, oldIndex);\n    },\n    onDragLeave: () => {\n      if (!sortSession) return;\n      sortSession.dropPosition = null;\n      onDropPositionChange?.(sortSession.dropPosition);\n    },\n  });\n\n  return {\n    sortableProps: {...mergeProps(draggableProps, droppableProps)},\n    dragHandleRef,\n  };\n}\n","import {FieldArrayWithId, useFormContext, useWatch} from 'react-hook-form';\nimport {Fragment, useEffect, useMemo, useRef} from 'react';\nimport {Link, useNavigate, useParams} from 'react-router';\nimport {MenuSectionConfig} from '@common/admin/appearance/types/appearance-editor-config';\nimport {\n  AppearanceEditorValues,\n  appearanceState,\n  useAppearanceStore,\n} from '@common/admin/appearance/appearance-store';\nimport {FormTextField} from '@ui/forms/input-field/text-field/text-field';\nimport {Button} from '@ui/buttons/button';\nimport {AddMenuItemDialog} from '@common/admin/appearance/sections/menus/add-menu-item-dialog';\nimport {AppearanceButton} from '@common/admin/appearance/appearance-button';\nimport {AddIcon} from '@ui/icons/material/Add';\nimport {DragIndicatorIcon} from '@ui/icons/material/DragIndicator';\nimport {ConfirmationDialog} from '@ui/overlays/dialog/confirmation-dialog';\nimport {IllustratedMessage} from '@ui/images/illustrated-message';\nimport {SvgImage} from '@ui/images/svg-image';\nimport {DeleteIcon} from '@ui/icons/material/Delete';\nimport {DialogTrigger} from '@ui/overlays/dialog/dialog-trigger';\nimport {Option} from '@ui/forms/select/select';\nimport {Trans} from '@ui/i18n/trans';\nimport dropdownMenu from './dropdown-menu.svg';\nimport {FormChipField} from '@ui/forms/input-field/chip-field/form-chip-field';\nimport {\n  useSortable,\n  UseSortableProps,\n} from '@ui/interactions/dnd/sortable/use-sortable';\nimport {IconButton} from '@ui/buttons/icon-button';\nimport {createSvgIconFromTree} from '@ui/icons/create-svg-icon';\nimport {useSettings} from '@ui/settings/use-settings';\nimport {MenuItemConfig} from '@common/menus/menu-config';\nimport {MenuEditorFormValue} from '@common/admin/appearance/sections/menus/menu-editor-form';\nimport {moveItemInNewArray} from '@ui/utils/array/move-item-in-new-array';\n\nexport function AppearanceMenuEditor() {\n  const {menuIndex} = useParams();\n  const navigate = useNavigate();\n\n  const {getValues} = useFormContext<AppearanceEditorValues>();\n  const menuFormPath = `settings.menus.${menuIndex!}` as 'settings.menus.0';\n  const menu = getValues(menuFormPath);\n\n  useEffect(() => {\n    // go to menu list, if menu can't be found\n    if (!menu) {\n      navigate('/admin/appearance/menus');\n    } else {\n      appearanceState().preview.setHighlight(`[data-menu-id=\"${menu.id}\"]`);\n    }\n  }, [navigate, menu]);\n\n  if (!menu) {\n    return null;\n  }\n\n  return <MenuEditorSection menuFormPath={menuFormPath} />;\n}\n\ninterface MenuEditorFormProps {\n  menuFormPath: 'settings.menus.0';\n}\nfunction MenuEditorSection({menuFormPath}: MenuEditorFormProps) {\n  const {\n    site: {has_mobile_app},\n  } = useSettings();\n  const menuSectionConfig = useAppearanceStore(\n    s => s.config?.sections.menus.config,\n  ) as MenuSectionConfig;\n\n  const menuPositions = useMemo(() => {\n    const positions = [...menuSectionConfig?.positions];\n    if (has_mobile_app) {\n      positions.push('mobile-app-about');\n    }\n    return positions.map(position => ({\n      key: position,\n      name: position.replaceAll('-', ' '),\n    }));\n  }, [menuSectionConfig, has_mobile_app]);\n\n  return (\n    <Fragment>\n      <div className=\"mb-30 border-b pb-30\">\n        <FormTextField\n          name={`${menuFormPath}.name`}\n          label={<Trans message=\"Menu name\" />}\n          className=\"mb-20\"\n          autoFocus\n        />\n        <FormChipField\n          chipSize=\"sm\"\n          name={`${menuFormPath}.positions`}\n          valueKey=\"id\"\n          label={<Trans message=\"Menu positions\" />}\n          description={\n            <Trans message=\"Where should this menu appear on the site\" />\n          }\n        >\n          {menuPositions.map(item => (\n            <Option key={item.key} value={item.key} capitalizeFirst>\n              {item.name}\n            </Option>\n          ))}\n        </FormChipField>\n      </div>\n      <MenuItemsManager formPath={`${menuFormPath}.items`} />\n      <div className=\"text-right\">\n        <DeleteMenuTrigger />\n      </div>\n    </Fragment>\n  );\n}\n\ninterface MenuItemsManagerProps {\n  formPath: string;\n}\nexport function MenuItemsManager({formPath}: MenuItemsManagerProps) {\n  const navigate = useNavigate();\n  const form = useFormContext();\n  const items = useWatch({\n    control: form.control,\n    name: formPath,\n  }) as MenuItemConfig[];\n\n  return (\n    <Fragment>\n      <div className=\"flex flex-shrink-0 items-center justify-between gap-16\">\n        <Trans message=\"Menu items\" />\n        <DialogTrigger\n          type=\"popover\"\n          placement=\"right\"\n          offset={20}\n          onClose={(menuItemConfig?: MenuItemConfig) => {\n            if (menuItemConfig) {\n              form.setValue(formPath, [...items, menuItemConfig], {\n                shouldDirty: true,\n              });\n              navigate(`${items.length}`);\n            }\n          }}\n        >\n          <Button\n            variant=\"outline\"\n            color=\"primary\"\n            size=\"xs\"\n            startIcon={<AddIcon />}\n          >\n            <Trans message=\"Add\" />\n          </Button>\n          <AddMenuItemDialog />\n        </DialogTrigger>\n      </div>\n      <div className=\"mt-20 flex-shrink-0\">\n        {items.map((item, index) => (\n          <MenuListItem\n            key={item.id}\n            item={item}\n            items={items}\n            index={index}\n            onSortEnd={(oldIndex, newIndex) => {\n              form.setValue(\n                formPath,\n                moveItemInNewArray(items, oldIndex, newIndex),\n                {shouldDirty: true},\n              );\n            }}\n          />\n        ))}\n        {!items.length ? (\n          <IllustratedMessage\n            size=\"xs\"\n            className=\"my-40\"\n            image={<SvgImage src={dropdownMenu} />}\n            title={<Trans message=\"No menu items yet\" />}\n            description={\n              <Trans message=\"Click “add“ button to start adding links, pages, routes and other items to this menu. \" />\n            }\n          />\n        ) : null}\n      </div>\n    </Fragment>\n  );\n}\n\nfunction DeleteMenuTrigger() {\n  const navigate = useNavigate();\n  const params = useParams();\n  const menuIndex = parseInt(params.menuIndex!);\n\n  const form = useFormContext<MenuEditorFormValue>();\n  const name = `settings.menus` as 'settings.menus';\n  const menus = useWatch({\n    control: form.control,\n    name,\n  });\n  const menu = menus[menuIndex];\n\n  if (!menu) return null;\n\n  return (\n    <DialogTrigger\n      type=\"modal\"\n      onClose={isConfirmed => {\n        if (isConfirmed) {\n          form.setValue(\n            name,\n            menus.filter((_, i) => i != menuIndex),\n            {\n              shouldDirty: true,\n            },\n          );\n          navigate('/admin/appearance/menus');\n        }\n      }}\n    >\n      <Button\n        variant=\"outline\"\n        color=\"danger\"\n        size=\"xs\"\n        startIcon={<DeleteIcon />}\n      >\n        <Trans message=\"Delete menu\" />\n      </Button>\n      <ConfirmationDialog\n        isDanger\n        title={<Trans message=\"Delete menu\" />}\n        body={\n          <Trans\n            message=\"Are you sure you want to delete “:name“?\"\n            values={{name: menu.name}}\n          />\n        }\n        confirm={<Trans message=\"Delete\" />}\n      />\n    </DialogTrigger>\n  );\n}\n\ninterface MenuListItemProps {\n  item: MenuItemConfig;\n  items: FieldArrayWithId[];\n  index: number;\n  onSortEnd: UseSortableProps['onSortEnd'];\n}\nfunction MenuListItem({item, items, index, onSortEnd}: MenuListItemProps) {\n  const ref = useRef<HTMLButtonElement>(null);\n  const {sortableProps, dragHandleRef} = useSortable({\n    item,\n    items,\n    type: 'menuEditorSortable',\n    ref,\n    onSortEnd,\n    strategy: 'liveSort',\n  });\n\n  const Icon = item.icon && createSvgIconFromTree(item.icon);\n  const iconOnlyLabel = (\n    <div className=\"flex items-center gap-4 text-xs text-muted\">\n      {Icon && <Icon size=\"sm\" />}\n      (<Trans message=\"No label...\" />)\n    </div>\n  );\n\n  return (\n    <Fragment>\n      <AppearanceButton\n        elementType={Link}\n        to={`${index}`}\n        ref={ref}\n        {...sortableProps}\n      >\n        <div className=\"flex items-center gap-10\">\n          <IconButton ref={dragHandleRef} size=\"sm\">\n            <DragIndicatorIcon className=\"text-muted hover:cursor-move\" />\n          </IconButton>\n          <div>{item.label || iconOnlyLabel}</div>\n        </div>\n      </AppearanceButton>\n    </Fragment>\n  );\n}\n","import {useControlledState} from '@react-stately/utils';\nimport React, {Fragment, useState} from 'react';\nimport {useController} from 'react-hook-form';\nimport {mergeProps} from '@react-aria/utils';\nimport clsx from 'clsx';\nimport {produce} from 'immer';\nimport {Permission, PermissionRestriction} from '../permission';\nimport {useValueLists} from '../../http/value-lists';\nimport {Accordion, AccordionItem} from '@ui/accordion/accordion';\nimport {List, ListItem} from '@ui/list/list';\nimport {Switch} from '@ui/forms/toggle/switch';\nimport {TextField} from '@ui/forms/input-field/text-field/text-field';\nimport {DoneAllIcon} from '@ui/icons/material/DoneAll';\nimport {Trans} from '@ui/i18n/trans';\nimport {ucFirst} from '@ui/utils/string/uc-first';\n\ninterface PermissionSelectorProps {\n  value?: Permission[];\n  onChange?: (value: Permission[]) => void;\n  valueListKey?: 'permissions' | 'workspacePermissions';\n}\nexport const PermissionSelector = React.forwardRef<\n  HTMLDivElement,\n  PermissionSelectorProps\n>(({valueListKey = 'permissions', ...props}, ref) => {\n  const {data} = useValueLists([valueListKey]);\n  const permissions = data?.permissions || data?.workspacePermissions;\n\n  const [value, setValue] = useControlledState(props.value, [], props.onChange);\n  const [showAdvanced, setShowAdvanced] = useState(false);\n\n  if (!permissions) return null;\n\n  const groupedPermissions = buildPermissionList(\n    permissions,\n    value,\n    showAdvanced,\n  );\n\n  const onRestrictionChange = (newPermission: Permission) => {\n    const newValue = [...value];\n    const index = newValue.findIndex(p => p.id === newPermission.id);\n    if (index > -1) {\n      newValue.splice(index, 1, newPermission);\n    }\n    setValue(newValue);\n  };\n\n  return (\n    <Fragment>\n      <Accordion variant=\"outline\" ref={ref}>\n        {groupedPermissions.map(({groupName, items, anyChecked}) => (\n          <AccordionItem\n            label={<Trans message={prettyName(groupName)} />}\n            key={groupName}\n            startIcon={anyChecked ? <DoneAllIcon size=\"sm\" /> : undefined}\n          >\n            <List>\n              {items.map(permission => {\n                const index = value.findIndex(v => v.id === permission.id);\n                const isChecked = index > -1;\n\n                return (\n                  <div key={permission.id}>\n                    <ListItem\n                      onSelected={() => {\n                        if (isChecked) {\n                          const newValue = [...value];\n                          newValue.splice(index, 1);\n                          setValue(newValue);\n                        } else {\n                          setValue([...value, permission]);\n                        }\n                      }}\n                      endSection={\n                        <Switch\n                          tabIndex={-1}\n                          checked={isChecked}\n                          onChange={() => {}}\n                        />\n                      }\n                      description={<Trans message={permission.description} />}\n                    >\n                      <Trans\n                        message={permission.display_name || permission.name}\n                      />\n                    </ListItem>\n                    {isChecked && (\n                      <Restrictions\n                        permission={permission}\n                        onChange={onRestrictionChange}\n                      />\n                    )}\n                  </div>\n                );\n              })}\n            </List>\n          </AccordionItem>\n        ))}\n      </Accordion>\n      <Switch\n        className=\"mt-30\"\n        checked={showAdvanced}\n        onChange={e => {\n          setShowAdvanced(e.target.checked);\n        }}\n      >\n        <Trans message=\"Show advanced permissions\" />\n      </Switch>\n    </Fragment>\n  );\n});\n\ninterface RestrictionsProps {\n  permission: Permission;\n  onChange?: (newPermission: Permission) => void;\n}\nfunction Restrictions({permission, onChange}: RestrictionsProps) {\n  if (!permission?.restrictions?.length) return null;\n\n  const setRestrictionValue = (\n    name: string,\n    value: PermissionRestriction['value'],\n  ) => {\n    const nextState = produce(permission, draftState => {\n      const restriction = draftState.restrictions.find(r => r.name === name);\n      if (restriction) {\n        restriction.value = value;\n      }\n    });\n    onChange?.(nextState);\n  };\n\n  return (\n    <div className=\"px-40 py-20\">\n      {permission.restrictions.map((restriction, index) => {\n        const isLast = index === permission.restrictions.length - 1;\n\n        const name = <Trans message={prettyName(restriction.name)} />;\n        const description = restriction.description ? (\n          <Trans message={restriction.description} />\n        ) : undefined;\n\n        if (restriction.type === 'bool') {\n          return (\n            <Switch\n              description={description}\n              key={restriction.name}\n              className={clsx(!isLast && 'mb-30')}\n              checked={Boolean(restriction.value)}\n              onChange={e => {\n                setRestrictionValue(restriction.name, e.target.checked);\n              }}\n            >\n              {name}\n            </Switch>\n          );\n        }\n\n        return (\n          <TextField\n            size=\"sm\"\n            label={name}\n            description={description}\n            type=\"number\"\n            key={restriction.name}\n            className={clsx(!isLast && 'mb-30')}\n            value={(restriction.value as string) || ''}\n            onChange={e => {\n              setRestrictionValue(\n                restriction.name,\n                e.target.value === '' ? undefined : parseInt(e.target.value),\n              );\n            }}\n          />\n        );\n      })}\n    </div>\n  );\n}\n\nexport type FormChipFieldProps = PermissionSelectorProps & {\n  name: string;\n};\nexport function FormPermissionSelector(props: FormChipFieldProps) {\n  const {\n    field: {onChange, value = [], ref},\n  } = useController({\n    name: props.name,\n  });\n\n  const formProps: Partial<PermissionSelectorProps> = {\n    onChange,\n    value,\n  };\n\n  return <PermissionSelector ref={ref} {...mergeProps(formProps, props)} />;\n}\n\nexport const prettyName = (name: string) => {\n  return ucFirst(name.replace('_', ' '));\n};\n\ninterface PermissionGroup {\n  groupName: string;\n  anyChecked: boolean;\n  items: Permission[];\n}\n\n// merge \"restrictions\" from selected value into all permissions to make\n// it easier to bind restriction values to form inputs\nexport function buildPermissionList(\n  allPermissions: Permission[],\n  selectedPermissions: Permission[],\n  showAdvanced: boolean,\n) {\n  const groupedPermissions: PermissionGroup[] = [];\n\n  allPermissions.forEach(permission => {\n    const index = selectedPermissions.findIndex(p => p.id === permission.id);\n    if (!showAdvanced && permission.advanced) return;\n\n    let group: PermissionGroup | undefined = groupedPermissions.find(\n      g => g.groupName === permission.group,\n    );\n    if (!group) {\n      group = {groupName: permission.group, anyChecked: false, items: []};\n      groupedPermissions.push(group);\n    }\n\n    if (index > -1) {\n      const mergedPermission = {\n        ...permission,\n        restrictions: mergeRestrictions(\n          permission.restrictions,\n          selectedPermissions[index].restrictions,\n        ),\n      };\n      group.anyChecked = true;\n      group.items.push(mergedPermission);\n    } else {\n      group.items.push(permission);\n    }\n  });\n\n  return groupedPermissions;\n}\n\nfunction mergeRestrictions(\n  allRestrictions: PermissionRestriction[],\n  selectedRestrictions: PermissionRestriction[],\n): PermissionRestriction[] {\n  return allRestrictions?.map(restriction => {\n    const selected = selectedRestrictions.find(\n      r => r.name === restriction.name,\n    );\n    if (selected) {\n      return {...restriction, value: selected.value};\n    } else {\n      return restriction;\n    }\n  });\n}\n","export const iconGridStyle = {\n  grid: 'flex flex-wrap gap-24',\n  button:\n    'flex flex-col items-center rounded hover:bg-hover h-90 aspect-square',\n};\n","import React, {Suspense} from 'react';\nimport {iconGridStyle} from '@common/ui/icon-picker/icon-grid-style';\nimport {Skeleton} from '@ui/skeleton/skeleton';\nimport {useTrans} from '@ui/i18n/use-trans';\nimport {AnimatePresence, m} from 'framer-motion';\nimport {opacityAnimation} from '@ui/animation/opacity-animation';\nimport {TextField} from '@ui/forms/input-field/text-field/text-field';\nimport {IconTree} from '@ui/icons/create-svg-icon';\n\nconst skeletons = [...Array(60).keys()];\n\nconst IconList = React.lazy(() => import('./icon-list'));\n\ninterface IconListProps {\n  onIconSelected: (icon: IconTree[] | null) => void;\n}\nexport default function IconPicker({onIconSelected}: IconListProps) {\n  const {trans} = useTrans();\n  const [value, setValue] = React.useState('');\n\n  return (\n    <div className=\"py-4\">\n      <TextField\n        className=\"mb-20\"\n        value={value}\n        onChange={e => {\n          setValue(e.target.value);\n        }}\n        placeholder={trans({message: 'Search icons...'})}\n      />\n      <AnimatePresence mode=\"wait\">\n        <Suspense\n          fallback={\n            <m.div {...opacityAnimation} className={iconGridStyle.grid}>\n              {skeletons.map((_, index) => (\n                <div className={iconGridStyle.button} key={index}>\n                  <Skeleton variant=\"rect\" />\n                </div>\n              ))}\n            </m.div>\n          }\n        >\n          <m.div {...opacityAnimation} className={iconGridStyle.grid}>\n            <IconList searchQuery={value} onIconSelected={onIconSelected} />\n          </m.div>\n        </Suspense>\n      </AnimatePresence>\n    </div>\n  );\n}\n","import React from 'react';\nimport IconPicker from './icon-picker';\nimport {Trans} from '@ui/i18n/trans';\nimport {Dialog} from '@ui/overlays/dialog/dialog';\nimport {DialogHeader} from '@ui/overlays/dialog/dialog-header';\nimport {DialogBody} from '@ui/overlays/dialog/dialog-body';\nimport {useDialogContext} from '@ui/overlays/dialog/dialog-context';\n\nexport function IconPickerDialog() {\n  return (\n    <Dialog size=\"w-850\" className=\"min-h-dialog\">\n      <DialogHeader>\n        <Trans message=\"Select icon\" />\n      </DialogHeader>\n      <DialogBody>\n        <IconPickerWrapper />\n      </DialogBody>\n    </Dialog>\n  );\n}\n\nfunction IconPickerWrapper() {\n  const {close} = useDialogContext();\n  return (\n    <IconPicker\n      onIconSelected={value => {\n        close(value);\n      }}\n    />\n  );\n}\n","import {FormTextField} from '@ui/forms/input-field/text-field/text-field';\nimport {Trans} from '@ui/i18n/trans';\nimport {useValueLists} from '../../http/value-lists';\nimport {useTrans} from '@ui/i18n/use-trans';\nimport {FormChipField} from '@ui/forms/input-field/chip-field/form-chip-field';\nimport {Item} from '@ui/forms/listbox/item';\nimport {Fragment, useEffect, useMemo} from 'react';\nimport {\n  buildPermissionList,\n  prettyName,\n} from '@common/auth/ui/permission-selector';\nimport {Section} from '@ui/forms/listbox/section';\nimport {useFormContext} from 'react-hook-form';\nimport {FormSelect, Option} from '@ui/forms/select/select';\nimport {useAvailableRoutes} from '../appearance/sections/menus/hooks/available-routes';\nimport {ButtonBaseProps} from '@ui/buttons/button-base';\nimport {DialogTrigger} from '@ui/overlays/dialog/dialog-trigger';\nimport {IconButton} from '@ui/buttons/icon-button';\nimport {EditIcon} from '@ui/icons/material/Edit';\nimport {IconPickerDialog} from '../../ui/icon-picker/icon-picker-dialog';\nimport {message} from '@ui/i18n/message';\nimport {usePrevious} from '@ui/utils/hooks/use-previous';\nimport {useSettings} from '@ui/settings/use-settings';\nimport {MenuItemConfig} from '@common/menus/menu-config';\nimport {createSvgIconFromTree, IconTree} from '@ui/icons/create-svg-icon';\n\ninterface NameProps {\n  prefixName: (name: string) => string;\n}\n\ninterface MenuItemFormProps {\n  formPathPrefix?: string;\n  hideRoleAndPermissionFields?: boolean;\n}\nexport function MenuItemForm({\n  formPathPrefix,\n  hideRoleAndPermissionFields,\n}: MenuItemFormProps) {\n  const {trans} = useTrans();\n  const prefixName = (name: string): string => {\n    return formPathPrefix ? `${formPathPrefix}.${name}` : name;\n  };\n\n  return (\n    <Fragment>\n      <FormTextField\n        className=\"mb-20\"\n        name={prefixName('label')}\n        label={<Trans message=\"Label\" />}\n        placeholder={trans(message('No label...'))}\n        startAppend={<IconDialogTrigger prefixName={prefixName} />}\n      />\n      <DestinationSelector prefixName={prefixName} />\n      <TargetSelect prefixName={prefixName} />\n      {!hideRoleAndPermissionFields && (\n        <Fragment>\n          <RoleSelector prefixName={prefixName} />\n          <PermissionSelector prefixName={prefixName} />\n          <SubscriptionStatusSelector prefixName={prefixName} />\n        </Fragment>\n      )}\n    </Fragment>\n  );\n}\n\ninterface IconDialogTriggerProps extends ButtonBaseProps, NameProps {}\nfunction IconDialogTrigger({\n  prefixName,\n  ...buttonProps\n}: IconDialogTriggerProps) {\n  const {watch, setValue} = useFormContext<MenuItemConfig>();\n  const fieldName = prefixName('icon') as 'icon';\n  const watchedItemIcon = watch(fieldName);\n  const Icon = watchedItemIcon && createSvgIconFromTree(watchedItemIcon);\n  return (\n    <DialogTrigger\n      type=\"modal\"\n      onClose={(iconTree?: IconTree[] | null) => {\n        // null will be set explicitly if icon is cleared via icon picker\n        if (iconTree || iconTree === null) {\n          setValue(fieldName, iconTree, {\n            shouldDirty: true,\n          });\n        }\n      }}\n    >\n      <IconButton\n        className=\"text-muted icon-sm\"\n        variant=\"outline\"\n        size=\"md\"\n        {...buttonProps}\n      >\n        {Icon ? <Icon /> : <EditIcon />}\n      </IconButton>\n      <IconPickerDialog />\n    </DialogTrigger>\n  );\n}\n\nfunction DestinationSelector({prefixName}: NameProps) {\n  const form = useFormContext<MenuItemConfig>();\n  const currentType = form.watch(prefixName('type') as 'type');\n  const previousType = usePrevious(currentType);\n  const {data} = useValueLists(['menuItemCategories']);\n  const categories = data?.menuItemCategories || [];\n  const selectedCategory = categories.find(c => c.type === currentType);\n  const {trans} = useTrans();\n  const routeItems = useAvailableRoutes();\n\n  // clear \"action\" field when \"type\" field changes\n  useEffect(() => {\n    if (previousType && previousType !== currentType) {\n      form.setValue(prefixName('action') as 'action', '');\n    }\n  }, [currentType, previousType, form, prefixName]);\n\n  return (\n    <Fragment>\n      <FormSelect\n        className=\"mb-20\"\n        name={prefixName('type')}\n        selectionMode=\"single\"\n        label={<Trans message=\"Type\" />}\n      >\n        <Option value=\"link\">\n          <Trans message=\"Custom link\" />\n        </Option>\n        <Option value=\"route\">\n          <Trans message=\"Site page\" />\n        </Option>\n        {categories.map(category => (\n          <Option key={category.type} value={category.type}>\n            {category.name}\n          </Option>\n        ))}\n      </FormSelect>\n      {currentType === 'link' && (\n        <FormTextField\n          className=\"mb-20\"\n          required\n          type=\"url\"\n          name={prefixName('action')}\n          placeholder={trans({message: 'Enter a url...'})}\n          label={<Trans message=\"Url\" />}\n        />\n      )}\n      {currentType === 'route' && (\n        <FormSelect\n          className=\"mb-20\"\n          required\n          items={routeItems}\n          name={prefixName('action')}\n          label={<Trans message=\"Page\" />}\n          searchPlaceholder={trans(message('Search pages'))}\n          showSearchField\n          selectionMode=\"single\"\n        >\n          {item => (\n            <Item value={item.id} key={item.id}>\n              {item.label}\n            </Item>\n          )}\n        </FormSelect>\n      )}\n      {selectedCategory && (\n        <FormSelect\n          className=\"mb-20\"\n          required\n          items={selectedCategory.items}\n          name={prefixName('action')}\n          showSearchField\n          searchPlaceholder={trans(message('Search...'))}\n          selectionMode=\"single\"\n          label={<Trans message={selectedCategory.name} />}\n        >\n          {item => (\n            <Item value={item.action}>\n              <Trans message={item.label} />\n            </Item>\n          )}\n        </FormSelect>\n      )}\n    </Fragment>\n  );\n}\n\nfunction RoleSelector({prefixName}: NameProps) {\n  const {data} = useValueLists(['roles', 'permissions']);\n  const roles = data?.roles || [];\n  const {trans} = useTrans();\n\n  return (\n    <FormChipField\n      className=\"my-20\"\n      placeholder={trans({message: 'Add role...'})}\n      label={<Trans message=\"Only show if user has role\" />}\n      name={prefixName('roles')}\n      chipSize=\"sm\"\n      suggestions={roles}\n      valueKey=\"id\"\n      displayWith={c => roles.find(r => r.id === c.id)?.name}\n    >\n      {role => (\n        <Item value={role.id} key={role.id} capitalizeFirst>\n          <Trans message={role.name} />\n        </Item>\n      )}\n    </FormChipField>\n  );\n}\n\nfunction PermissionSelector({prefixName}: NameProps) {\n  const {data} = useValueLists(['roles', 'permissions']);\n  const {trans} = useTrans();\n\n  const groupedPermissions = useMemo(() => {\n    return buildPermissionList(data?.permissions || [], [], false);\n  }, [data?.permissions]);\n\n  return (\n    <FormChipField\n      label={<Trans message=\"Only show if user has permissions\" />}\n      placeholder={trans({message: 'Add permission...'})}\n      chipSize=\"sm\"\n      suggestions={groupedPermissions}\n      name={prefixName('permissions')}\n      valueKey=\"name\"\n    >\n      {({groupName, items}) => (\n        <Section label={prettyName(groupName)} key={groupName}>\n          {items.map(permission => (\n            <Item\n              key={permission.name}\n              value={permission.name}\n              description={<Trans message={permission.description} />}\n            >\n              <Trans message={permission.display_name || permission.name} />\n            </Item>\n          ))}\n        </Section>\n      )}\n    </FormChipField>\n  );\n}\n\nfunction SubscriptionStatusSelector({prefixName}: NameProps) {\n  const {billing} = useSettings();\n  if (!billing.enable) return null;\n  return (\n    <FormSelect\n      selectionMode=\"single\"\n      className=\"mt-20\"\n      label={<Trans message=\"Subscription status\" />}\n      name={prefixName('subscriptionStatus')}\n    >\n      <Item value=\"subscribed\">\n        <Trans message=\"Only show if user is subscribed\" />\n      </Item>\n      <Item value=\"unsubscribed\">\n        <Trans message=\"Only show if user is not subscribed\" />\n      </Item>\n      <Item value={null}>\n        <Trans message=\"Always show\" />\n      </Item>\n    </FormSelect>\n  );\n}\n\nfunction TargetSelect({prefixName}: NameProps) {\n  return (\n    <FormSelect\n      className=\"mt-20\"\n      selectionMode=\"single\"\n      name={prefixName('target')}\n      label={<Trans message=\"Open link in\" />}\n    >\n      <Option value=\"_self\">\n        <Trans message=\"Same window\" />\n      </Option>\n      <Option value=\"_blank\">\n        <Trans message=\"New window\" />\n      </Option>\n    </FormSelect>\n  );\n}\n","import {useFieldArray, useFormContext} from 'react-hook-form';\nimport {Fragment, useEffect} from 'react';\nimport {appearanceState} from '@common/admin/appearance/appearance-store';\nimport {Button} from '@ui/buttons/button';\nimport {DeleteIcon} from '@ui/icons/material/Delete';\nimport {ConfirmationDialog} from '@ui/overlays/dialog/confirmation-dialog';\nimport {DialogTrigger} from '@ui/overlays/dialog/dialog-trigger';\nimport {Trans} from '@ui/i18n/trans';\nimport {useNavigate} from '@common/ui/navigation/use-navigate';\nimport {MenuItemForm} from '@common/admin/menus/menu-item-form';\nimport {useParams} from 'react-router';\nimport {MenuItemConfig} from '@common/menus/menu-config';\n\nexport function AppearanceMenuItemEditor() {\n  const {menuIndex, menuItemIndex} = useParams();\n  return (\n    <MenuItemEditor\n      itemsPath={`settings.menus.${menuIndex}.items`}\n      itemIndex={menuItemIndex!}\n    />\n  );\n}\n\ninterface Props {\n  itemsPath: string;\n  itemIndex: number | string;\n}\nexport function MenuItemEditor({itemsPath, itemIndex}: Props) {\n  const navigate = useNavigate();\n  const {getValues} = useFormContext();\n  const item = getValues(`${itemsPath}.${itemIndex}`);\n\n  // go to menu editor, if menu item can't be found\n  useEffect(() => {\n    if (!item) {\n      navigate(`..`, {relative: 'path', replace: true});\n    } else {\n      appearanceState().preview.setHighlight(\n        `[data-menu-item-id=\"${item.id}\"]`,\n      );\n    }\n  }, [navigate, item]);\n\n  // only render form when menu and item are available to avoid issues with hook form default values\n  if (!item) {\n    return null;\n  }\n\n  return <MenuItemEditorSection itemsPath={itemsPath} itemIndex={itemIndex} />;\n}\n\nfunction MenuItemEditorSection({itemsPath, itemIndex}: Props) {\n  return (\n    <Fragment>\n      <MenuItemForm formPathPrefix={`${itemsPath}.${itemIndex}`} />\n      <div className=\"mt-40 text-right\">\n        <DeleteItemTrigger itemsPath={itemsPath} itemIndex={itemIndex} />\n      </div>\n    </Fragment>\n  );\n}\n\nfunction DeleteItemTrigger({itemsPath, itemIndex}: Props) {\n  const navigate = useNavigate();\n  const {fields} = useFieldArray({\n    name: itemsPath,\n  });\n  const {setValue, getValues} = useFormContext();\n\n  const item = fields[+itemIndex] as MenuItemConfig;\n\n  return (\n    <DialogTrigger\n      type=\"modal\"\n      onClose={isConfirmed => {\n        if (isConfirmed) {\n          if (itemIndex) {\n            const currentItems = getValues(itemsPath) as MenuItemConfig[];\n            setValue(\n              itemsPath,\n              currentItems.filter((_, i) => i !== +itemIndex),\n              {shouldDirty: true},\n            );\n            navigate(`..`, {relative: 'path', replace: true});\n          }\n        }\n      }}\n    >\n      <Button\n        variant=\"outline\"\n        color=\"danger\"\n        size=\"xs\"\n        startIcon={<DeleteIcon />}\n      >\n        <Trans message=\"Delete this item\" />\n      </Button>\n      <ConfirmationDialog\n        isDanger\n        title={<Trans message=\"Delete item\" />}\n        body={\n          <Trans\n            message=\"Are you sure you want to delete “:name“?\"\n            values={{name: item.label}}\n          />\n        }\n        confirm={<Trans message=\"Delete\" />}\n      />\n    </DialogTrigger>\n  );\n}\n","import {useMutation} from '@tanstack/react-query';\nimport {AppearanceEditorValues} from '@common/admin/appearance/appearance-store';\nimport {toast} from '@ui/toast/toast';\nimport {apiClient, queryClient} from '@common/http/query-client';\nimport {showHttpErrorToast} from '@common/http/show-http-error-toast';\nimport {message} from '@ui/i18n/message';\nimport {DeepPartial} from 'utility-types';\nimport {FetchAppearanceValuesResponse} from '@common/admin/appearance/requests/use-appearance-editor-values';\n\nexport const saveAppearanceChangesMutationKey = ['appearance-editor-save'];\n\nexport function useSaveAppearanceChanges() {\n  return useMutation({\n    mutationKey: saveAppearanceChangesMutationKey,\n    mutationFn: (values: DeepPartial<AppearanceEditorValues>) => {\n      return saveChanges(values);\n    },\n    onSuccess: async response => {\n      queryClient.setQueryData(['admin/appearance/values'], response);\n      toast(message('Changes saved'));\n    },\n    onError: err => showHttpErrorToast(err),\n  });\n}\n\nfunction saveChanges(changes: DeepPartial<AppearanceEditorValues>) {\n  return apiClient\n    .post<FetchAppearanceValuesResponse>(`admin/appearance`, {changes})\n    .then(r => r.data);\n}\n","import {useBlocker} from 'react-router';\nimport {DialogTrigger} from '@ui/overlays/dialog/dialog-trigger';\nimport {ConfirmationDialog} from '@ui/overlays/dialog/confirmation-dialog';\nimport {Trans} from '@ui/i18n/trans';\nimport {useEffect} from 'react';\n\ninterface Props {\n  isBlocked: boolean;\n  allowedPath?: string;\n}\nexport function BlockerDialog({isBlocked, allowedPath}: Props) {\n  const {state, reset, proceed} = useBlocker(({nextLocation}) => {\n    return (\n      isBlocked &&\n      // only block navigation if specified path is not within next location\n      (!allowedPath || !nextLocation.pathname.includes(allowedPath))\n    );\n  });\n\n  useEffect(() => {\n    const handleBeforeUnload = (e: BeforeUnloadEvent) => {\n      if (isBlocked) {\n        e.preventDefault();\n        e.returnValue = true;\n      }\n    };\n    window.addEventListener('beforeunload', handleBeforeUnload);\n    return () => window.removeEventListener('beforeunload', handleBeforeUnload);\n  }, [isBlocked]);\n\n  return (\n    <DialogTrigger\n      type=\"modal\"\n      isOpen={state === 'blocked'}\n      onClose={isConfirmed => {\n        if (state !== 'blocked') return;\n        if (isConfirmed) {\n          proceed();\n        } else {\n          reset();\n        }\n      }}\n    >\n      <ConfirmationDialog\n        isDanger\n        title={<Trans message=\"You have unsaved changes\" />}\n        body={\n          <Trans message=\"Your changes will be lost if you continue. Are you sure you want to discard them?\" />\n        }\n        close={<Trans message=\"Stay here\" />}\n        confirm={<Trans message=\"Discard changes\" />}\n      />\n    </DialogTrigger>\n  );\n}\n","import {Fragment, ReactElement, ReactNode, useEffect} from 'react';\nimport {Form} from '@ui/forms/form';\nimport {UseFormReturn, useFormState} from 'react-hook-form';\nimport {\n  appearanceState,\n  useAppearanceStore,\n} from '@common/admin/appearance/appearance-store';\nimport {\n  saveAppearanceChangesMutationKey,\n  useSaveAppearanceChanges,\n} from '@common/admin/appearance/requests/use-save-appearance-editor-changes';\nimport {FileUploadProvider} from '@common/uploads/uploader/file-upload-provider';\nimport {Link, useLocation} from 'react-router';\nimport {IconButton} from '@ui/buttons/icon-button';\nimport {CloseIcon} from '@ui/icons/material/Close';\nimport {Trans} from '@ui/i18n/trans';\nimport {Button} from '@ui/buttons/button';\nimport {useIsMutating} from '@tanstack/react-query';\nimport {BlockerDialog} from '@ui/overlays/dialog/blocker-dialog';\n\ninterface Props {\n  children: ReactNode;\n  breadcrumb: ReactElement;\n  form: UseFormReturn<any>;\n  blockerAllowedPath?: string;\n}\nexport function AppearanceEditorForm({\n  children,\n  breadcrumb,\n  form,\n  blockerAllowedPath,\n}: Props) {\n  const {isDirty} = useFormState({control: form.control});\n\n  useEffect(() => {\n    appearanceState().setIsDirty(isDirty);\n    return () => appearanceState().setIsDirty(false);\n  }, [isDirty]);\n\n  useEffect(() => {\n    const subscription = form.watch(values => {\n      appearanceState().preview.setValues(values);\n    });\n    return () => subscription.unsubscribe();\n  }, [form]);\n\n  const saveChanges = useSaveAppearanceChanges();\n  return (\n    <Fragment>\n      <AppearanceEditorLayout breadcrumb={breadcrumb}>\n        <FileUploadProvider>\n          <Form\n            className=\"h-full flex-auto\"\n            id=\"appearance-editor\"\n            form={form}\n            onSubmit={values => {\n              saveChanges.mutate(values, {\n                onSuccess: () => form.reset(values),\n              });\n            }}\n          >\n            {children}\n          </Form>\n        </FileUploadProvider>\n      </AppearanceEditorLayout>\n      <BlockerDialog isBlocked={isDirty} allowedPath={blockerAllowedPath} />\n    </Fragment>\n  );\n}\n\ninterface AppearanceEditorLayoutProps {\n  breadcrumb?: ReactNode;\n  children: ReactNode;\n}\nexport function AppearanceEditorLayout({\n  breadcrumb,\n  children,\n}: AppearanceEditorLayoutProps) {\n  return (\n    <div className=\"flex h-full flex-col\">\n      <AppearanceEditorHeader />\n      {breadcrumb}\n      <div className=\"flex-auto overflow-y-auto\">\n        <div className=\"flex h-full flex-col px-14 py-20\">{children}</div>\n      </div>\n    </div>\n  );\n}\n\nfunction AppearanceEditorHeader() {\n  const {state} = useLocation();\n  const isSaving =\n    useIsMutating({\n      mutationKey: saveAppearanceChangesMutationKey,\n    }) > 0;\n  const isDirty = useAppearanceStore(s => s.isDirty);\n  return (\n    <div className=\"flex h-50 flex-shrink-0 items-center border-b pr-10\">\n      <IconButton\n        border=\"border-r\"\n        className=\"text-muted\"\n        elementType={Link}\n        to={state?.prevPath || '/admin'}\n        replace\n      >\n        <CloseIcon />\n      </IconButton>\n      <div className=\"pl-10\">\n        <Trans message=\"Appearance editor\" />\n      </div>\n      <Button\n        variant=\"flat\"\n        color=\"primary\"\n        className=\"ml-auto block\"\n        disabled={!isDirty || isSaving}\n        type=\"submit\"\n        form=\"appearance-editor\"\n      >\n        {isDirty ? <Trans message=\"Save\" /> : <Trans message=\"Saved\" />}\n      </Button>\n    </div>\n  );\n}\n","import {useLocation, useMatches} from 'react-router';\n\nexport function usePreviousPath() {\n  const location = useLocation();\n  return new URL('.', window.origin + location.pathname).pathname.replace(\n    /\\/$/,\n    '',\n  );\n}\n","import {Link} from 'react-router';\nimport clsx from 'clsx';\nimport React, {Children, Fragment, ReactElement, ReactNode} from 'react';\nimport {KeyboardArrowRightIcon} from '@ui/icons/material/KeyboardArrowRight';\nimport {Trans} from '@ui/i18n/trans';\nimport {IconButton} from '@ui/buttons/icon-button';\nimport {KeyboardArrowLeftIcon} from '@ui/icons/material/KeyboardArrowLeft';\nimport {usePreviousPath} from '@common/ui/navigation/use-previous-path';\n\ninterface Props {\n  children: ReactNode;\n  backLink?: string;\n}\nexport function AppearanceEditorBreadcrumb({children, backLink}: Props) {\n  const childrenArray = Children.toArray(children) as ReactElement[];\n  const previousPath = usePreviousPath();\n\n  const categories = [<Trans key=\"mainLabel\" message=\"Customizing\" />];\n  if (childrenArray.length > 1) {\n    categories.push(childrenArray[0]);\n  }\n  const sections =\n    childrenArray.length > 1 ? childrenArray.slice(1) : childrenArray;\n\n  return (\n    <div className=\"flex h-60 flex-shrink-0 items-center border-b\">\n      <IconButton\n        iconSize=\"md\"\n        radius=\"rounded-none\"\n        className=\"h-full w-50 flex-shrink-0 text-muted\"\n        elementType={Link}\n        to={backLink ?? previousPath}\n      >\n        <KeyboardArrowLeftIcon />\n      </IconButton>\n      <div className=\"min-w-0 border-l p-10\">\n        <LabelList items={categories} className=\"text-xs text-muted\" />\n        <LabelList items={sections} isEmphasized className=\"mt-2 text-sm\" />\n      </div>\n    </div>\n  );\n}\n\ninterface LabelListProps {\n  items: ReactElement[];\n  className: string;\n  isEmphasized?: boolean;\n}\nfunction LabelList({items, className, isEmphasized}: LabelListProps) {\n  return (\n    <div className={clsx('flex items-center gap-4', className)}>\n      {items.map((item, index) => {\n        const isLast = items.length - 1 === index;\n        return (\n          <Fragment key={index}>\n            <div\n              className={clsx(\n                'min-w-0 overflow-hidden overflow-ellipsis whitespace-nowrap',\n                isLast && isEmphasized && 'text-primary',\n              )}\n            >\n              {item}\n            </div>\n            {!isLast &&\n              (isEmphasized ? (\n                <KeyboardArrowRightIcon\n                  className=\"flex-shrink-0 text-muted\"\n                  size=\"font-inherit\"\n                />\n              ) : (\n                <div>&bull;</div>\n              ))}\n          </Fragment>\n        );\n      })}\n    </div>\n  );\n}\n","import {appearanceState, useAppearanceStore} from '../appearance-store';\nimport {FormImageSelector} from '@common/uploads/components/image-selector';\nimport {FormTextField} from '@ui/forms/input-field/text-field/text-field';\nimport {Trans} from '@ui/i18n/trans';\nimport {ReactNode} from 'react';\nimport {Settings} from '@ui/settings/settings';\nimport {useForm} from 'react-hook-form';\nimport {useAppearanceEditorValues} from '@common/admin/appearance/requests/use-appearance-editor-values';\nimport {AppearanceEditorForm} from '@common/admin/appearance/appearance-editor-form';\nimport {AppearanceEditorBreadcrumb} from '@common/admin/appearance/appearance-editor-breadcrumb';\n\ninterface Payload {\n  settings: {\n    branding: {\n      favicon: string;\n      logo_light: string;\n      logo_dark: string;\n      logo_light_mobile: string;\n      logo_dark_mobile: string;\n      site_description: string;\n    };\n  };\n  appearance: {\n    env: {\n      app_name: string;\n    };\n  };\n}\n\nexport function GeneralSection() {\n  const values = useAppearanceEditorValues();\n  const form = useForm<Payload>({\n    defaultValues: {\n      settings: {\n        branding: {\n          favicon: values.settings.branding.favicon,\n          logo_light: values.settings.branding.logo_light,\n          logo_dark: values.settings.branding.logo_dark,\n          logo_light_mobile: values.settings.branding.logo_light_mobile,\n          logo_dark_mobile: values.settings.branding.logo_dark_mobile,\n          site_description: values.settings.branding.site_description,\n        },\n      },\n      appearance: {\n        env: {\n          app_name: values.appearance.env.app_name,\n        },\n      },\n    },\n  });\n  return (\n    <AppearanceEditorForm\n      form={form}\n      breadcrumb={\n        <AppearanceEditorBreadcrumb>\n          <Trans message=\"General\" />\n        </AppearanceEditorBreadcrumb>\n      }\n    >\n      <BrandingImageSelector\n        label={<Trans message=\"Favicon\" />}\n        description={\n          <Trans message=\"This will generate different size favicons. Image should be at least 512x512 in size.\" />\n        }\n        type=\"favicon\"\n      />\n      <BrandingImageSelector\n        label={<Trans message=\"Light logo\" />}\n        description={<Trans message=\"Will be used on dark backgrounds.\" />}\n        type=\"logo_light\"\n      />\n      <BrandingImageSelector\n        label={<Trans message=\"Dark logo\" />}\n        description={\n          <Trans message=\"Will be used on light backgrounds. Will default to light logo if left empty.\" />\n        }\n        type=\"logo_dark\"\n      />\n      <BrandingImageSelector\n        label={<Trans message=\"Mobile light logo\" />}\n        description={\n          <Trans message=\"Will be used on light backgrounds on mobile. Will default to desktop logo if left empty.\" />\n        }\n        type=\"logo_light_mobile\"\n      />\n      <BrandingImageSelector\n        label={<Trans message=\"Mobile dark logo\" />}\n        description={\n          <Trans message=\"Will be used on dark backgrounds on mobile. Will default to desktop if left empty.\" />\n        }\n        type=\"logo_dark_mobile\"\n      />\n      <SiteNameTextField />\n      <SiteDescriptionTextArea />\n    </AppearanceEditorForm>\n  );\n}\n\ninterface ImageSelectorProps {\n  label: ReactNode;\n  description: ReactNode;\n  type: keyof Settings['branding'];\n}\nfunction BrandingImageSelector({label, description, type}: ImageSelectorProps) {\n  const defaultValue = useAppearanceStore(\n    s => s.defaults?.settings.branding[type],\n  );\n  return (\n    <FormImageSelector\n      name={`settings.branding.${type}`}\n      className=\"mb-30 border-b pb-30\"\n      label={label}\n      description={description}\n      diskPrefix=\"branding_media\"\n      defaultValue={defaultValue}\n      onChange={() => {\n        appearanceState().preview.setHighlight('[data-logo=\"navbar\"]');\n      }}\n    />\n  );\n}\nfunction SiteNameTextField() {\n  return (\n    <FormTextField\n      name=\"appearance.env.app_name\"\n      required\n      className=\"mt-20\"\n      label={<Trans message=\"Site name\" />}\n    />\n  );\n}\n\nfunction SiteDescriptionTextArea() {\n  return (\n    <FormTextField\n      name=\"settings.branding.site_description\"\n      className=\"mt-20\"\n      inputElementType=\"textarea\"\n      rows={4}\n      label={<Trans message=\"Site description\" />}\n    />\n  );\n}\n","export function randomNumber(min: number = 1, max: number = 10000) {\n  const randomBuffer = new Uint32Array(1);\n\n  window.crypto.getRandomValues(randomBuffer);\n\n  const number = randomBuffer[0] / (0xffffffff + 1);\n\n  min = Math.ceil(min);\n  max = Math.floor(max);\n  return Math.floor(number * (max - min + 1)) + min;\n}\n","import {NavLink, useNavigate} from 'react-router';\nimport {Fragment, ReactNode} from 'react';\nimport {appearanceState} from '@common/admin/appearance/appearance-store';\nimport {AppearanceButton} from '@common/admin/appearance/appearance-button';\nimport {Button} from '@ui/buttons/button';\nimport {AddIcon} from '@ui/icons/material/Add';\nimport {Trans} from '@ui/i18n/trans';\nimport {useFormContext} from 'react-hook-form';\nimport {useTrans} from '@ui/i18n/use-trans';\nimport {message} from '@ui/i18n/message';\nimport {randomNumber} from '@ui/utils/string/random-number';\nimport {ThemeEditorFormValue} from '@common/admin/appearance/sections/themes/theme-editor-form';\n\ninterface Props {\n  type: string;\n  children?: ReactNode;\n  disabled?: boolean;\n}\nexport function ThemeList({type, children, disabled}: Props) {\n  const {trans} = useTrans();\n  const navigate = useNavigate();\n  const {watch, getValues, setValue} = useFormContext<ThemeEditorFormValue>();\n\n  return (\n    <Fragment>\n      {children}\n      <div className=\"mb-20\">\n        <Button\n          size=\"xs\"\n          variant=\"outline\"\n          color=\"primary\"\n          startIcon={<AddIcon />}\n          disabled={disabled}\n          onClick={() => {\n            const lightThemeColors =\n              appearanceState().defaults?.appearance.themes.light!;\n\n            const currentThemes = getValues('appearance.themes');\n\n            setValue(\n              'appearance.themes',\n              [\n                ...currentThemes,\n                {\n                  id: randomNumber(),\n                  name: trans(message('New theme')),\n                  values: lightThemeColors,\n                  type,\n                },\n              ],\n              {shouldDirty: true},\n            );\n\n            navigate(`${currentThemes.length}`);\n          }}\n        >\n          <Trans message=\"New theme\" />\n        </Button>\n      </div>\n      {watch('appearance.themes').map((field, index) => (\n        <AppearanceButton\n          key={field.id}\n          to={`${index}`}\n          elementType={NavLink}\n          disabled={disabled}\n        >\n          {field.name}\n        </AppearanceButton>\n      ))}\n    </Fragment>\n  );\n}\n","import React, {MutableRefObject, ReactNode, Suspense, useState} from 'react';\nimport {Dialog} from '@ui/overlays/dialog/dialog';\nimport {DialogHeader} from '@ui/overlays/dialog/dialog-header';\nimport {Trans} from '@ui/i18n/trans';\nimport {DialogBody} from '@ui/overlays/dialog/dialog-body';\nimport {ProgressCircle} from '@ui/progress/progress-circle';\nimport {useDialogContext} from '@ui/overlays/dialog/dialog-context';\nimport {DialogFooter} from '@ui/overlays/dialog/dialog-footer';\nimport {Button} from '@ui/buttons/button';\nimport type ReactAce from 'react-ace';\n\nconst AceEditor = React.lazy(() => import('./ace-editor'));\n\ninterface TextEditorSourcecodeDialogProps {\n  defaultValue: string;\n  mode?: 'css' | 'html' | 'php_laravel_blade';\n  title: ReactNode;\n  onSave?: (value?: string) => void;\n  isSaving?: boolean;\n  footerStartAction?: ReactNode;\n  beautify?: boolean;\n  editorRef?: MutableRefObject<ReactAce | null>;\n}\nexport function AceDialog({\n  defaultValue,\n  mode = 'html',\n  title,\n  onSave,\n  isSaving,\n  footerStartAction,\n  beautify,\n  editorRef,\n}: TextEditorSourcecodeDialogProps) {\n  const [value, setValue] = useState(defaultValue);\n  const [isValid, setIsValid] = useState<boolean>(true);\n\n  return (\n    <Dialog size=\"fullscreen\" className=\"h-full w-full\">\n      <DialogHeader>{title}</DialogHeader>\n      <DialogBody className=\"relative flex-auto\" padding=\"p-0\">\n        <Suspense\n          fallback={\n            <div className=\"flex h-400 w-full items-center justify-center\">\n              <ProgressCircle\n                aria-label=\"Loading editor...\"\n                isIndeterminate\n                size=\"md\"\n              />\n            </div>\n          }\n        >\n          <AceEditor\n            beautify={beautify}\n            mode={mode}\n            onChange={newValue => setValue(newValue)}\n            defaultValue={value || ''}\n            onIsValidChange={setIsValid}\n            editorRef={editorRef}\n          />\n        </Suspense>\n      </DialogBody>\n      <Footer\n        disabled={!isValid || isSaving}\n        value={value}\n        onSave={onSave}\n        startAction={footerStartAction}\n      />\n    </Dialog>\n  );\n}\n\ninterface FooterProps {\n  disabled: boolean | undefined;\n  value?: string;\n  onSave?: (value?: string) => void;\n  startAction?: ReactNode;\n}\nfunction Footer({disabled, value, onSave, startAction}: FooterProps) {\n  const {close} = useDialogContext();\n  return (\n    <DialogFooter dividerTop startAction={startAction}>\n      <Button onClick={() => close()}>\n        <Trans message=\"Cancel\" />\n      </Button>\n      <Button\n        disabled={disabled}\n        variant=\"flat\"\n        color=\"primary\"\n        onClick={() => {\n          if (onSave) {\n            onSave(value);\n          } else {\n            close(value);\n          }\n        }}\n      >\n        <Trans message=\"Save\" />\n      </Button>\n    </DialogFooter>\n  );\n}\n","import {useQuery} from '@tanstack/react-query';\nimport {apiClient} from '@common/http/query-client';\n\nexport function useSeoTags(name: string | string[]) {\n  return useQuery({\n    queryKey: ['admin', 'seo-tags', name],\n    queryFn: () => fetchTags(name),\n  });\n}\n\nfunction fetchTags(name: string | string[]) {\n  return apiClient\n    .get<\n      Record<\n        string,\n        {\n          custom: string | null;\n          original: string;\n        }\n      >\n    >(`admin/appearance/seo-tags/${name}`)\n    .then(response => response.data);\n}\n","import {useMutation, useQueryClient} from '@tanstack/react-query';\nimport {apiClient} from '@common/http/query-client';\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\nimport {showHttpErrorToast} from '@common/http/show-http-error-toast';\nimport {toast} from '@ui/toast/toast';\nimport {message} from '@ui/i18n/message';\n\ninterface Response extends BackendResponse {}\n\nexport function useUpdateSeoTags(name: string) {\n  const queryClient = useQueryClient();\n  return useMutation({\n    mutationFn: (payload: {tags: string}) => updateTags(name, payload.tags),\n    onSuccess: async () => {\n      await queryClient.invalidateQueries({\n        queryKey: ['admin', 'seo-tags', name],\n      });\n      toast(message('Updated SEO tags'));\n    },\n    onError: err => showHttpErrorToast(err),\n  });\n}\n\nfunction updateTags(name: string, tags: string): Promise<Response> {\n  return apiClient\n    .put(`admin/appearance/seo-tags/${name}`, {tags})\n    .then(r => r.data);\n}\n","import {Fragment, useRef} from 'react';\nimport {Trans} from '@ui/i18n/trans';\nimport {DialogTrigger} from '@ui/overlays/dialog/dialog-trigger';\nimport {AppearanceButton} from '@common/admin/appearance/appearance-button';\nimport {AceDialog} from '@common/ace-editor/ace-dialog';\nimport mergedAppearanceConfig from '@common/admin/appearance/config/merged-appearance-config';\nimport {SeoSettingsSectionConfig} from '@common/admin/appearance/types/appearance-editor-config';\nimport {MessageDescriptor} from '@ui/i18n/message-descriptor';\nimport {useSeoTags} from '@common/admin/appearance/sections/seo/use-seo-tags';\nimport {useUpdateSeoTags} from '@common/admin/appearance/sections/seo/use-update-seo-tags';\nimport {useDialogContext} from '@ui/overlays/dialog/dialog-context';\nimport {FullPageLoader} from '@ui/progress/full-page-loader';\nimport {Button} from '@ui/buttons/button';\nimport type ReactAce from 'react-ace';\nimport {AppearanceEditorLayout} from '@common/admin/appearance/appearance-editor-form';\nimport {AppearanceEditorBreadcrumb} from '@common/admin/appearance/appearance-editor-breadcrumb';\n\nconst pages =\n  (\n    mergedAppearanceConfig.sections['seo-settings']\n      .config as SeoSettingsSectionConfig\n  )?.pages || [];\n\nconst names = pages.map(page => page.key);\n\nexport function SeoSection() {\n  const {isLoading} = useSeoTags(names);\n\n  return (\n    <AppearanceEditorLayout\n      breadcrumb={\n        <AppearanceEditorBreadcrumb>\n          <Trans message=\"SEO\" />\n        </AppearanceEditorBreadcrumb>\n      }\n    >\n      {isLoading ? (\n        <FullPageLoader />\n      ) : (\n        <Fragment>\n          {pages.map(page => (\n            <TagEditorTrigger\n              key={page.key}\n              label={page.label}\n              name={page.key}\n            />\n          ))}\n        </Fragment>\n      )}\n    </AppearanceEditorLayout>\n  );\n}\n\ninterface TagEditorTriggerProps {\n  label: MessageDescriptor;\n  name: string;\n}\nfunction TagEditorTrigger({label, name}: TagEditorTriggerProps) {\n  const {data, isLoading} = useSeoTags(names);\n\n  return (\n    <DialogTrigger type=\"modal\">\n      <AppearanceButton disabled={isLoading}>\n        <Trans {...label} />\n      </AppearanceButton>\n      {data ? <TagsEditorDialog name={name} value={data[name]} /> : null}\n    </DialogTrigger>\n  );\n}\n\ninterface TagsEditorDialogProps {\n  name: string;\n  value: {custom: string | null; original: string};\n}\nfunction TagsEditorDialog({name, value}: TagsEditorDialogProps) {\n  const {close} = useDialogContext();\n  const updateTags = useUpdateSeoTags(name);\n  const editorRef = useRef<ReactAce | null>(null);\n\n  const resetButton = (\n    <Button\n      variant=\"outline\"\n      color=\"primary\"\n      onClick={() => {\n        if (editorRef.current) {\n          editorRef.current.editor.setValue(value.original);\n        }\n      }}\n    >\n      <Trans message=\"Reset to original\" />\n    </Button>\n  );\n\n  return (\n    <AceDialog\n      mode=\"php_laravel_blade\"\n      title={<Trans message=\"Edit SEO meta tags\" />}\n      footerStartAction={resetButton}\n      editorRef={editorRef}\n      defaultValue={value.custom || value.original}\n      isSaving={updateTags.isPending}\n      beautify={false}\n      onSave={newValue => {\n        if (newValue != null) {\n          updateTags.mutate(\n            {tags: newValue},\n            {\n              onSuccess: () => close(),\n            },\n          );\n        }\n      }}\n    />\n  );\n}\n","import {AppearanceButton} from '@common/admin/appearance/appearance-button';\nimport {DialogTrigger} from '@ui/overlays/dialog/dialog-trigger';\nimport {Trans} from '@ui/i18n/trans';\nimport {useForm, useFormContext} from 'react-hook-form';\nimport {\n  AppearanceEditorValues,\n  appearanceState,\n} from '@common/admin/appearance/appearance-store';\nimport {AceDialog} from '@common/ace-editor/ace-dialog';\nimport {AppearanceEditorForm} from '@common/admin/appearance/appearance-editor-form';\nimport {useAppearanceEditorValues} from '@common/admin/appearance/requests/use-appearance-editor-values';\nimport {AppearanceEditorBreadcrumb} from '@common/admin/appearance/appearance-editor-breadcrumb';\n\ninterface FormValue {\n  appearance: {\n    custom_code: {\n      css: string;\n      html: string;\n    };\n  };\n}\n\nexport function CustomCodeSection() {\n  const values = useAppearanceEditorValues();\n  const form = useForm<FormValue>({\n    defaultValues: {\n      appearance: {\n        custom_code: {\n          css: values.appearance.custom_code.css,\n          html: values.appearance.custom_code.html,\n        },\n      },\n    },\n  });\n  return (\n    <AppearanceEditorForm\n      form={form}\n      breadcrumb={\n        <AppearanceEditorBreadcrumb>\n          <Trans message=\"Custom code\" />\n        </AppearanceEditorBreadcrumb>\n      }\n    >\n      <CustomCodeDialogTrigger mode=\"css\" />\n      <CustomCodeDialogTrigger mode=\"html\" />\n    </AppearanceEditorForm>\n  );\n}\n\ninterface CustomCodeDialogTriggerProps {\n  mode: 'html' | 'css';\n}\nfunction CustomCodeDialogTrigger({mode}: CustomCodeDialogTriggerProps) {\n  const {getValues} = useFormContext<AppearanceEditorValues>();\n  const {setValue} = useFormContext<AppearanceEditorValues>();\n\n  const title =\n    mode === 'html' ? (\n      <Trans message=\"Custom HTML & JavaScript\" />\n    ) : (\n      <Trans message=\"Custom CSS\" />\n    );\n\n  return (\n    <DialogTrigger\n      type=\"modal\"\n      onClose={newValue => {\n        if (newValue != null) {\n          setValue(`appearance.custom_code.${mode}`, newValue, {\n            shouldDirty: true,\n          });\n          appearanceState().preview.setCustomCode(mode, newValue);\n        }\n      }}\n    >\n      <AppearanceButton>{title}</AppearanceButton>\n      <AceDialog\n        title={title}\n        defaultValue={getValues(`appearance.custom_code.${mode}`) || ''}\n        mode={mode}\n      />\n    </DialogTrigger>\n  );\n}\n","export default \"__VITE_ASSET__8acde003__\"","export const USER_MODEL = 'user';\n\nexport interface User {\n  id: number;\n  name: string;\n  email: string;\n  language?: string;\n  timezone?: string;\n  country?: string;\n}\n\nexport interface CompactUser {\n  id: number;\n  name: string;\n  image?: string;\n}\n\nexport interface CompactUserWithEmail extends CompactUser {\n  email: string;\n}\n","import {\n  BackendFilter,\n  FilterControlType,\n  FilterOperator,\n} from '../../datatable/filters/backend-filter';\nimport {message} from '@ui/i18n/message';\nimport {USER_MODEL} from '@ui/types/user';\nimport {SiteConfigContextValue} from '@common/core/settings/site-config-context';\nimport {\n  createdAtFilter,\n  updatedAtFilter,\n} from '@common/datatable/filters/timestamp-filters';\n\nexport const CustomPageDatatableFilters = (\n  config: SiteConfigContextValue,\n): BackendFilter[] => {\n  const dynamicFilters: BackendFilter[] =\n    config.customPages.types.length > 1\n      ? [\n          {\n            control: {\n              type: FilterControlType.Select,\n              defaultValue: 'default',\n              options: config.customPages.types.map(type => ({\n                value: type.type,\n                label: type.label,\n                key: type.type,\n              })),\n            },\n\n            key: 'type',\n            label: message('Type'),\n            description: message('Type of the page'),\n            defaultOperator: FilterOperator.eq,\n          },\n        ]\n      : [];\n\n  return [\n    {\n      key: 'user_id',\n      label: message('User'),\n      description: message('User page was created by'),\n      defaultOperator: FilterOperator.eq,\n      control: {\n        type: FilterControlType.SelectModel,\n        model: USER_MODEL,\n      },\n    },\n    ...dynamicFilters,\n    createdAtFilter({\n      description: message('Date page was created'),\n    }),\n    updatedAtFilter({\n      description: message('Date page was last updated'),\n    }),\n  ];\n};\n","import {ColumnConfig} from '@common/datatable/column-config';\nimport {CustomPage} from '@common/admin/custom-pages/custom-page';\nimport {Trans} from '@ui/i18n/trans';\nimport {Link} from 'react-router';\nimport {LinkStyle} from '@ui/buttons/external-link';\nimport {NameWithAvatar} from '@common/datatable/column-templates/name-with-avatar';\nimport {FormattedDate} from '@ui/i18n/formatted-date';\nimport React from 'react';\nimport {IconButton} from '@ui/buttons/icon-button';\nimport {EditIcon} from '@ui/icons/material/Edit';\n\nexport const CustomPageDatatableColumns: ColumnConfig<CustomPage>[] = [\n  {\n    key: 'slug',\n    allowsSorting: true,\n    width: 'flex-2 min-w-200',\n    visibleInMode: 'all',\n    header: () => <Trans message=\"Slug\" />,\n    body: page => (\n      <Link target=\"_blank\" to={`/pages/${page.slug}`} className={LinkStyle}>\n        {page.slug}\n      </Link>\n    ),\n  },\n  {\n    key: 'user_id',\n    allowsSorting: true,\n    width: 'flex-2 min-w-140',\n    header: () => <Trans message=\"Owner\" />,\n    body: page =>\n      page.user && (\n        <NameWithAvatar\n          image={page.user.image}\n          label={page.user.name}\n          description={page.user.email}\n        />\n      ),\n  },\n  {\n    key: 'type',\n    maxWidth: 'max-w-100',\n    header: () => <Trans message=\"Type\" />,\n    body: page => <Trans message={page.type} />,\n  },\n  {\n    key: 'updated_at',\n    allowsSorting: true,\n    width: 'w-100',\n    header: () => <Trans message=\"Last updated\" />,\n    body: page => <FormattedDate date={page.updated_at} />,\n  },\n  {\n    key: 'actions',\n    header: () => <Trans message=\"Actions\" />,\n    hideHeader: true,\n    align: 'end',\n    width: 'w-84 flex-shrink-0',\n    visibleInMode: 'all',\n    body: page => (\n      <IconButton\n        size=\"md\"\n        className=\"text-muted\"\n        elementType={Link}\n        to={`${page.id}/edit`}\n      >\n        <EditIcon />\n      </IconButton>\n    ),\n  },\n];\n","import React, {useContext, useMemo} from 'react';\nimport {Link} from 'react-router';\nimport {DataTablePage} from '../../datatable/page/data-table-page';\nimport {Trans} from '@ui/i18n/trans';\nimport {DataTableEmptyStateMessage} from '../../datatable/page/data-table-emty-state-message';\nimport articlesSvg from './articles.svg';\nimport {DataTableAddItemButton} from '../../datatable/data-table-add-item-button';\nimport {CustomPageDatatableFilters} from './custom-page-datatable-filters';\nimport {DeleteSelectedItemsAction} from '../../datatable/page/delete-selected-items-action';\nimport {CustomPageDatatableColumns} from '@common/admin/custom-pages/custom-page-datatable-columns';\nimport {SiteConfigContext} from '@common/core/settings/site-config-context';\n\nexport function CustomPageDatablePage() {\n  const config = useContext(SiteConfigContext);\n  const filters = useMemo(() => {\n    return CustomPageDatatableFilters(config);\n  }, [config]);\n\n  return (\n    <DataTablePage\n      endpoint=\"custom-pages\"\n      title={<Trans message=\"Custom pages\" />}\n      filters={filters}\n      columns={CustomPageDatatableColumns}\n      queryParams={{with: 'user'}}\n      actions={<Actions />}\n      selectedActions={<DeleteSelectedItemsAction />}\n      emptyStateMessage={\n        <DataTableEmptyStateMessage\n          image={articlesSvg}\n          title={<Trans message=\"No pages have been created yet\" />}\n          filteringTitle={<Trans message=\"No matching pages\" />}\n        />\n      }\n    />\n  );\n}\n\nfunction Actions() {\n  return (\n    <DataTableAddItemButton elementType={Link} to=\"new\">\n      <Trans message=\"New page\" />\n    </DataTableAddItemButton>\n  );\n}\n","import {message} from '@ui/i18n/message';\nimport {SettingsNavItem} from '@common/admin/settings/settings-nav-config';\n\nexport const AppSettingsNavConfig: SettingsNavItem[] = [\n  {label: message('Drive'), to: 'drive'},\n];\n","import {AppSettingsNavConfig} from '@app/admin/settings/app-settings-nav-config';\nimport {message} from '@ui/i18n/message';\nimport {MessageDescriptor} from '@ui/i18n/message-descriptor';\nimport {getBootstrapData} from '@ui/bootstrap-data/bootstrap-data-store';\n\nexport interface SettingsNavItem {\n  label: MessageDescriptor;\n  to: string;\n  position?: number;\n}\n\nconst filteredSettingsNavConfig: (SettingsNavItem | false)[] = [\n  {label: message('General'), to: 'general', position: 1},\n  ...AppSettingsNavConfig,\n  getBootstrapData().settings.billing.integrated && {\n    label: message('Subscriptions'),\n    to: 'subscriptions',\n    position: 2,\n  },\n  {label: message('Localization'), to: 'localization', position: 3},\n  {\n    label: message('Authentication'),\n    to: 'authentication',\n    position: 4,\n  },\n  {label: message('Uploading'), to: 'uploading', position: 5},\n  {label: message('Outgoing email'), to: 'outgoing-email', position: 6},\n  {label: message('Cache'), to: 'cache', position: 7},\n  {label: message('Analytics'), to: 'analytics', position: 8},\n  {label: message('Logging'), to: 'logging', position: 9},\n  {label: message('Queue'), to: 'queue', position: 10},\n  {label: message('Recaptcha'), to: 'recaptcha', position: 11},\n  {label: message('GDPR'), to: 'gdpr', position: 12},\n  {\n    label: message('Menus'),\n    to: '/admin/appearance/menus',\n    position: 13,\n  },\n  {\n    label: message('Seo'),\n    to: '/admin/appearance/seo-settings',\n    position: 14,\n  },\n  {\n    label: message('Themes'),\n    to: '/admin/appearance/themes',\n    position: 15,\n  },\n].filter(Boolean);\n\nexport const SettingsNavConfig = filteredSettingsNavConfig as SettingsNavItem[];\n","import clsx from 'clsx';\nimport {NavLink, Outlet, useLocation, useNavigate} from 'react-router';\nimport {SettingsNavConfig, SettingsNavItem} from './settings-nav-config';\nimport {useIsMobileMediaQuery} from '@ui/utils/hooks/is-mobile-media-query';\nimport {Option, Select} from '@ui/forms/select/select';\nimport {Trans} from '@ui/i18n/trans';\nimport {StaticPageTitle} from '../../seo/static-page-title';\nimport {useMemo} from 'react';\n\ninterface Props {\n  className?: string;\n  navConfig?: SettingsNavItem[];\n}\nexport function AdminSettingsPage({\n  className,\n  navConfig: propsNavConfig,\n}: Props) {\n  const isMobile = useIsMobileMediaQuery();\n\n  const navConfig = useMemo(() => {\n    const config = propsNavConfig ?? SettingsNavConfig;\n    return config.sort((a, b) => (a.position ?? 0) - (b.position ?? 0));\n  }, [propsNavConfig]);\n\n  return (\n    <div\n      className={clsx(\n        className,\n        'container mx-auto min-h-full items-start gap-30 p-24 md:flex',\n      )}\n    >\n      <StaticPageTitle>\n        <Trans message=\"Settings\" />\n      </StaticPageTitle>\n      {isMobile ? (\n        <MobileNav navConfig={navConfig} />\n      ) : (\n        <DesktopNav navConfig={navConfig} />\n      )}\n      <div className=\"relative max-w-500 flex-auto md:px-30\">\n        <Outlet />\n      </div>\n    </div>\n  );\n}\n\ninterface NavProps {\n  navConfig: SettingsNavItem[];\n}\nfunction MobileNav({navConfig}: NavProps) {\n  const {pathname} = useLocation();\n  const navigate = useNavigate();\n  const value = pathname.split('/').pop();\n\n  return (\n    <Select\n      minWidth=\"min-w-none\"\n      className=\"mb-24 w-full bg\"\n      selectionMode=\"single\"\n      selectedValue={value}\n      onSelectionChange={newPage => {\n        navigate(newPage as string, {state: {prevPath: pathname}});\n      }}\n    >\n      {navConfig.map(item => (\n        <Option key={item.to as string} value={item.to}>\n          <Trans {...item.label} />\n        </Option>\n      ))}\n    </Select>\n  );\n}\n\nfunction DesktopNav({navConfig}: NavProps) {\n  const {pathname} = useLocation();\n  return (\n    <div className=\"sticky top-24 w-240 flex-shrink-0\">\n      {navConfig.map(item => (\n        <NavLink\n          key={item.to as string}\n          to={item.to}\n          state={{prevPath: pathname}}\n          className={({isActive}) =>\n            clsx(\n              'mb-8 block whitespace-nowrap rounded-button p-14 text-sm transition-bg-color',\n              isActive\n                ? 'bg-primary/6 font-semibold text-primary'\n                : 'hover:bg-hover',\n            )\n          }\n        >\n          <Trans {...item.label} />\n        </NavLink>\n      ))}\n    </div>\n  );\n}\n","import {useMutation} from '@tanstack/react-query';\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\nimport {toast} from '@ui/toast/toast';\nimport {message} from '@ui/i18n/message';\nimport {apiClient} from '@common/http/query-client';\nimport {showHttpErrorToast} from '@common/http/show-http-error-toast';\n\ninterface Response extends BackendResponse {}\n\nexport function useGenerateSitemap() {\n  return useMutation({\n    mutationFn: () => generate(),\n    onSuccess: () => {\n      toast(message('Sitemap generated'));\n    },\n    onError: err => showHttpErrorToast(err),\n  });\n}\n\nfunction generate(): Promise<Response> {\n  return apiClient.post('sitemap/generate').then(r => r.data);\n}\n","import {useMutation} from '@tanstack/react-query';\nimport {UseFormReturn} from 'react-hook-form';\nimport {toast} from '@ui/toast/toast';\nimport {apiClient, queryClient} from '@common/http/query-client';\nimport {AdminSettings} from '@common/admin/settings/admin-settings';\nimport {onFormQueryError} from '@common/errors/on-form-query-error';\nimport {FetchAdminSettingsResponse} from '@common/admin/settings/requests/use-admin-settings';\nimport {message} from '@ui/i18n/message';\n\nexport interface AdminSettingsWithFiles {\n  files?: Record<string, File>;\n  client?: Partial<AdminSettings['client']>;\n  server?: Partial<AdminSettings['server']>;\n}\n\nexport function useUpdateAdminSettings(\n  form: UseFormReturn<AdminSettingsWithFiles>,\n) {\n  return useMutation({\n    mutationFn: (props: AdminSettingsWithFiles) => updateAdminSettings(props),\n    onSuccess: response => {\n      toast(message('Settings updated'), {\n        position: 'bottom-right',\n      });\n      return queryClient.setQueryData(['fetchAdminSettings'], response);\n    },\n    onError: r => onFormQueryError(r, form),\n  });\n}\n\nfunction updateAdminSettings({client, server, files}: AdminSettingsWithFiles) {\n  const formData = new FormData();\n  if (client) {\n    formData.set('client', JSON.stringify(client));\n  }\n  if (server) {\n    formData.set('server', JSON.stringify(server));\n  }\n  Object.entries(files || {}).forEach(([key, file]) => {\n    formData.set(key, file);\n  });\n  return apiClient\n    .post<FetchAdminSettingsResponse>('settings', formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data',\n      },\n    })\n    .then(r => r.data);\n}\n","export function SettingsSeparator() {\n  return <div className=\"bg-divider-lighter my-30 h-1\" />;\n}\n","import React from 'react';\nimport {Skeleton} from '@ui/skeleton/skeleton';\nimport {SettingsSeparator} from '@common/admin/settings/form/settings-separator';\nimport {m} from 'framer-motion';\nimport {opacityAnimation} from '@ui/animation/opacity-animation';\n\nexport function SettingsFormLoadingIndicator() {\n  return (\n    <m.div className=\"text-sm\" {...opacityAnimation}>\n      <div>\n        <Skeleton className=\"mb-4 max-w-140\" />\n        <Skeleton variant=\"rect\" size=\"h-42 w-full\" />\n        <div className=\"mt-10 flex items-center gap-8\">\n          <Skeleton variant=\"rect\" size=\"h-20 w-20\" />\n          <Skeleton className=\"max-w-64 text-xs\" />\n        </div>\n      </div>\n      <SettingsSeparator />\n      <div>\n        <Skeleton className=\"mb-4 max-w-140\" />\n        <Skeleton variant=\"rect\" size=\"h-42 w-full\" />\n        <Skeleton className=\"mt-10 max-w-4/5 text-xs\" />\n      </div>\n      <SettingsSeparator />\n      <div>\n        <Skeleton className=\"mb-4 max-w-140\" />\n        <Skeleton variant=\"rect\" size=\"h-42 w-full\" />\n        <Skeleton className=\"mt-10 max-w-[90%] text-xs\" />\n      </div>\n      <div>\n        <div className=\"mt-20 flex items-center gap-12\">\n          <Skeleton variant=\"rect\" size=\"h-20 w-40\" radius=\"rounded-full\" />\n          <Skeleton className=\"max-w-140\" />\n        </div>\n        <Skeleton className=\"mt-10 max-w-240 text-xs\" />\n      </div>\n      <SettingsSeparator />\n      <div>\n        <Skeleton variant=\"rect\" size=\"h-30 w-132\" radius=\"rounded-button\" />\n        <div className=\"mt-14\">\n          <Skeleton className=\"max-w-240\" />\n          <Skeleton className=\"max-w-384\" />\n        </div>\n      </div>\n      <div className=\"mt-40\">\n        <Skeleton variant=\"rect\" size=\"h-36 w-132\" radius=\"rounded-button\" />\n      </div>\n    </m.div>\n  );\n}\n","import {FieldErrors, UseFormReturn, useFormState} from 'react-hook-form';\nimport {Fragment, ReactNode} from 'react';\nimport {Form} from '@ui/forms/form';\nimport {Button} from '@ui/buttons/button';\nimport {Trans} from '@ui/i18n/trans';\nimport {useUpdateAdminSettings} from '@common/admin/settings/requests/use-update-admin-settings';\nimport {BlockerDialog} from '@ui/overlays/dialog/blocker-dialog';\nimport {ProgressCircle} from '@ui/progress/progress-circle';\nimport {AnimatePresence, m} from 'framer-motion';\nimport {opacityAnimation} from '@ui/animation/opacity-animation';\nimport {AdminSettings} from '@common/admin/settings/admin-settings';\nimport {useAdminSettings} from '@common/admin/settings/requests/use-admin-settings';\nimport {SettingsFormLoadingIndicator} from '@common/admin/settings/form/settings-form-loading-indicator';\n\ninterface Props {\n  form: UseFormReturn<any>;\n  children: ReactNode;\n}\nexport function AdminSettingsForm({children, form}: Props) {\n  const updateSettings = useUpdateAdminSettings(form);\n  const {isDirty} = useFormState({control: form.control});\n\n  return (\n    <m.section key=\"settings-form\" {...opacityAnimation}>\n      <Form\n        form={form}\n        onBeforeSubmit={() => {\n          // clear group errors, because hook form won't automatically\n          // clear errors that are not bound to a specific form field\n          const errors = form.formState.errors as FieldErrors<object>;\n          const keys = Object.keys(errors).filter(key => {\n            return key.endsWith('_group');\n          });\n          form.clearErrors(keys as any);\n        }}\n        onSubmit={values => {\n          updateSettings.mutate(values, {onSuccess: () => form.reset(values)});\n        }}\n      >\n        {children}\n        <div className=\"mt-40\">\n          <Button\n            type=\"submit\"\n            variant=\"flat\"\n            color=\"primary\"\n            startIcon={\n              updateSettings.isPending ? (\n                <ProgressCircle size=\"xs\" isIndeterminate />\n              ) : null\n            }\n            disabled={updateSettings.isPending || !isDirty}\n          >\n            <Trans message=\"Save changes\" />\n          </Button>\n        </div>\n      </Form>\n      <BlockerDialog isBlocked={isDirty} />\n    </m.section>\n  );\n}\n\ninterface AdminSettingsPageHeaderProps {\n  children: (data: AdminSettings) => ReactNode;\n  title: ReactNode;\n  description: ReactNode;\n  headerMargin?: string;\n  // this will be used if settings page needs to load some additional data before showing\n  isLoading?: boolean;\n}\nexport function AdminSettingsLayout({\n  title,\n  description,\n  headerMargin = 'mb-40',\n  children,\n  isLoading,\n}: AdminSettingsPageHeaderProps) {\n  const {data} = useAdminSettings();\n  return (\n    <Fragment>\n      <div className={headerMargin}>\n        <h2 className=\"mb-4 text-xl\">{title}</h2>\n        <div className=\"text-sm text-muted\">{description}</div>\n      </div>\n      <AnimatePresence initial={false} mode=\"wait\">\n        {data && !isLoading ? (\n          children(data)\n        ) : (\n          <SettingsFormLoadingIndicator key=\"settings-skeleton\" />\n        )}\n      </AnimatePresence>\n    </Fragment>\n  );\n}\n","import clsx from 'clsx';\nimport {LinkIcon} from '@ui/icons/material/Link';\nimport {ExternalLink} from '@ui/buttons/external-link';\nimport {Trans} from '@ui/i18n/trans';\nimport {useSettings} from '@ui/settings/use-settings';\n\ninterface LearnMoreLinkProps {\n  link: string;\n  className?: string;\n}\nexport function LearnMoreLink({link, className}: LearnMoreLinkProps) {\n  const {site} = useSettings();\n  if (site.hide_docs_button) {\n    return null;\n  }\n  return (\n    <div className={clsx('flex items-center gap-8', className)}>\n      <LinkIcon size=\"sm\" />\n      <ExternalLink href={link}>\n        <Trans message=\"Learn more\" />\n      </ExternalLink>\n    </div>\n  );\n}\n","import {useAdminSettings} from '../requests/use-admin-settings';\nimport {TextField} from '@ui/forms/input-field/text-field/text-field';\nimport {FormSelect, Option} from '@ui/forms/select/select';\nimport {FormSwitch} from '@ui/forms/toggle/switch';\nimport {Button} from '@ui/buttons/button';\nimport {ExternalLink} from '@ui/buttons/external-link';\nimport {Trans} from '@ui/i18n/trans';\nimport React, {Fragment, useContext} from 'react';\nimport {SiteConfigContext} from '@common/core/settings/site-config-context';\nimport {useSettings} from '@ui/settings/use-settings';\nimport {useValueLists} from '@common/http/value-lists';\nimport {useForm, useFormContext} from 'react-hook-form';\nimport {AdminSettingsWithFiles} from '@common/admin/settings/requests/use-update-admin-settings';\nimport {useGenerateSitemap} from '@common/admin/settings/requests/use-generate-sitemap';\nimport {useBootstrapDataStore} from '@ui/bootstrap-data/bootstrap-data-store';\nimport {AdminSettings} from '@common/admin/settings/admin-settings';\nimport {\n  AdminSettingsForm,\n  AdminSettingsLayout,\n} from '@common/admin/settings/form/admin-settings-form';\nimport {SettingsSeparator} from '@common/admin/settings/form/settings-separator';\nimport {LearnMoreLink} from '@common/admin/settings/form/learn-more-link';\n\nexport function GeneralSettings() {\n  return (\n    <AdminSettingsLayout\n      title={<Trans message=\"General\" />}\n      description={\n        <Trans message=\"Configure site url, homepage, theme and other general settings.\" />\n      }\n    >\n      {data => <Form data={data} />}\n    </AdminSettingsLayout>\n  );\n}\n\ninterface FormProps {\n  data: AdminSettings;\n}\nfunction Form({data}: FormProps) {\n  const form = useForm<AdminSettings>({\n    defaultValues: {\n      client: {\n        homepage: {\n          type: data.client.homepage?.type ?? 'landingPage',\n          value: data.client.homepage?.value ?? '',\n        },\n        themes: {\n          default_id: data.client.themes?.default_id\n            ? parseInt(data.client.themes.default_id as string)\n            : 0,\n          user_change: data.client.themes?.user_change ?? false,\n        },\n      },\n    },\n  });\n\n  return (\n    <AdminSettingsForm form={form}>\n      <SiteUrlSection />\n      <SettingsSeparator />\n      <HomepageSection />\n      <SettingsSeparator />\n      <ThemeSection />\n      <SettingsSeparator />\n      <SitemapSection />\n    </AdminSettingsForm>\n  );\n}\n\nfunction SiteUrlSection() {\n  const {data} = useAdminSettings();\n\n  if (!data) return null;\n\n  let append = null;\n  const server = data!.server;\n  const isInvalid = server.newAppUrl && server.newAppUrl !== server.app_url;\n  if (isInvalid) {\n    append = (\n      <div className=\"mt-20 text-sm text-danger\">\n        <Trans\n          values={{\n            baseUrl: server.app_url,\n            currentUrl: server.newAppUrl,\n            b: chunks => <b>{chunks}</b>,\n          }}\n          message=\"Base site url is set as <b>:baseUrl</b> in configuration, but current url is <b>:currentUrl</b>. It is recommended to set the primary url you want to use in configuration file and then redirect all other url versions to this primary version via cpanel or .htaccess file.\"\n        />\n      </div>\n    );\n  }\n\n  return (\n    <Fragment>\n      <TextField\n        readOnly\n        invalid={!!isInvalid}\n        value={server.app_url}\n        label={<Trans message=\"Primary site url\" />}\n        description={\n          <LearnMoreLink link=\"https://support.vebto.com/hc/articles/35/primary-site-url\" />\n        }\n      />\n      {append}\n    </Fragment>\n  );\n}\n\nfunction HomepageSection() {\n  const {watch} = useFormContext<AdminSettingsWithFiles>();\n  const {homepage} = useContext(SiteConfigContext);\n  const {data} = useValueLists(['menuItemCategories']);\n  const selectedType = watch('client.homepage.type');\n\n  return (\n    <div>\n      <FormSelect\n        name=\"client.homepage.type\"\n        selectionMode=\"single\"\n        label={<Trans message=\"Site home page\" />}\n        description={\n          <Trans message=\"Which page should be used as site homepage.\" />\n        }\n      >\n        {homepage.options.map(option => (\n          <Option key={option.value} value={option.value}>\n            <Trans {...option.label} />\n          </Option>\n        ))}\n        {data?.menuItemCategories?.map(category => (\n          <Option key={category.type} value={category.type}>\n            {category.name}\n          </Option>\n        ))}\n      </FormSelect>\n      {data?.menuItemCategories?.map(category => {\n        return selectedType === category.type ? (\n          <FormSelect\n            className=\"mt-24\"\n            name=\"client.homepage.value\"\n            key={category.name}\n            selectionMode=\"single\"\n            label={\n              <Trans message=\"Homepage :name\" values={{name: category.name}} />\n            }\n          >\n            {category.items.map(item => (\n              <Option key={item.label} value={`${item.model_id}`}>\n                {item.label}\n              </Option>\n            ))}\n          </FormSelect>\n        ) : null;\n      })}\n    </div>\n  );\n}\n\nfunction ThemeSection() {\n  const themes = useBootstrapDataStore(s => s.data.themes);\n  return (\n    <Fragment>\n      <FormSelect\n        className=\"mb-20\"\n        name=\"client.themes.default_id\"\n        selectionMode=\"single\"\n        label={<Trans message=\"Default site theme\" />}\n        description={\n          <Trans message=\"Which theme to use for users that have not chosen a theme manually.\" />\n        }\n      >\n        <Option value={0}>\n          <Trans message=\"System\" />\n        </Option>\n        {themes.map(theme => (\n          <Option key={theme.id} value={theme.id}>\n            {theme.name}\n          </Option>\n        ))}\n      </FormSelect>\n      <FormSwitch\n        name=\"client.themes.user_change\"\n        description={\n          <Trans message=\"Allow users to manually change site theme.\" />\n        }\n      >\n        <Trans message=\"Allow theme change\" />\n      </FormSwitch>\n    </Fragment>\n  );\n}\n\nfunction SitemapSection() {\n  const generateSitemap = useGenerateSitemap();\n  const {base_url} = useSettings();\n\n  const url = `${base_url}/storage/sitemaps/sitemap-index.xml`;\n  const link = <ExternalLink href={url}>{url}</ExternalLink>;\n\n  return (\n    <>\n      <Button\n        variant=\"outline\"\n        size=\"xs\"\n        color=\"primary\"\n        disabled={generateSitemap.isPending}\n        onClick={() => {\n          generateSitemap.mutate();\n        }}\n      >\n        <Trans message=\"Generate sitemap\" />\n      </Button>\n      <div className=\"mt-14 text-sm text-muted\">\n        <Trans\n          message=\"Once generated, sitemap url will be: :url\"\n          values={{\n            url: link,\n          }}\n        />\n      </div>\n    </>\n  );\n}\n","import {createSvgIcon} from '@ui/icons/create-svg-icon';\n\nexport const ColorIcon = createSvgIcon(\n  <path\n    stroke=\"#E0E0E0\"\n    d=\"M24,44c-7.168,0-13-5.816-13-12.971C11,24,24,4,24,4s13,20,13,27.029C37,38.184,31.168,44,24,44z\"\n  />,\n);\n","import {parseColor} from '@react-stately/color';\n\nexport function colorToThemeValue(color: string): string {\n  return parseColor(color)\n    .toString('rgb')\n    .replace('rgb(', '')\n    .replace(')', '')\n    .replace(/, ?/g, ' ');\n}\n","import {createSvgIcon} from '../create-svg-icon';\n\nexport const TuneIcon = createSvgIcon(\n  <path d=\"M3 17v2h6v-2H3zM3 5v2h10V5H3zm10 16v-2h8v-2h-8v-2h-2v6h2zM7 9v2H3v2h4v2h2V9H7zm14 4v-2H11v2h10zm-6-4h2V7h4V5h-4V3h-2v6z\" />\n, 'TuneOutlined');\n","import {useForm, useFormContext} from 'react-hook-form';\nimport {useEffect} from 'react';\nimport {TuneIcon} from '@ui/icons/material/Tune';\nimport {Button} from '@ui/buttons/button';\nimport {CssTheme} from '@ui/themes/css-theme';\nimport {FormTextField} from '@ui/forms/input-field/text-field/text-field';\nimport {FormSwitch} from '@ui/forms/toggle/switch';\nimport {AppearanceEditorValues} from '../../appearance-store';\nimport {DialogTrigger} from '@ui/overlays/dialog/dialog-trigger';\nimport {DialogFooter} from '@ui/overlays/dialog/dialog-footer';\nimport {useDialogContext} from '@ui/overlays/dialog/dialog-context';\nimport {Dialog} from '@ui/overlays/dialog/dialog';\nimport {DialogHeader} from '@ui/overlays/dialog/dialog-header';\nimport {DialogBody} from '@ui/overlays/dialog/dialog-body';\nimport {Trans} from '@ui/i18n/trans';\nimport {Form} from '@ui/forms/form';\nimport {useParams} from 'react-router';\n\nexport function ThemeSettingsDialogTrigger() {\n  const {getValues, setValue} = useFormContext<AppearanceEditorValues>();\n  const {themeIndex} = useParams();\n  const theme = getValues(`appearance.themes.${+themeIndex!}`);\n\n  return (\n    <DialogTrigger\n      type=\"modal\"\n      onClose={(value?: CssTheme) => {\n        if (!value) return;\n\n        getValues('appearance.themes').forEach((currentTheme, index) => {\n          // update changed theme\n          if (currentTheme.id === value.id) {\n            setValue(`appearance.themes.${index}`, value, {\n              shouldDirty: true,\n            });\n            return;\n          }\n\n          // unset \"default_light\" and \"default_dark\" on other themes\n          if (value.default_light) {\n            setValue(\n              `appearance.themes.${index}`,\n              {...currentTheme, default_light: false},\n              {shouldDirty: true},\n            );\n            return;\n          }\n          if (value.default_dark) {\n            setValue(\n              `appearance.themes.${index}`,\n              {...currentTheme, default_dark: false},\n              {shouldDirty: true},\n            );\n            return;\n          }\n        });\n      }}\n    >\n      <Button\n        size=\"xs\"\n        variant=\"outline\"\n        color=\"primary\"\n        startIcon={<TuneIcon />}\n      >\n        <Trans message=\"Settings\" />\n      </Button>\n      <SettingsDialog theme={theme} />\n    </DialogTrigger>\n  );\n}\n\ninterface SettingsDialogProps {\n  theme: CssTheme;\n}\nfunction SettingsDialog({theme}: SettingsDialogProps) {\n  const form = useForm<CssTheme>({defaultValues: theme});\n  const {close, formId} = useDialogContext();\n\n  useEffect(() => {\n    const subscription = form.watch((value, {name}) => {\n      // theme can only be set as either light or dark default\n      if (name === 'default_light' && value.default_light) {\n        form.setValue('default_dark', false);\n      }\n      if (name === 'default_dark' && value.default_dark) {\n        form.setValue('default_light', false);\n      }\n    });\n    return () => subscription.unsubscribe();\n  }, [form]);\n\n  return (\n    <Dialog>\n      <DialogHeader>\n        <Trans message=\"Update settings\" />\n      </DialogHeader>\n      <DialogBody>\n        <Form\n          form={form}\n          id={formId}\n          onSubmit={values => {\n            close(values);\n          }}\n        >\n          <FormTextField\n            name=\"name\"\n            label={<Trans message=\"Name\" />}\n            className=\"mb-30\"\n            autoFocus\n          />\n          <FormSwitch\n            name=\"is_dark\"\n            className=\"mb-20 border-b pb-20\"\n            description={\n              <Trans message=\"Whether this theme has light text on dark background.\" />\n            }\n          >\n            <Trans message=\"Dark theme\" />\n          </FormSwitch>\n          <FormSwitch\n            name=\"default_light\"\n            className=\"mb-30\"\n            description={\n              <Trans message=\"When light mode is selected, this theme will be used.\" />\n            }\n          >\n            <Trans message=\"Default for light mode\" />\n          </FormSwitch>\n          <FormSwitch\n            name=\"default_dark\"\n            description={\n              <Trans message=\"When dark mode is selected, this theme will be used.\" />\n            }\n          >\n            <Trans message=\"Default for dark mode\" />\n          </FormSwitch>\n        </Form>\n      </DialogBody>\n      <DialogFooter>\n        <Button\n          onClick={() => {\n            close();\n          }}\n        >\n          <Trans message=\"Cancel\" />\n        </Button>\n        <Button\n          variant=\"flat\"\n          color=\"primary\"\n          type=\"submit\"\n          form={formId}\n          disabled={!form.formState.isDirty}\n        >\n          <Trans message=\"Save\" />\n        </Button>\n      </DialogFooter>\n    </Dialog>\n  );\n}\n","import {createSvgIcon} from '../create-svg-icon';\n\nexport const RestartAltIcon = createSvgIcon(\n  <path d=\"M6 13c0-1.65.67-3.15 1.76-4.24L6.34 7.34C4.9 8.79 4 10.79 4 13c0 4.08 3.05 7.44 7 7.93v-2.02c-2.83-.48-5-2.94-5-5.91zm14 0c0-4.42-3.58-8-8-8-.06 0-.12.01-.18.01l1.09-1.09L11.5 2.5 8 6l3.5 3.5 1.41-1.41-1.08-1.08c.06 0 .12-.01.17-.01 3.31 0 6 2.69 6 6 0 2.97-2.17 5.43-5 5.91v2.02c3.95-.49 7-3.85 7-7.93z\" />\n, 'RestartAltOutlined');\n","import {Fragment, useState} from 'react';\nimport {DeleteIcon} from '@ui/icons/material/Delete';\nimport {ConfirmationDialog} from '@ui/overlays/dialog/confirmation-dialog';\nimport {IconButton} from '@ui/buttons/icon-button';\nimport {MoreVertIcon} from '@ui/icons/material/MoreVert';\nimport {RestartAltIcon} from '@ui/icons/material/RestartAlt';\nimport {AppearanceEditorValues, appearanceState} from '../../appearance-store';\nimport {toast} from '@ui/toast/toast';\nimport {Menu, MenuItem, MenuTrigger} from '@ui/menu/menu-trigger';\nimport {DialogTrigger} from '@ui/overlays/dialog/dialog-trigger';\nimport {message} from '@ui/i18n/message';\nimport {Trans} from '@ui/i18n/trans';\nimport {useNavigate} from '@common/ui/navigation/use-navigate';\nimport {useFormContext} from 'react-hook-form';\nimport {useParams} from 'react-router';\n\nexport function ThemeMoreOptionsButton() {\n  const navigate = useNavigate();\n  const {themeIndex} = useParams();\n  const [confirmDialogOpen, setConfirmDialogOpen] = useState(false);\n  const {setValue, getValues} = useFormContext<AppearanceEditorValues>();\n\n  const deleteTheme = () => {\n    if (getValues('appearance.themes').length <= 1) {\n      toast.danger(message('At least one theme is required'));\n      return;\n    }\n    if (themeIndex) {\n      navigate('..', {relative: 'path', replace: true});\n      setValue(\n        'appearance.themes',\n        getValues('appearance.themes').filter((_, i) => i !== +themeIndex),\n        {shouldDirty: true},\n      );\n    }\n  };\n\n  return (\n    <Fragment>\n      <MenuTrigger\n        onItemSelected={key => {\n          if (key === 'delete') {\n            setConfirmDialogOpen(true);\n          } else if (key === 'reset') {\n            const path =\n              `appearance.themes.${+themeIndex!}` as 'appearance.themes.0';\n            const defaultColors = getValues(`${path}.is_dark`)\n              ? appearanceState().defaults!.appearance.themes.dark\n              : appearanceState().defaults!.appearance.themes.light;\n\n            Object.entries(defaultColors).forEach(([colorName, themeValue]) => {\n              appearanceState().preview.setThemeValue(colorName, themeValue);\n            });\n            appearanceState().preview.setThemeFont(null);\n\n            setValue(`${path}.values`, defaultColors, {\n              shouldDirty: true,\n            });\n            setValue(`${path}.font`, undefined, {\n              shouldDirty: true,\n            });\n          }\n        }}\n      >\n        <IconButton size=\"md\" className=\"text-muted\">\n          <MoreVertIcon />\n        </IconButton>\n        <Menu>\n          <MenuItem value=\"reset\" startIcon={<RestartAltIcon />}>\n            <Trans message=\"Reset colors\" />\n          </MenuItem>\n          <MenuItem value=\"delete\" startIcon={<DeleteIcon />}>\n            <Trans message=\"Delete\" />\n          </MenuItem>\n        </Menu>\n      </MenuTrigger>\n      <DialogTrigger\n        type=\"modal\"\n        isOpen={confirmDialogOpen}\n        onClose={isConfirmed => {\n          if (isConfirmed) {\n            deleteTheme();\n          }\n          setConfirmDialogOpen(false);\n        }}\n      >\n        <ConfirmationDialog\n          isDanger\n          title={<Trans message=\"Delete theme\" />}\n          body={<Trans message=\"Are you sure you want to delete this theme?\" />}\n          confirm={<Trans message=\"Delete\" />}\n        />\n      </DialogTrigger>\n    </Fragment>\n  );\n}\n","import e,{useRef as r,useMemo as t,useEffect as n,useState as o,useCallback as a,useLayoutEffect as l}from\"react\";function u(){return(u=Object.assign||function(e){for(var r=1;r<arguments.length;r++){var t=arguments[r];for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n])}return e}).apply(this,arguments)}function c(e,r){if(null==e)return{};var t,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r.indexOf(t=a[n])>=0||(o[t]=e[t]);return o}function i(e){var t=r(e),n=r(function(e){t.current&&t.current(e)});return t.current=e,n.current}var s=function(e,r,t){return void 0===r&&(r=0),void 0===t&&(t=1),e>t?t:e<r?r:e},f=function(e){return\"touches\"in e},v=function(e){return e&&e.ownerDocument.defaultView||self},d=function(e,r,t){var n=e.getBoundingClientRect(),o=f(r)?function(e,r){for(var t=0;t<e.length;t++)if(e[t].identifier===r)return e[t];return e[0]}(r.touches,t):r;return{left:s((o.pageX-(n.left+v(e).pageXOffset))/n.width),top:s((o.pageY-(n.top+v(e).pageYOffset))/n.height)}},h=function(e){!f(e)&&e.preventDefault()},m=e.memo(function(o){var a=o.onMove,l=o.onKey,s=c(o,[\"onMove\",\"onKey\"]),m=r(null),g=i(a),p=i(l),b=r(null),_=r(!1),x=t(function(){var e=function(e){h(e),(f(e)?e.touches.length>0:e.buttons>0)&&m.current?g(d(m.current,e,b.current)):t(!1)},r=function(){return t(!1)};function t(t){var n=_.current,o=v(m.current),a=t?o.addEventListener:o.removeEventListener;a(n?\"touchmove\":\"mousemove\",e),a(n?\"touchend\":\"mouseup\",r)}return[function(e){var r=e.nativeEvent,n=m.current;if(n&&(h(r),!function(e,r){return r&&!f(e)}(r,_.current)&&n)){if(f(r)){_.current=!0;var o=r.changedTouches||[];o.length&&(b.current=o[0].identifier)}n.focus(),g(d(n,r,b.current)),t(!0)}},function(e){var r=e.which||e.keyCode;r<37||r>40||(e.preventDefault(),p({left:39===r?.05:37===r?-.05:0,top:40===r?.05:38===r?-.05:0}))},t]},[p,g]),C=x[0],E=x[1],H=x[2];return n(function(){return H},[H]),e.createElement(\"div\",u({},s,{onTouchStart:C,onMouseDown:C,className:\"react-colorful__interactive\",ref:m,onKeyDown:E,tabIndex:0,role:\"slider\"}))}),g=function(e){return e.filter(Boolean).join(\" \")},p=function(r){var t=r.color,n=r.left,o=r.top,a=void 0===o?.5:o,l=g([\"react-colorful__pointer\",r.className]);return e.createElement(\"div\",{className:l,style:{top:100*a+\"%\",left:100*n+\"%\"}},e.createElement(\"div\",{className:\"react-colorful__pointer-fill\",style:{backgroundColor:t}}))},b=function(e,r,t){return void 0===r&&(r=0),void 0===t&&(t=Math.pow(10,r)),Math.round(t*e)/t},_={grad:.9,turn:360,rad:360/(2*Math.PI)},x=function(e){return L(C(e))},C=function(e){return\"#\"===e[0]&&(e=e.substring(1)),e.length<6?{r:parseInt(e[0]+e[0],16),g:parseInt(e[1]+e[1],16),b:parseInt(e[2]+e[2],16),a:4===e.length?b(parseInt(e[3]+e[3],16)/255,2):1}:{r:parseInt(e.substring(0,2),16),g:parseInt(e.substring(2,4),16),b:parseInt(e.substring(4,6),16),a:8===e.length?b(parseInt(e.substring(6,8),16)/255,2):1}},E=function(e,r){return void 0===r&&(r=\"deg\"),Number(e)*(_[r]||1)},H=function(e){var r=/hsla?\\(?\\s*(-?\\d*\\.?\\d+)(deg|rad|grad|turn)?[,\\s]+(-?\\d*\\.?\\d+)%?[,\\s]+(-?\\d*\\.?\\d+)%?,?\\s*[/\\s]*(-?\\d*\\.?\\d+)?(%)?\\s*\\)?/i.exec(e);return r?N({h:E(r[1],r[2]),s:Number(r[3]),l:Number(r[4]),a:void 0===r[5]?1:Number(r[5])/(r[6]?100:1)}):{h:0,s:0,v:0,a:1}},M=H,N=function(e){var r=e.s,t=e.l;return{h:e.h,s:(r*=(t<50?t:100-t)/100)>0?2*r/(t+r)*100:0,v:t+r,a:e.a}},w=function(e){return K(I(e))},y=function(e){var r=e.s,t=e.v,n=e.a,o=(200-r)*t/100;return{h:b(e.h),s:b(o>0&&o<200?r*t/100/(o<=100?o:200-o)*100:0),l:b(o/2),a:b(n,2)}},q=function(e){var r=y(e);return\"hsl(\"+r.h+\", \"+r.s+\"%, \"+r.l+\"%)\"},k=function(e){var r=y(e);return\"hsla(\"+r.h+\", \"+r.s+\"%, \"+r.l+\"%, \"+r.a+\")\"},I=function(e){var r=e.h,t=e.s,n=e.v,o=e.a;r=r/360*6,t/=100,n/=100;var a=Math.floor(r),l=n*(1-t),u=n*(1-(r-a)*t),c=n*(1-(1-r+a)*t),i=a%6;return{r:b(255*[n,u,l,l,c,n][i]),g:b(255*[c,n,n,u,l,l][i]),b:b(255*[l,l,c,n,n,u][i]),a:b(o,2)}},O=function(e){var r=/hsva?\\(?\\s*(-?\\d*\\.?\\d+)(deg|rad|grad|turn)?[,\\s]+(-?\\d*\\.?\\d+)%?[,\\s]+(-?\\d*\\.?\\d+)%?,?\\s*[/\\s]*(-?\\d*\\.?\\d+)?(%)?\\s*\\)?/i.exec(e);return r?A({h:E(r[1],r[2]),s:Number(r[3]),v:Number(r[4]),a:void 0===r[5]?1:Number(r[5])/(r[6]?100:1)}):{h:0,s:0,v:0,a:1}},j=O,z=function(e){var r=/rgba?\\(?\\s*(-?\\d*\\.?\\d+)(%)?[,\\s]+(-?\\d*\\.?\\d+)(%)?[,\\s]+(-?\\d*\\.?\\d+)(%)?,?\\s*[/\\s]*(-?\\d*\\.?\\d+)?(%)?\\s*\\)?/i.exec(e);return r?L({r:Number(r[1])/(r[2]?100/255:1),g:Number(r[3])/(r[4]?100/255:1),b:Number(r[5])/(r[6]?100/255:1),a:void 0===r[7]?1:Number(r[7])/(r[8]?100:1)}):{h:0,s:0,v:0,a:1}},B=z,D=function(e){var r=e.toString(16);return r.length<2?\"0\"+r:r},K=function(e){var r=e.r,t=e.g,n=e.b,o=e.a,a=o<1?D(b(255*o)):\"\";return\"#\"+D(r)+D(t)+D(n)+a},L=function(e){var r=e.r,t=e.g,n=e.b,o=e.a,a=Math.max(r,t,n),l=a-Math.min(r,t,n),u=l?a===r?(t-n)/l:a===t?2+(n-r)/l:4+(r-t)/l:0;return{h:b(60*(u<0?u+6:u)),s:b(a?l/a*100:0),v:b(a/255*100),a:o}},A=function(e){return{h:b(e.h),s:b(e.s),v:b(e.v),a:b(e.a,2)}},S=e.memo(function(r){var t=r.hue,n=r.onChange,o=g([\"react-colorful__hue\",r.className]);return e.createElement(\"div\",{className:o},e.createElement(m,{onMove:function(e){n({h:360*e.left})},onKey:function(e){n({h:s(t+360*e.left,0,360)})},\"aria-label\":\"Hue\",\"aria-valuenow\":b(t),\"aria-valuemax\":\"360\",\"aria-valuemin\":\"0\"},e.createElement(p,{className:\"react-colorful__hue-pointer\",left:t/360,color:q({h:t,s:100,v:100,a:1})})))}),T=e.memo(function(r){var t=r.hsva,n=r.onChange,o={backgroundColor:q({h:t.h,s:100,v:100,a:1})};return e.createElement(\"div\",{className:\"react-colorful__saturation\",style:o},e.createElement(m,{onMove:function(e){n({s:100*e.left,v:100-100*e.top})},onKey:function(e){n({s:s(t.s+100*e.left,0,100),v:s(t.v-100*e.top,0,100)})},\"aria-label\":\"Color\",\"aria-valuetext\":\"Saturation \"+b(t.s)+\"%, Brightness \"+b(t.v)+\"%\"},e.createElement(p,{className:\"react-colorful__saturation-pointer\",top:1-t.v/100,left:t.s/100,color:q(t)})))}),F=function(e,r){if(e===r)return!0;for(var t in e)if(e[t]!==r[t])return!1;return!0},P=function(e,r){return e.replace(/\\s/g,\"\")===r.replace(/\\s/g,\"\")},X=function(e,r){return e.toLowerCase()===r.toLowerCase()||F(C(e),C(r))};function Y(e,t,l){var u=i(l),c=o(function(){return e.toHsva(t)}),s=c[0],f=c[1],v=r({color:t,hsva:s});n(function(){if(!e.equal(t,v.current.color)){var r=e.toHsva(t);v.current={hsva:r,color:t},f(r)}},[t,e]),n(function(){var r;F(s,v.current.hsva)||e.equal(r=e.fromHsva(s),v.current.color)||(v.current={hsva:s,color:r},u(r))},[s,e,u]);var d=a(function(e){f(function(r){return Object.assign({},r,e)})},[]);return[s,d]}var R,V=\"undefined\"!=typeof window?l:n,$=function(){return R||(\"undefined\"!=typeof __webpack_nonce__?__webpack_nonce__:void 0)},G=function(e){R=e},J=new Map,Q=function(e){V(function(){var r=e.current?e.current.ownerDocument:document;if(void 0!==r&&!J.has(r)){var t=r.createElement(\"style\");t.innerHTML='.react-colorful{position:relative;display:flex;flex-direction:column;width:200px;height:200px;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:default}.react-colorful__saturation{position:relative;flex-grow:1;border-color:transparent;border-bottom:12px solid #000;border-radius:8px 8px 0 0;background-image:linear-gradient(0deg,#000,transparent),linear-gradient(90deg,#fff,hsla(0,0%,100%,0))}.react-colorful__alpha-gradient,.react-colorful__pointer-fill{content:\"\";position:absolute;left:0;top:0;right:0;bottom:0;pointer-events:none;border-radius:inherit}.react-colorful__alpha-gradient,.react-colorful__saturation{box-shadow:inset 0 0 0 1px rgba(0,0,0,.05)}.react-colorful__alpha,.react-colorful__hue{position:relative;height:24px}.react-colorful__hue{background:linear-gradient(90deg,red 0,#ff0 17%,#0f0 33%,#0ff 50%,#00f 67%,#f0f 83%,red)}.react-colorful__last-control{border-radius:0 0 8px 8px}.react-colorful__interactive{position:absolute;left:0;top:0;right:0;bottom:0;border-radius:inherit;outline:none;touch-action:none}.react-colorful__pointer{position:absolute;z-index:1;box-sizing:border-box;width:28px;height:28px;transform:translate(-50%,-50%);background-color:#fff;border:2px solid #fff;border-radius:50%;box-shadow:0 2px 4px rgba(0,0,0,.2)}.react-colorful__interactive:focus .react-colorful__pointer{transform:translate(-50%,-50%) scale(1.1)}.react-colorful__alpha,.react-colorful__alpha-pointer{background-color:#fff;background-image:url(\\'data:image/svg+xml;charset=utf-8,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill-opacity=\".05\"><path d=\"M8 0h8v8H8zM0 8h8v8H0z\"/></svg>\\')}.react-colorful__saturation-pointer{z-index:3}.react-colorful__hue-pointer{z-index:2}',J.set(r,t);var n=$();n&&t.setAttribute(\"nonce\",n),r.head.appendChild(t)}},[])},U=function(t){var n=t.className,o=t.colorModel,a=t.color,l=void 0===a?o.defaultColor:a,i=t.onChange,s=c(t,[\"className\",\"colorModel\",\"color\",\"onChange\"]),f=r(null);Q(f);var v=Y(o,l,i),d=v[0],h=v[1],m=g([\"react-colorful\",n]);return e.createElement(\"div\",u({},s,{ref:f,className:m}),e.createElement(T,{hsva:d,onChange:h}),e.createElement(S,{hue:d.h,onChange:h,className:\"react-colorful__last-control\"}))},W={defaultColor:\"000\",toHsva:x,fromHsva:function(e){return w({h:e.h,s:e.s,v:e.v,a:1})},equal:X},Z=function(r){return e.createElement(U,u({},r,{colorModel:W}))},ee=function(r){var t=r.className,n=r.hsva,o=r.onChange,a={backgroundImage:\"linear-gradient(90deg, \"+k(Object.assign({},n,{a:0}))+\", \"+k(Object.assign({},n,{a:1}))+\")\"},l=g([\"react-colorful__alpha\",t]),u=b(100*n.a);return e.createElement(\"div\",{className:l},e.createElement(\"div\",{className:\"react-colorful__alpha-gradient\",style:a}),e.createElement(m,{onMove:function(e){o({a:e.left})},onKey:function(e){o({a:s(n.a+e.left)})},\"aria-label\":\"Alpha\",\"aria-valuetext\":u+\"%\",\"aria-valuenow\":u,\"aria-valuemin\":\"0\",\"aria-valuemax\":\"100\"},e.createElement(p,{className:\"react-colorful__alpha-pointer\",left:n.a,color:k(n)})))},re=function(t){var n=t.className,o=t.colorModel,a=t.color,l=void 0===a?o.defaultColor:a,i=t.onChange,s=c(t,[\"className\",\"colorModel\",\"color\",\"onChange\"]),f=r(null);Q(f);var v=Y(o,l,i),d=v[0],h=v[1],m=g([\"react-colorful\",n]);return e.createElement(\"div\",u({},s,{ref:f,className:m}),e.createElement(T,{hsva:d,onChange:h}),e.createElement(S,{hue:d.h,onChange:h}),e.createElement(ee,{hsva:d,onChange:h,className:\"react-colorful__last-control\"}))},te={defaultColor:\"0001\",toHsva:x,fromHsva:w,equal:X},ne=function(r){return e.createElement(re,u({},r,{colorModel:te}))},oe={defaultColor:{h:0,s:0,l:0,a:1},toHsva:N,fromHsva:y,equal:F},ae=function(r){return e.createElement(re,u({},r,{colorModel:oe}))},le={defaultColor:\"hsla(0, 0%, 0%, 1)\",toHsva:H,fromHsva:k,equal:P},ue=function(r){return e.createElement(re,u({},r,{colorModel:le}))},ce={defaultColor:{h:0,s:0,l:0},toHsva:function(e){return N({h:e.h,s:e.s,l:e.l,a:1})},fromHsva:function(e){return{h:(r=y(e)).h,s:r.s,l:r.l};var r},equal:F},ie=function(r){return e.createElement(U,u({},r,{colorModel:ce}))},se={defaultColor:\"hsl(0, 0%, 0%)\",toHsva:M,fromHsva:q,equal:P},fe=function(r){return e.createElement(U,u({},r,{colorModel:se}))},ve={defaultColor:{h:0,s:0,v:0,a:1},toHsva:function(e){return e},fromHsva:A,equal:F},de=function(r){return e.createElement(re,u({},r,{colorModel:ve}))},he={defaultColor:\"hsva(0, 0%, 0%, 1)\",toHsva:O,fromHsva:function(e){var r=A(e);return\"hsva(\"+r.h+\", \"+r.s+\"%, \"+r.v+\"%, \"+r.a+\")\"},equal:P},me=function(r){return e.createElement(re,u({},r,{colorModel:he}))},ge={defaultColor:{h:0,s:0,v:0},toHsva:function(e){return{h:e.h,s:e.s,v:e.v,a:1}},fromHsva:function(e){var r=A(e);return{h:r.h,s:r.s,v:r.v}},equal:F},pe=function(r){return e.createElement(U,u({},r,{colorModel:ge}))},be={defaultColor:\"hsv(0, 0%, 0%)\",toHsva:j,fromHsva:function(e){var r=A(e);return\"hsv(\"+r.h+\", \"+r.s+\"%, \"+r.v+\"%)\"},equal:P},_e=function(r){return e.createElement(U,u({},r,{colorModel:be}))},xe={defaultColor:{r:0,g:0,b:0,a:1},toHsva:L,fromHsva:I,equal:F},Ce=function(r){return e.createElement(re,u({},r,{colorModel:xe}))},Ee={defaultColor:\"rgba(0, 0, 0, 1)\",toHsva:z,fromHsva:function(e){var r=I(e);return\"rgba(\"+r.r+\", \"+r.g+\", \"+r.b+\", \"+r.a+\")\"},equal:P},He=function(r){return e.createElement(re,u({},r,{colorModel:Ee}))},Me={defaultColor:{r:0,g:0,b:0},toHsva:function(e){return L({r:e.r,g:e.g,b:e.b,a:1})},fromHsva:function(e){return{r:(r=I(e)).r,g:r.g,b:r.b};var r},equal:F},Ne=function(r){return e.createElement(U,u({},r,{colorModel:Me}))},we={defaultColor:\"rgb(0, 0, 0)\",toHsva:B,fromHsva:function(e){var r=I(e);return\"rgb(\"+r.r+\", \"+r.g+\", \"+r.b+\")\"},equal:P},ye=function(r){return e.createElement(U,u({},r,{colorModel:we}))},qe=/^#?([0-9A-F]{3,8})$/i,ke=function(r){var t=r.color,l=void 0===t?\"\":t,s=r.onChange,f=r.onBlur,v=r.escape,d=r.validate,h=r.format,m=r.process,g=c(r,[\"color\",\"onChange\",\"onBlur\",\"escape\",\"validate\",\"format\",\"process\"]),p=o(function(){return v(l)}),b=p[0],_=p[1],x=i(s),C=i(f),E=a(function(e){var r=v(e.target.value);_(r),d(r)&&x(m?m(r):r)},[v,m,d,x]),H=a(function(e){d(e.target.value)||_(v(l)),C(e)},[l,v,d,C]);return n(function(){_(v(l))},[l,v]),e.createElement(\"input\",u({},g,{value:h?h(b):b,spellCheck:\"false\",onChange:E,onBlur:H}))},Ie=function(e){return\"#\"+e},Oe=function(r){var t=r.prefixed,n=r.alpha,o=c(r,[\"prefixed\",\"alpha\"]),l=a(function(e){return e.replace(/([^0-9A-F]+)/gi,\"\").substring(0,n?8:6)},[n]),i=a(function(e){return function(e,r){var t=qe.exec(e),n=t?t[1].length:0;return 3===n||6===n||!!r&&4===n||!!r&&8===n}(e,n)},[n]);return e.createElement(ke,u({},o,{escape:l,format:t?Ie:void 0,process:Ie,validate:i}))};export{ne as HexAlphaColorPicker,Oe as HexColorInput,Z as HexColorPicker,ie as HslColorPicker,fe as HslStringColorPicker,ae as HslaColorPicker,ue as HslaStringColorPicker,pe as HsvColorPicker,_e as HsvStringColorPicker,de as HsvaColorPicker,me as HsvaStringColorPicker,Ne as RgbColorPicker,ye as RgbStringColorPicker,Ce as RgbaColorPicker,He as RgbaStringColorPicker,G as setNonce};\n//# sourceMappingURL=index.module.js.map\n","import {message} from '@ui/i18n/message';\nimport {MessageDescriptor} from '@ui/i18n/message-descriptor';\n\nexport const ColorPresets: {\n  color: string;\n  name: MessageDescriptor;\n  foreground?: string;\n}[] = [\n  {\n    color: 'rgb(255, 255, 255)',\n    name: message('White'),\n  },\n  {\n    color: 'rgb(239,245,245)',\n    name: message('Solitude'),\n  },\n  {\n    color: 'rgb(245,213,174)',\n    name: message('Wheat'),\n  },\n  {\n    color: 'rgb(253,227,167)',\n    name: message('Cape Honey'),\n  },\n  {\n    color: 'rgb(242,222,186)',\n    name: message('Milk punch'),\n  },\n  {\n    color: 'rgb(97,118,75)',\n    name: message('Dingy'),\n    foreground: 'rgb(255, 255, 255)',\n  },\n  {\n    color: 'rgb(4, 147, 114)',\n    name: message('Aquamarine'),\n    foreground: 'rgb(255, 255, 255)',\n  },\n  {\n    color: 'rgb(222,245,229)',\n    name: message('Cosmic Latte'),\n  },\n  {\n    color: 'rgb(233,119,119)',\n    name: message('Geraldine'),\n    foreground: 'rgb(90,14,14)',\n  },\n  {\n    color: 'rgb(247,164,164)',\n    name: message('Sundown'),\n  },\n  {\n    color: 'rgb(30,139,195)',\n    name: message('Pelorous'),\n    foreground: 'rgb(255, 255, 255)',\n  },\n  {\n    color: 'rgb(142,68,173)',\n    name: message('Deep Lilac'),\n    foreground: 'rgb(255, 255, 255)',\n  },\n  {\n    color: 'rgb(108,74,182)',\n    name: message('Blue marguerite'),\n    foreground: 'rgb(255, 255, 255)',\n  },\n  {\n    color: 'rgb(139,126,116)',\n    name: message('Americano'),\n    foreground: 'rgb(255, 255, 255)',\n  },\n  {\n    color: 'rgb(0,0,0)',\n    name: message('Black'),\n    foreground: 'rgb(255, 255, 255)',\n  },\n  {\n    color: 'rgb(64,66,88)',\n    name: message('Blue zodiac'),\n    foreground: 'rgb(255, 255, 255)',\n  },\n  {\n    color: 'rgb(101,100,124)',\n    name: message('Comet'),\n    foreground: 'rgb(255, 255, 255)',\n  },\n];\n","import React from 'react';\nimport clsx from 'clsx';\nimport {ButtonBase} from '@ui/buttons/button-base';\n\ntype Props = {\n  onChange?: (e: string) => void;\n  value?: string;\n  colors: string[];\n};\nexport function ColorSwatch({onChange, value, colors}: Props) {\n  const presetButtons = colors.map(color => {\n    const isSelected = value === color;\n    return (\n      <ButtonBase\n        key={color}\n        onClick={() => {\n          onChange?.(color);\n        }}\n        className={clsx(\n          'relative block flex-shrink-0 w-26 h-26 border rounded',\n          isSelected && 'shadow-md'\n        )}\n        style={{backgroundColor: color}}\n      >\n        {isSelected && (\n          <span className=\"absolute inset-0 m-auto rounded-full w-8 h-8 bg-white\" />\n        )}\n      </ButtonBase>\n    );\n  });\n\n  return <div className=\"flex flex-wrap gap-6\">{presetButtons}</div>;\n}\n","import {HexColorInput, HexColorPicker} from 'react-colorful';\nimport React, {useState} from 'react';\nimport {parseColor} from '@react-stately/color';\nimport {ColorPresets} from '@ui/color-picker/color-presets';\nimport {getInputFieldClassNames} from '@ui/forms/input-field/get-input-field-class-names';\nimport {ColorSwatch} from '@ui/color-picker/color-swatch';\n\nconst DefaultPresets = ColorPresets.map(({color}) => color).slice(0, 14);\n\ntype Props = {\n  defaultValue?: string;\n  onChange?: (e: string) => void;\n  colorPresets?: string[];\n  showInput?: boolean;\n};\nexport function ColorPicker({\n  defaultValue,\n  onChange,\n  colorPresets,\n  showInput,\n}: Props) {\n  const [color, setColor] = useState<string | undefined>(defaultValue);\n\n  const presets: string[] = colorPresets || DefaultPresets;\n\n  const style = getInputFieldClassNames({size: 'sm'});\n\n  return (\n    <div>\n      <HexColorPicker\n        className=\"!w-auto\"\n        color={color}\n        onChange={newColor => {\n          onChange?.(newColor);\n          setColor(newColor);\n        }}\n      />\n      <div className=\"px-12 py-20\">\n        {presets && (\n          <ColorSwatch\n            colors={presets}\n            onChange={newColor => {\n              if (newColor) {\n                const hex = parseColor(newColor).toString('hex');\n                onChange?.(hex);\n                setColor(hex);\n              }\n            }}\n            value={color}\n          />\n        )}\n        {showInput && (\n          <div className=\"pt-20\">\n            <HexColorInput\n              autoComplete=\"off\"\n              role=\"textbox\"\n              autoCorrect=\"off\"\n              spellCheck=\"false\"\n              required\n              aria-label=\"Hex color\"\n              prefixed\n              className={style.input}\n              color={color}\n              onChange={newColor => {\n                onChange?.(newColor);\n                setColor(newColor);\n              }}\n            />\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n","import {ColorPicker} from './color-picker';\nimport {DialogFooter} from '@ui/overlays/dialog/dialog-footer';\nimport {Button} from '@ui/buttons/button';\nimport {useDialogContext} from '@ui/overlays/dialog/dialog-context';\nimport {Dialog} from '@ui/overlays/dialog/dialog';\nimport {Trans} from '@ui/i18n/trans';\n\ninterface ColorPickerDialogProps {\n  hideFooter?: boolean;\n  showInput?: boolean;\n}\nexport function ColorPickerDialog({\n  hideFooter = false,\n  showInput = true,\n}: ColorPickerDialogProps) {\n  const {close, value, setValue, initialValue} = useDialogContext<\n    string | null\n  >();\n  // todo: remove this once pixie and bedrive are refactored to use dialogTrigger currentValue (use \"currentValue\" for defaultValue as well)\n  //const initialValue = useRef(defaultValue);\n\n  return (\n    <Dialog size=\"2xs\">\n      <ColorPicker\n        showInput={showInput}\n        defaultValue={initialValue ? initialValue : ''}\n        onChange={newValue => setValue(newValue)}\n      />\n      {!hideFooter && (\n        <DialogFooter dividerTop>\n          <Button variant=\"text\" size=\"xs\" onClick={() => close()}>\n            <Trans message=\"Cancel\" />\n          </Button>\n          <Button\n            variant=\"flat\"\n            color=\"primary\"\n            size=\"xs\"\n            onClick={() => close(value)}\n          >\n            <Trans message=\"Apply\" />\n          </Button>\n        </DialogFooter>\n      )}\n    </Dialog>\n  );\n}\n","import {message} from '@ui/i18n/message';\nimport {useParams} from 'react-router';\nimport {useFormContext} from 'react-hook-form';\nimport {AppearanceEditorValues} from '@common/admin/appearance/appearance-store';\nimport {Menu, MenuTrigger} from '@ui/menu/menu-trigger';\nimport {AppearanceButton} from '@common/admin/appearance/appearance-button';\nimport {ColorIcon} from '@common/admin/appearance/sections/themes/color-icon';\nimport clsx from 'clsx';\nimport {Trans} from '@ui/i18n/trans';\nimport {Item} from '@ui/forms/listbox/item';\n\nconst navbarColorMap = [\n  {\n    label: message('Accent'),\n    value: 'primary',\n    bgColor: 'bg-primary',\n    previewBgColor: 'text-primary',\n  },\n  {\n    label: message('Background'),\n    value: 'bg',\n    bgColor: 'bg-background',\n    previewBgColor: 'text-background',\n  },\n  {\n    label: message('Background alt'),\n    value: 'bg-alt',\n    bgColor: 'bg-alt',\n    previewBgColor: 'text-background-alt',\n  },\n  {\n    label: message('Transparent'),\n    value: 'transparent',\n    bgColor: 'bg-transparent',\n    previewBgColor: 'text-transparent',\n  },\n];\n\nexport function NavbarColorPicker() {\n  const {themeIndex} = useParams();\n  const {watch, setValue} = useFormContext<AppearanceEditorValues>();\n  const key =\n    `appearance.themes.${themeIndex!}.values.--be-navbar-color` as 'appearance.themes.1.values.--be-navbar-color';\n  const selectedValue = watch(key);\n  const previewColor = navbarColorMap.find(({value}) => value === selectedValue)\n    ?.previewBgColor;\n  return (\n    <MenuTrigger\n      placement=\"right\"\n      selectionMode=\"single\"\n      selectedValue={selectedValue}\n      onSelectionChange={value => {\n        setValue(key, value as string, {shouldDirty: true});\n      }}\n    >\n      <AppearanceButton\n        startIcon={\n          <ColorIcon\n            viewBox=\"0 0 48 48\"\n            className={clsx('icon-lg', previewColor)}\n          />\n        }\n      >\n        <Trans message=\"Navbar\" />\n      </AppearanceButton>\n      <Menu>\n        {navbarColorMap.map(({label, value, bgColor}) => (\n          <Item\n            key={value}\n            value={value}\n            startIcon={\n              <div className={clsx('h-20 w-20 rounded border', bgColor)} />\n            }\n          >\n            <Trans {...label} />\n          </Item>\n        ))}\n      </Menu>\n    </MenuTrigger>\n  );\n}\n","import {ReactNode} from 'react';\nimport clsx from 'clsx';\n\ninterface Props {\n  children: ReactNode;\n  marginTop?: string;\n}\nexport function AppearanceSectionTitle({children, marginTop = 'mt-22'}: Props) {\n  return (\n    <div className={clsx('mb-6 text-sm font-semibold', marginTop)}>\n      {children}\n    </div>\n  );\n}\n","import {Link, useNavigate, useParams} from 'react-router';\nimport {Fragment, ReactNode, useEffect, useState} from 'react';\nimport {\n  AppearanceEditorValues,\n  appearanceState,\n  previewAppIsLoaded,\n} from '@common/admin/appearance/appearance-store';\nimport {AppearanceButton} from '@common/admin/appearance/appearance-button';\nimport {ColorIcon} from '@common/admin/appearance/sections/themes/color-icon';\nimport {CssTheme} from '@ui/themes/css-theme';\nimport {colorToThemeValue} from '@ui/themes/utils/color-to-theme-value';\nimport {ThemeSettingsDialogTrigger} from '@common/admin/appearance/sections/themes/theme-settings-dialog-trigger';\nimport {ThemeMoreOptionsButton} from '@common/admin/appearance/sections/themes/theme-more-options-button';\nimport {ColorPickerDialog} from '@ui/color-picker/color-picker-dialog';\nimport {DialogTrigger} from '@ui/overlays/dialog/dialog-trigger';\nimport {useFormContext} from 'react-hook-form';\nimport {Trans} from '@ui/i18n/trans';\nimport {NavbarColorPicker} from '@common/admin/appearance/sections/themes/navbar-color-picker';\nimport {message} from '@ui/i18n/message';\nimport {themeValueToHex} from '@ui/themes/utils/theme-value-to-hex';\nimport {AppearanceSectionTitle} from '@common/admin/appearance/appearance-section-title';\n\nconst colorList = [\n  {\n    label: message('Background'),\n    key: '--be-background',\n  },\n  {\n    label: message('Background alt'),\n    key: '--be-background-alt',\n  },\n  {\n    label: message('Foreground'),\n    key: '--be-foreground-base',\n  },\n  {\n    label: message('Accent light'),\n    key: '--be-primary-light',\n  },\n  {\n    label: message('Accent'),\n    key: '--be-primary',\n  },\n  {\n    label: message('Accent dark'),\n    key: '--be-primary-dark',\n  },\n  {\n    label: message('Text on accent'),\n    key: '--be-on-primary',\n  },\n  {\n    label: message('Chip'),\n    key: '--be-background-chip',\n  },\n];\n\nexport function ThemeEditor() {\n  const navigate = useNavigate();\n  const {themeIndex} = useParams();\n  const {getValues, watch} = useFormContext<AppearanceEditorValues>();\n\n  const theme = getValues(`appearance.themes.${+themeIndex!}`);\n  const selectedFont = watch(`appearance.themes.${+themeIndex!}.font.family`);\n\n  // go to theme list, if theme can't be found\n  useEffect(() => {\n    if (!theme) {\n      navigate('..', {relative: 'path', replace: true});\n    }\n  }, [navigate, theme]);\n\n  // set this theme as active in preview iframe\n  useEffect(() => {\n    let isAborted = false;\n    if (theme?.id) {\n      previewAppIsLoaded.then(() => {\n        if (isAborted) return;\n        appearanceState().preview.setActiveTheme(theme.id);\n      });\n    }\n    return () => {\n      isAborted = true;\n      appearanceState().preview.setActiveTheme(null);\n    };\n  }, [theme?.id]);\n\n  if (!theme) return null;\n\n  return (\n    <Fragment>\n      <div className=\"mb-20 flex items-center justify-between gap-10\">\n        <ThemeSettingsDialogTrigger />\n        <ThemeMoreOptionsButton />\n      </div>\n      <div>\n        <AppearanceButton\n          elementType={Link}\n          to=\"font\"\n          description={selectedFont ? selectedFont : <Trans message=\"System\" />}\n        >\n          <Trans message=\"Font\" />\n        </AppearanceButton>\n        <AppearanceButton elementType={Link} to=\"radius\">\n          <Trans message=\"Rounding\" />\n        </AppearanceButton>\n        <AppearanceSectionTitle>\n          <Trans message=\"Colors\" />\n        </AppearanceSectionTitle>\n        <NavbarColorPicker />\n        {colorList.map(color => (\n          <ColorPickerTrigger\n            key={color.key}\n            colorName={color.key}\n            label={<Trans {...color.label} />}\n            initialThemeValue={theme.values[color.key]}\n            theme={theme}\n          />\n        ))}\n      </div>\n    </Fragment>\n  );\n}\n\ninterface ColorPickerTriggerProps {\n  label: ReactNode;\n  theme: CssTheme;\n  colorName: string;\n  initialThemeValue: string;\n}\nfunction ColorPickerTrigger({\n  label,\n  theme,\n  colorName,\n  initialThemeValue,\n}: ColorPickerTriggerProps) {\n  const {setValue} = useFormContext<AppearanceEditorValues>();\n  const {themeIndex} = useParams();\n  const [selectedThemeValue, setSelectedThemeValue] =\n    useState<string>(initialThemeValue);\n\n  // set color as css variable in preview and on button preview, but not in appearance values\n  // this way color change can be canceled when color picker is closed and applied explicitly via apply button\n  const selectThemeValue = (themeValue: string) => {\n    setSelectedThemeValue(themeValue);\n    appearanceState().preview.setThemeValue(colorName, themeValue);\n  };\n\n  useEffect(() => {\n    // need to update the color here so changes via \"reset colors\" button are reflected\n    setSelectedThemeValue(initialThemeValue);\n  }, [initialThemeValue]);\n\n  return (\n    <DialogTrigger\n      value={themeValueToHex(selectedThemeValue)}\n      type=\"popover\"\n      placement=\"right\"\n      offset={10}\n      onValueChange={newColor => {\n        selectThemeValue(colorToThemeValue(newColor));\n      }}\n      onClose={(newColor, {valueChanged, initialValue}) => {\n        if (newColor && valueChanged) {\n          setValue(\n            `appearance.themes.${+themeIndex!}.values.${colorName}`,\n            colorToThemeValue(newColor),\n            {shouldDirty: true},\n          );\n        } else {\n          // reset to initial value, if apply button was not clicked\n          selectThemeValue(initialValue);\n        }\n      }}\n    >\n      <AppearanceButton\n        className=\"capitalize\"\n        startIcon={\n          <ColorIcon\n            viewBox=\"0 0 48 48\"\n            className=\"icon-lg\"\n            style={{fill: `rgb(${selectedThemeValue})`}}\n          />\n        }\n      >\n        {label}\n      </AppearanceButton>\n      <ColorPickerDialog />\n    </DialogTrigger>\n  );\n}\n","import React, {RefObject} from 'react';\n\nexport interface TabsContext {\n  selectedTab: number;\n  setSelectedTab: (newTab: number) => void;\n  tabsRef: RefObject<HTMLElement[]>;\n  size: 'sm' | 'md';\n  isLazy?: boolean;\n  id: string;\n}\n\nexport const TabContext = React.createContext<TabsContext>(null!);\n","import React, {ReactElement, useId, useMemo, useRef} from 'react';\nimport clsx from 'clsx';\nimport {useControlledState} from '@react-stately/utils';\nimport {TabListProps} from '@ui/tabs/tab-list';\nimport {TabPanelsProps} from '@ui/tabs/tab-panels';\nimport {TabContext, TabsContext} from '@ui/tabs/tabs-context';\n\nexport interface TabsProps {\n  children:\n    | [ReactElement<TabListProps>, ReactElement<TabPanelsProps>]\n    | ReactElement<TabListProps>;\n  size?: 'sm' | 'md';\n  className?: string;\n  selectedTab?: number;\n  defaultSelectedTab?: number;\n  onTabChange?: (newTab: number) => void;\n  isLazy?: boolean;\n  overflow?: string;\n}\n\nexport function Tabs(props: TabsProps) {\n  const {\n    size = 'md',\n    children,\n    className,\n    isLazy,\n    overflow = 'overflow-hidden',\n  } = props;\n\n  const tabsRef = useRef<HTMLButtonElement[]>([]);\n  const id = useId();\n\n  const [selectedTab, setSelectedTab] = useControlledState(\n    props.selectedTab,\n    props.defaultSelectedTab || 0,\n    props.onTabChange,\n  );\n\n  const ContextValue: TabsContext = useMemo(() => {\n    return {\n      selectedTab,\n      setSelectedTab,\n      tabsRef,\n      size,\n      isLazy,\n      id,\n    };\n  }, [selectedTab, id, isLazy, setSelectedTab, size]);\n\n  return (\n    <TabContext.Provider value={ContextValue}>\n      <div className={clsx(className, overflow, 'max-w-full')}>{children}</div>\n    </TabContext.Provider>\n  );\n}\n","import React, {useContext, useState} from 'react';\nimport {useLayoutEffect} from '@react-aria/utils';\nimport clsx from 'clsx';\nimport {TabContext} from '@ui/tabs/tabs-context';\n\ninterface TabLineStyle {\n  width?: string;\n  transform?: string;\n  className?: string;\n}\n\nexport function TabLine() {\n  const {tabsRef, selectedTab} = useContext(TabContext);\n  const [style, setStyle] = useState<TabLineStyle>({\n    width: undefined,\n    transform: undefined,\n    className: undefined,\n  });\n\n  useLayoutEffect(() => {\n    if (selectedTab != null && tabsRef.current) {\n      const el = tabsRef.current[selectedTab];\n      if (!el) return;\n\n      setStyle(prevState => {\n        return {\n          width: `${el.offsetWidth}px`,\n          transform: `translateX(${el.offsetLeft}px)`,\n          // disable initial transition for tabline\n          className: prevState.width === undefined ? '' : 'transition-all',\n        };\n      });\n    }\n  }, [setStyle, selectedTab, tabsRef]);\n\n  return (\n    <div\n      className={clsx(\n        'absolute bottom-0 left-0 h-2 bg-primary',\n        style.className\n      )}\n      role=\"presentation\"\n      style={{width: style.width, transform: style.transform}}\n    />\n  );\n}\n","import React, {Children, cloneElement, isValidElement, ReactNode} from 'react';\nimport clsx from 'clsx';\nimport {FocusScope} from '@react-aria/focus';\nimport {TabProps} from '@ui/tabs/tab';\nimport {TabLine} from '@ui/tabs/tab-line';\n\nexport interface TabListProps {\n  children: ReactNode;\n  // center tabs within tablist\n  center?: boolean;\n  // expand tabs to fill in tablist space fully. By default, tabs are only as wide as their content.\n  expand?: boolean;\n  className?: string;\n  border?: string;\n}\nexport function TabList({\n  children,\n  center,\n  expand,\n  className,\n  border = 'border-b',\n}: TabListProps) {\n  const childrenArray = Children.toArray(children);\n\n  return (\n    <FocusScope>\n      <div\n        className={clsx(\n          // hide scrollbar completely on mobile, show compact one on desktop\n          'max-sm:hidden-scrollbar md:compact-scrollbar relative flex max-w-full overflow-auto',\n          border,\n          className,\n        )}\n        role=\"tablist\"\n        aria-orientation=\"horizontal\"\n      >\n        {childrenArray.map((child, index) => {\n          if (isValidElement<TabProps>(child)) {\n            return cloneElement<TabProps>(child, {\n              index,\n              className: clsx(\n                child.props.className,\n                expand && 'flex-auto',\n                center && index === 0 && 'ml-auto',\n                center && index === childrenArray.length - 1 && 'mr-auto',\n              ),\n            });\n          }\n          return null;\n        })}\n        <TabLine />\n      </div>\n    </FocusScope>\n  );\n}\n","import React, {JSXElementConstructor, ReactNode, useContext} from 'react';\nimport clsx from 'clsx';\nimport {useFocusManager} from '@react-aria/focus';\nimport {LinkProps} from 'react-router';\nimport {TabContext} from '@ui/tabs/tabs-context';\n\nexport interface TabProps {\n  className?: string;\n  index?: number;\n  children: ReactNode;\n  isDisabled?: boolean;\n  padding?: string;\n  elementType?: 'button' | 'a' | JSXElementConstructor<any>;\n  to?: LinkProps['to'];\n  relative?: LinkProps['relative'];\n  replace?: LinkProps['replace'];\n  width?: string;\n  height?: string;\n}\nexport function Tab({\n  index,\n  className,\n  isDisabled,\n  children,\n  padding: paddingProp,\n  elementType = 'button',\n  to,\n  relative,\n  width = 'min-w-min',\n  height,\n}: TabProps) {\n  const {\n    selectedTab,\n    setSelectedTab,\n    tabsRef,\n    size = 'md',\n    id,\n  } = useContext(TabContext);\n  const isSelected = index === selectedTab;\n  const focusManager = useFocusManager();\n  const padding = paddingProp || (size === 'sm' ? 'px-12' : 'px-18');\n\n  const mergedClassname = clsx(\n    'tracking-wide overflow-hidden capitalize text-sm flex items-center justify-center outline-none transition-colors',\n    'focus-visible:ring focus-visible:ring-2 ring-inset rounded whitespace-nowrap cursor-pointer',\n    width,\n    textColor({isDisabled, isSelected}),\n    className,\n    size === 'md' && `${padding} ${height || 'h-48'}`,\n    size === 'sm' && `${padding} ${height || 'h-32'}`,\n    isDisabled && 'pointer-events-none',\n  );\n\n  const onKeyDown = (e: React.KeyboardEvent<HTMLButtonElement>) => {\n    switch (e.key) {\n      case 'ArrowLeft':\n        focusManager?.focusPrevious();\n        break;\n      case 'ArrowRight':\n        focusManager?.focusNext();\n        break;\n      case 'Home':\n        focusManager?.focusFirst();\n        break;\n      case 'End':\n        focusManager?.focusLast();\n        break;\n    }\n  };\n\n  const tabIndex = isSelected ? 0 : -1;\n  const Element = elementType;\n\n  return (\n    <Element\n      disabled={isDisabled}\n      id={`${id}-${index}-tab`}\n      aria-controls={`${id}-${index}-tabpanel`}\n      type=\"button\"\n      role=\"tab\"\n      aria-selected={isSelected}\n      tabIndex={isDisabled ? undefined : tabIndex}\n      onKeyDown={onKeyDown}\n      onClick={() => {\n        setSelectedTab(index!);\n      }}\n      to={to}\n      relative={relative}\n      className={mergedClassname}\n      ref={(el: HTMLElement) => {\n        if (tabsRef.current && el) {\n          tabsRef.current[index!] = el;\n        }\n      }}\n    >\n      {children}\n    </Element>\n  );\n}\n\ninterface TextColorProps {\n  isDisabled?: boolean;\n  isSelected: boolean;\n}\nfunction textColor({isDisabled, isSelected}: TextColorProps): string {\n  if (isDisabled) {\n    return 'text-disabled cursor-default';\n  }\n  if (isSelected) {\n    return 'text-primary';\n  }\n  return 'text-muted hover:text-main';\n}\n","import React, {\n  Children,\n  cloneElement,\n  ComponentPropsWithoutRef,\n  isValidElement,\n  ReactElement,\n  ReactNode,\n  useContext,\n  useRef,\n  useState,\n} from 'react';\nimport clsx from 'clsx';\nimport {useLayoutEffect} from '@react-aria/utils';\nimport {getFocusableTreeWalker} from '@react-aria/focus';\nimport {TabContext} from '@ui/tabs/tabs-context';\n\nexport interface TabPanelsProps {\n  children: ReactNode;\n  className?: string;\n}\nexport function TabPanels({children, className}: TabPanelsProps) {\n  const {selectedTab, isLazy} = useContext(TabContext);\n\n  // filter out falsy values, in case of conditional rendering\n  const panelArray = Children.toArray(children).filter(p => !!p);\n\n  let rendered: ReactNode;\n  if (isLazy) {\n    const el = panelArray[selectedTab] as ReactElement;\n    rendered = isValidElement(el)\n      ? cloneElement<TabPanelProps>(panelArray[selectedTab] as ReactElement, {\n          index: selectedTab,\n        })\n      : null;\n  } else {\n    rendered = panelArray.map((panel, index) => {\n      if (isValidElement<TabPanelsProps>(panel)) {\n        const isSelected = index === selectedTab;\n        return cloneElement<TabPanelProps>(panel, {\n          index,\n          'aria-hidden': !isSelected,\n          className: !isSelected\n            ? clsx(panel.props.className, 'hidden')\n            : panel.props.className,\n        });\n      }\n      return null;\n    });\n  }\n\n  return <div className={className}>{rendered}</div>;\n}\n\ninterface TabPanelProps extends ComponentPropsWithoutRef<'div'> {\n  className?: string;\n  children: ReactNode;\n  index?: number;\n}\nexport function TabPanel({\n  className,\n  children,\n  index,\n  ...domProps\n}: TabPanelProps) {\n  const {id} = useContext(TabContext);\n\n  const [tabIndex, setTabIndex] = useState<number | undefined>(0);\n  const ref = useRef<HTMLDivElement>(null);\n\n  // The tabpanel should have tabIndex=0 when there are no tabbable elements within it.\n  // Otherwise, tabbing from the focused tab should go directly to the first tabbable element\n  // within the tabpanel.\n  useLayoutEffect(() => {\n    if (ref?.current) {\n      const update = () => {\n        // Detect if there are any tabbable elements and update the tabIndex accordingly.\n        const walker = getFocusableTreeWalker(ref.current!, {tabbable: true});\n        setTabIndex(walker.nextNode() ? undefined : 0);\n      };\n\n      update();\n\n      // Update when new elements are inserted, or the tabIndex/disabled attribute updates.\n      const observer = new MutationObserver(update);\n      observer.observe(ref.current, {\n        subtree: true,\n        childList: true,\n        attributes: true,\n        attributeFilter: ['tabIndex', 'disabled'],\n      });\n\n      return () => {\n        observer.disconnect();\n      };\n    }\n  }, [ref]);\n\n  return (\n    <div\n      tabIndex={tabIndex}\n      ref={ref}\n      id={`${id}-${index}-tabpanel`}\n      aria-labelledby={`${id}-${index}-tab`}\n      className={clsx(className, 'focus-visible:outline-primary-light')}\n      role=\"tabpanel\"\n      {...domProps}\n    >\n      {children}\n    </div>\n  );\n}\n","import {ReactNode, useEffect, useRef} from 'react';\nimport {useFormContext} from 'react-hook-form';\nimport clsx from 'clsx';\n\ninterface Props {\n  children: (isInvalid: boolean) => ReactNode;\n  name: string;\n  separatorBottom?: boolean;\n  separatorTop?: boolean;\n}\nexport function SettingsErrorGroup({\n  children,\n  name,\n  separatorBottom = true,\n  separatorTop = true,\n}: Props) {\n  const {\n    formState: {errors},\n  } = useFormContext<Record<string, string>>();\n\n  const ref = useRef<HTMLDivElement>(null);\n  const error = errors[name];\n\n  useEffect(() => {\n    if (error) {\n      ref.current?.scrollIntoView({behavior: 'smooth'});\n    }\n  }, [error]);\n\n  return (\n    <div\n      className={clsx(\n        separatorBottom && 'border-b mb-20 pb-20',\n        separatorTop && 'border-t mt-20 pt-20',\n        error && 'border-y-error'\n      )}\n      ref={ref}\n    >\n      {children(!!error)}\n      {error && (\n        <div\n          className=\"text-danger text-sm mt-20\"\n          dangerouslySetInnerHTML={{__html: error.message!}}\n        />\n      )}\n    </div>\n  );\n}\n","import {useController} from 'react-hook-form';\nimport React, {useMemo} from 'react';\nimport {mergeProps} from '@react-aria/utils';\nimport {\n  ChipField,\n  ChipValue,\n} from '@ui/forms/input-field/chip-field/chip-field';\nimport {FormChipFieldProps} from '@ui/forms/input-field/chip-field/form-chip-field';\n\nexport function JsonChipField({children, ...props}: FormChipFieldProps<any>) {\n  const {\n    field: {onChange, onBlur, value = [], ref},\n    fieldState: {invalid, error},\n  } = useController({\n    name: props.name,\n  });\n\n  const arrayValue = useMemo(() => {\n    const mixedValue = value as string | string[];\n    return typeof mixedValue === 'string' ? JSON.parse(mixedValue) : mixedValue;\n  }, [value]);\n\n  const formProps: Partial<FormChipFieldProps<ChipValue>> = {\n    onChange,\n    onBlur,\n    value: arrayValue,\n    invalid,\n    errorMessage: error?.message,\n  };\n\n  return (\n    <ChipField valueKey=\"name\" ref={ref} {...mergeProps(formProps, props)} />\n  );\n}\n","import {\n  AdminSettingsForm,\n  AdminSettingsLayout,\n} from '@common/admin/settings/form/admin-settings-form';\nimport {useTrans} from '@ui/i18n/use-trans';\nimport {Trans} from '@ui/i18n/trans';\nimport {Tabs} from '@ui/tabs/tabs';\nimport {TabList} from '@ui/tabs/tab-list';\nimport {Tab} from '@ui/tabs/tab';\nimport {TabPanel, TabPanels} from '@ui/tabs/tab-panels';\nimport {FormSwitch} from '@ui/forms/toggle/switch';\nimport {FormTextField} from '@ui/forms/input-field/text-field/text-field';\nimport {useForm, useFormContext} from 'react-hook-form';\nimport {AdminSettings} from '@common/admin/settings/admin-settings';\nimport {LearnMoreLink} from '@common/admin/settings/form/learn-more-link';\nimport {SettingsErrorGroup} from '@common/admin/settings/form/settings-error-group';\nimport React, {Fragment} from 'react';\nimport {JsonChipField} from '@common/admin/settings/form/json-chip-field';\nimport {SettingsSeparator} from '@common/admin/settings/form/settings-separator';\n\nexport function SubscriptionSettings() {\n  return (\n    <AdminSettingsLayout\n      title={<Trans message=\"Subscriptions\" />}\n      description={\n        <Trans message=\"Configure gateway integration, accepted cards, invoices and other related settings.\" />\n      }\n    >\n      {data => <Form data={data} />}\n    </AdminSettingsLayout>\n  );\n}\n\ninterface FormProps {\n  data: AdminSettings;\n}\nfunction Form({data}: FormProps) {\n  const {trans} = useTrans();\n  const form = useForm<AdminSettings>({\n    defaultValues: {\n      client: {\n        billing: {\n          enable: data.client.billing?.enable ?? false,\n          accepted_cards: data.client.billing?.accepted_cards ?? [],\n          paypal_test_mode: data.client.billing?.paypal_test_mode ?? false,\n          paypal: {\n            enable: data.client.billing?.paypal?.enable ?? false,\n          },\n          stripe: {\n            enable: data.client.billing?.stripe?.enable ?? false,\n          },\n          invoice: {\n            address: data.client.billing?.invoice?.address ?? '',\n            notes: data.client.billing?.invoice?.notes ?? '',\n          },\n        },\n      },\n      server: {\n        paypal_client_id: data.server?.paypal_client_id ?? '',\n        paypal_secret: data.server?.paypal_secret ?? '',\n        paypal_webhook_id: data.server?.paypal_webhook_id ?? '',\n        stripe_key: data.server?.stripe_key ?? '',\n        stripe_secret: data.server?.stripe_secret ?? '',\n        stripe_webhook_secret: data.server?.stripe_webhook_secret ?? '',\n      },\n    },\n  });\n\n  return (\n    <AdminSettingsForm form={form}>\n      <Tabs>\n        <TabList>\n          <Tab>\n            <Trans message=\"General\" />\n          </Tab>\n          <Tab>\n            <Trans message=\"Invoices\" />\n          </Tab>\n        </TabList>\n        <TabPanels className=\"pt-30\">\n          <TabPanel>\n            <FormSwitch\n              name=\"client.billing.enable\"\n              description={\n                <Trans message=\"Enable or disable all subscription related functionality across the site.\" />\n              }\n            >\n              <Trans message=\"Enable subscriptions\" />\n            </FormSwitch>\n            <SettingsSeparator />\n            <PaypalSection />\n            <StripeSection />\n            <SettingsSeparator />\n            <JsonChipField\n              label={<Trans message=\"Accepted cards\" />}\n              name=\"client.billing.accepted_cards\"\n              placeholder={trans({message: 'Add new card...'})}\n            />\n          </TabPanel>\n          <TabPanel>\n            <FormTextField\n              inputElementType=\"textarea\"\n              rows={5}\n              label={<Trans message=\"Invoice address\" />}\n              name=\"client.billing.invoice.address\"\n              className=\"mb-30\"\n            />\n            <FormTextField\n              inputElementType=\"textarea\"\n              rows={5}\n              label={<Trans message=\"Invoice notes\" />}\n              description={\n                <Trans message=\"Default notes to show under `notes` section of user invoice. Optional.\" />\n              }\n              name=\"client.billing.invoice.notes\"\n            />\n          </TabPanel>\n        </TabPanels>\n      </Tabs>\n    </AdminSettingsForm>\n  );\n}\n\nfunction PaypalSection() {\n  const {watch} = useFormContext<AdminSettings>();\n  const paypalIsEnabled = watch('client.billing.paypal.enable');\n  return (\n    <div className=\"mb-30\">\n      <FormSwitch\n        name=\"client.billing.paypal.enable\"\n        description={\n          <div>\n            <Trans message=\"Enable PayPal payment gateway integration.\" />\n            <LearnMoreLink\n              className=\"mt-6\"\n              link=\"https://support.vebto.com/hc/articles/147/configuring-paypal\"\n            />\n          </div>\n        }\n      >\n        <Trans message=\"PayPal gateway\" />\n      </FormSwitch>\n      {paypalIsEnabled ? (\n        <SettingsErrorGroup name=\"paypal_group\">\n          {isInvalid => (\n            <Fragment>\n              <FormTextField\n                name=\"server.paypal_client_id\"\n                label={<Trans message=\"PayPal Client ID\" />}\n                required\n                invalid={isInvalid}\n                className=\"mb-20\"\n              />\n              <FormTextField\n                name=\"server.paypal_secret\"\n                label={<Trans message=\"PayPal Secret\" />}\n                required\n                invalid={isInvalid}\n                className=\"mb-20\"\n              />\n              <FormTextField\n                name=\"server.paypal_webhook_id\"\n                label={<Trans message=\"PayPal Webhook ID\" />}\n                required\n                invalid={isInvalid}\n                className=\"mb-20\"\n              />\n              <FormSwitch\n                name=\"client.billing.paypal_test_mode\"\n                invalid={isInvalid}\n                description={\n                  <div>\n                    <Trans message=\"Allows testing PayPal payments with sandbox accounts.\" />\n                  </div>\n                }\n              >\n                <Trans message=\"PayPal test mode\" />\n              </FormSwitch>\n            </Fragment>\n          )}\n        </SettingsErrorGroup>\n      ) : null}\n    </div>\n  );\n}\n\nfunction StripeSection() {\n  const {watch} = useFormContext<AdminSettings>();\n  const stripeEnabled = watch('client.billing.stripe.enable');\n  return (\n    <Fragment>\n      <FormSwitch\n        name=\"client.billing.stripe.enable\"\n        description={\n          <div>\n            <Trans message=\"Enable Stripe payment gateway integration.\" />\n            <LearnMoreLink\n              className=\"mt-6\"\n              link=\"https://support.vebto.com/hc/articles/148/configuring-stripe\"\n            />\n          </div>\n        }\n      >\n        <Trans message=\"Stripe gateway\" />\n      </FormSwitch>\n      {stripeEnabled ? (\n        <SettingsErrorGroup name=\"stripe_group\" separatorBottom={false}>\n          {isInvalid => (\n            <Fragment>\n              <FormTextField\n                name=\"server.stripe_key\"\n                label={<Trans message=\"Stripe publishable key\" />}\n                required\n                className=\"mb-20\"\n                invalid={isInvalid}\n              />\n              <FormTextField\n                name=\"server.stripe_secret\"\n                label={<Trans message=\"Stripe secret key\" />}\n                required\n                className=\"mb-20\"\n                invalid={isInvalid}\n              />\n              <FormTextField\n                name=\"server.stripe_webhook_secret\"\n                label={<Trans message=\"Stripe webhook signing secret\" />}\n                className=\"mb-20\"\n                invalid={isInvalid}\n              />\n            </Fragment>\n          )}\n        </SettingsErrorGroup>\n      ) : null}\n    </Fragment>\n  );\n}\n","import {FormSelect, Option} from '@ui/forms/select/select';\nimport {FetchValueListsResponse, useValueLists} from '@common/http/value-lists';\nimport {Section} from '@ui/forms/listbox/section';\nimport {FormRadio} from '@ui/forms/radio-group/radio';\nimport {FormRadioGroup} from '@ui/forms/radio-group/radio-group';\nimport {DateFormatPresets, FormattedDate} from '@ui/i18n/formatted-date';\nimport {FormSwitch} from '@ui/forms/toggle/switch';\nimport {Trans} from '@ui/i18n/trans';\nimport {useCurrentDateTime} from '@ui/i18n/use-current-date-time';\nimport {useTrans} from '@ui/i18n/use-trans';\nimport {message} from '@ui/i18n/message';\nimport {\n  AdminSettingsForm,\n  AdminSettingsLayout,\n} from '@common/admin/settings/form/admin-settings-form';\nimport React from 'react';\nimport {AdminSettings} from '@common/admin/settings/admin-settings';\nimport {useForm} from 'react-hook-form';\n\nexport function LocalizationSettings() {\n  const optionQuery = useValueLists(['timezones', 'localizations']);\n  return (\n    <AdminSettingsLayout\n      title={<Trans message=\"Localization\" />}\n      description={\n        <Trans message=\"Configure global date, time and language settings.\" />\n      }\n      isLoading={optionQuery.isLoading}\n    >\n      {data => (\n        <Form\n          data={data}\n          timezones={optionQuery.data!.timezones}\n          localizations={optionQuery.data!.localizations}\n        />\n      )}\n    </AdminSettingsLayout>\n  );\n}\n\ninterface FormProps {\n  data: AdminSettings;\n  timezones: FetchValueListsResponse['timezones'];\n  localizations: FetchValueListsResponse['localizations'];\n}\nfunction Form({data, timezones, localizations}: FormProps) {\n  const today = useCurrentDateTime();\n  const {trans} = useTrans();\n\n  const form = useForm<AdminSettings>({\n    defaultValues: {\n      client: {\n        dates: {\n          default_timezone: data.client.dates.default_timezone ?? 'auto',\n          format: data.client.dates.format ?? 'auto',\n        },\n        locale: {\n          default: data.client.locale?.default ?? 'auto',\n        },\n        i18n: {\n          enable: data.client.i18n.enable ?? true,\n        },\n      },\n    },\n  });\n\n  return (\n    <AdminSettingsForm form={form}>\n      <FormSelect\n        className=\"mb-30\"\n        required\n        name=\"client.dates.default_timezone\"\n        showSearchField\n        selectionMode=\"single\"\n        label={<Trans message=\"Default timezone\" />}\n        searchPlaceholder={trans(message('Search timezones'))}\n        description={\n          <Trans message=\"Which timezone should be selected by default for new users and guests.\" />\n        }\n      >\n        <Option key=\"auto\" value=\"auto\">\n          <Trans message=\"Auto\" />\n        </Option>\n        {Object.entries(timezones!).map(([groupName, timezones]) => (\n          <Section key={groupName} label={groupName}>\n            {timezones.map(timezone => (\n              <Option key={timezone.value} value={timezone.value}>\n                {timezone.text}\n              </Option>\n            ))}\n          </Section>\n        ))}\n      </FormSelect>\n      <FormSelect\n        name=\"client.locale.default\"\n        className=\"mb-30\"\n        selectionMode=\"single\"\n        label={<Trans message=\"Default language\" />}\n        description={\n          <Trans message=\"Which localization should be selected by default for new users and guests.\" />\n        }\n      >\n        <Option key=\"auto\" value=\"auto\">\n          <Trans message=\"Auto\" />\n        </Option>\n        {localizations!.map(locale => (\n          <Option key={locale.language} value={locale.language} capitalizeFirst>\n            {locale.name}\n          </Option>\n        ))}\n      </FormSelect>\n      <FormRadioGroup\n        required\n        className=\"mb-30\"\n        size=\"sm\"\n        name=\"client.dates.format\"\n        orientation=\"vertical\"\n        label={<Trans message=\"Date verbosity\" />}\n        description={\n          <Trans message=\"Default verbosity for all dates displayed across the site. Month/day order and separators will be adjusted automatically, based on user's locale.\" />\n        }\n      >\n        <FormRadio key=\"auto\" value=\"auto\">\n          <Trans message=\"Auto\" />\n        </FormRadio>\n        {Object.entries(DateFormatPresets).map(([format, options]) => (\n          <FormRadio key={format} value={format}>\n            <FormattedDate date={today} options={options} />\n          </FormRadio>\n        ))}\n      </FormRadioGroup>\n      <FormSwitch\n        name=\"client.i18n.enable\"\n        description={\n          <Trans message=\"If disabled, site will always be shown in default language and user will not be able to change their locale.\" />\n        }\n      >\n        <Trans message=\"Enable translations\" />\n      </FormSwitch>\n    </AdminSettingsForm>\n  );\n}\n","import {useForm, useFormContext} from 'react-hook-form';\r\nimport {FormSwitch} from '@ui/forms/toggle/switch';\r\nimport {AdminSettings} from '@common/admin/settings/admin-settings';\r\nimport {FormTextField} from '@ui/forms/input-field/text-field/text-field';\r\nimport {SettingsErrorGroup} from '@common/admin/settings/form/settings-error-group';\r\nimport {Trans} from '@ui/i18n/trans';\r\nimport React, {Fragment} from 'react';\r\nimport {Link} from 'react-router';\r\nimport {useSettings} from '@ui/settings/use-settings';\r\nimport {Button} from '@ui/buttons/button';\r\nimport {\r\n  AdminSettingsForm,\r\n  AdminSettingsLayout,\r\n} from '@common/admin/settings/form/admin-settings-form';\r\nimport {SettingsSeparator} from '@common/admin/settings/form/settings-separator';\r\n\r\nexport function AuthenticationSettings() {\r\n  return (\r\n    <AdminSettingsLayout\r\n      title={<Trans message=\"Authentication\" />}\r\n      description={\r\n        <Trans message=\"Configure registration, social login and related 3rd party integrations.\" />\r\n      }\r\n    >\r\n      {data => <Form data={data} />}\r\n    </AdminSettingsLayout>\r\n  );\r\n}\r\n\r\ninterface FormProps {\r\n  data: AdminSettings;\r\n}\r\nfunction Form({data}: FormProps) {\r\n  const form = useForm<AdminSettings>({\r\n    defaultValues: {\r\n      client: {\r\n        require_email_confirmation:\r\n          data.client?.require_email_confirmation ?? false,\r\n        registration: {\r\n          disable: data.client.registration?.disable ?? false,\r\n        },\r\n        social: {\r\n          requireAccount: data.client.social?.requireAccount ?? false,\r\n          compact_buttons: data.client.social?.compact_buttons ?? false,\r\n          envato: {\r\n            enable: data.client.social?.envato?.enable ?? false,\r\n          },\r\n          google: {\r\n            enable: data.client.social?.google?.enable ?? false,\r\n          },\r\n          facebook: {\r\n            enable: data.client.social?.facebook?.enable ?? false,\r\n          },\r\n          twitter: {\r\n            enable: data.client.social?.twitter?.enable ?? false,\r\n          },\r\n        },\r\n        single_device_login: data.client.single_device_login ?? false,\r\n        auth: {\r\n          domain_blacklist: data.client.auth?.domain_blacklist ?? '',\r\n        },\r\n      },\r\n      server: {\r\n        envato_id: data.server?.envato_id ?? '',\r\n        envato_secret: data.server?.envato_secret ?? '',\r\n        envato_personal_token: data.server?.envato_personal_token ?? '',\r\n        google_id: data.server?.google_id ?? '',\r\n        google_secret: data.server?.google_secret ?? '',\r\n        facebook_id: data.server?.facebook_id ?? '',\r\n        facebook_secret: data.server?.facebook_secret ?? '',\r\n        twitter_id: data.server?.twitter_id ?? '',\r\n        twitter_secret: data.server?.twitter_secret ?? '',\r\n        mail_setup: data.server?.mail_setup ?? false,\r\n      },\r\n    },\r\n  });\r\n\r\n  return (\r\n    <AdminSettingsForm form={form}>\r\n      <EmailConfirmationSection />\r\n      <FormSwitch\r\n        className=\"mb-24\"\r\n        name=\"client.registration.disable\"\r\n        description={\r\n          <Trans message=\"All registration related functionality will be disabled and hidden from users.\" />\r\n        }\r\n      >\r\n        <Trans message=\"Disable registration\" />\r\n      </FormSwitch>\r\n      <FormSwitch\r\n        className=\"mb-24\"\r\n        name=\"client.social.requireAccount\"\r\n        description={\r\n          <Trans message=\"If enabled, user will only be able to login via particular social site, if they have connected it from their account settings page.\" />\r\n        }\r\n      >\r\n        <Trans message=\"Social login requires existing account\" />\r\n      </FormSwitch>\r\n      <FormSwitch\r\n        className=\"mb-24\"\r\n        name=\"client.single_device_login\"\r\n        description={\r\n          <Trans message=\"Only allow one device to be logged into user account at the same time.\" />\r\n        }\r\n      >\r\n        <Trans message=\"Single device login\" />\r\n      </FormSwitch>\r\n      <FormSwitch\r\n        name=\"client.social.compact_buttons\"\r\n        description={\r\n          <Trans message=\"Use compact design for social login buttons.\" />\r\n        }\r\n      >\r\n        <Trans message=\"Compact buttons\" />\r\n      </FormSwitch>\r\n      <EnvatoSection />\r\n      <GoogleSection />\r\n      <FacebookSection />\r\n      <TwitterSection />\r\n      <SettingsSeparator />\r\n      <FormTextField\r\n        inputElementType=\"textarea\"\r\n        rows={3}\r\n        className=\"mt-24\"\r\n        name=\"client.auth.domain_blacklist\"\r\n        label={<Trans message=\"Domain blacklist\" />}\r\n        description={\r\n          <Trans message=\"Comma separated list of domains. Users will not be able to register or login using any email adress from specified domains.\" />\r\n        }\r\n      />\r\n    </AdminSettingsForm>\r\n  );\r\n}\r\n\r\nexport function MailNotSetupWarning() {\r\n  const {watch} = useFormContext<AdminSettings>();\r\n  const mailSetup = watch('server.mail_setup');\r\n  if (mailSetup) return null;\r\n\r\n  return (\r\n    <p className=\"mt-10 rounded-panel border p-10 text-sm text-danger\">\r\n      <Trans\r\n        message=\"Outgoing mail method needs to be setup before enabling this setting. <a>Fix now</a>\"\r\n        values={{\r\n          a: text => (\r\n            <Button\r\n              elementType={Link}\r\n              variant=\"outline\"\r\n              size=\"xs\"\r\n              display=\"flex\"\r\n              className=\"mt-10 max-w-max\"\r\n              to=\"/admin/settings/outgoing-email\"\r\n            >\r\n              {text}\r\n            </Button>\r\n          ),\r\n        }}\r\n      />\r\n    </p>\r\n  );\r\n}\r\n\r\nfunction EmailConfirmationSection() {\r\n  return (\r\n    <FormSwitch\r\n      className=\"mb-30\"\r\n      name=\"client.require_email_confirmation\"\r\n      description={\r\n        <Fragment>\r\n          <Trans message=\"Require newly registered users to validate their email address before being able to login.\" />\r\n          <MailNotSetupWarning />\r\n        </Fragment>\r\n      }\r\n    >\r\n      <Trans message=\"Require email confirmation\" />\r\n    </FormSwitch>\r\n  );\r\n}\r\n\r\nfunction EnvatoSection() {\r\n  const {watch} = useFormContext<AdminSettings>();\r\n  const settings = useSettings();\r\n  const envatoLoginEnabled = watch('client.social.envato.enable');\r\n\r\n  if (!(settings as any).envato?.enable) return null;\r\n\r\n  return (\r\n    <SettingsErrorGroup separatorBottom={false} name=\"envato_group\">\r\n      {isInvalid => (\r\n        <>\r\n          <FormSwitch\r\n            invalid={isInvalid}\r\n            name=\"client.social.envato.enable\"\r\n            description={\r\n              <Trans message=\"Enable logging into the site via envato.\" />\r\n            }\r\n          >\r\n            <Trans message=\"Envato login\" />\r\n          </FormSwitch>\r\n          {!!envatoLoginEnabled && (\r\n            <>\r\n              <FormTextField\r\n                invalid={isInvalid}\r\n                className=\"mt-30\"\r\n                name=\"server.envato_id\"\r\n                label={<Trans message=\"Envato ID\" />}\r\n                required\r\n              />\r\n              <FormTextField\r\n                invalid={isInvalid}\r\n                className=\"mt-30\"\r\n                name=\"server.envato_secret\"\r\n                label={<Trans message=\"Envato secret\" />}\r\n                required\r\n              />\r\n              <FormTextField\r\n                invalid={isInvalid}\r\n                className=\"mt-30\"\r\n                name=\"server.envato_personal_token\"\r\n                label={<Trans message=\"Envato personal token\" />}\r\n                required\r\n              />\r\n            </>\r\n          )}\r\n        </>\r\n      )}\r\n    </SettingsErrorGroup>\r\n  );\r\n}\r\n\r\nfunction GoogleSection() {\r\n  const {watch} = useFormContext<AdminSettings>();\r\n  const googleLoginEnabled = watch('client.social.google.enable');\r\n\r\n  return (\r\n    <SettingsErrorGroup name=\"google_group\">\r\n      {isInvalid => (\r\n        <>\r\n          <FormSwitch\r\n            invalid={isInvalid}\r\n            name=\"client.social.google.enable\"\r\n            description={\r\n              <Trans message=\"Enable logging into the site via google.\" />\r\n            }\r\n          >\r\n            <Trans message=\"Google login\" />\r\n          </FormSwitch>\r\n          {!!googleLoginEnabled && (\r\n            <>\r\n              <FormTextField\r\n                invalid={isInvalid}\r\n                className=\"mt-30\"\r\n                name=\"server.google_id\"\r\n                label={<Trans message=\"Google client ID\" />}\r\n                required\r\n              />\r\n              <FormTextField\r\n                className=\"mt-30\"\r\n                name=\"server.google_secret\"\r\n                label={<Trans message=\"Google client secret\" />}\r\n                required\r\n              />\r\n            </>\r\n          )}\r\n        </>\r\n      )}\r\n    </SettingsErrorGroup>\r\n  );\r\n}\r\n\r\nfunction FacebookSection() {\r\n  const {watch} = useFormContext<AdminSettings>();\r\n  const facebookLoginEnabled = watch('client.social.facebook.enable');\r\n\r\n  return (\r\n    <SettingsErrorGroup name=\"facebook_group\" separatorTop={false}>\r\n      {isInvalid => (\r\n        <>\r\n          <FormSwitch\r\n            invalid={isInvalid}\r\n            name=\"client.social.facebook.enable\"\r\n            description={\r\n              <Trans message=\"Enable logging into the site via facebook.\" />\r\n            }\r\n          >\r\n            <Trans message=\"Facebook login\" />\r\n          </FormSwitch>\r\n          {!!facebookLoginEnabled && (\r\n            <>\r\n              <FormTextField\r\n                invalid={isInvalid}\r\n                className=\"mt-30\"\r\n                name=\"server.facebook_id\"\r\n                label={<Trans message=\"Facebook app ID\" />}\r\n                required\r\n              />\r\n              <FormTextField\r\n                invalid={isInvalid}\r\n                className=\"mt-30\"\r\n                name=\"server.facebook_secret\"\r\n                label={<Trans message=\"Facebook app secret\" />}\r\n                required\r\n              />\r\n            </>\r\n          )}\r\n        </>\r\n      )}\r\n    </SettingsErrorGroup>\r\n  );\r\n}\r\n\r\nfunction TwitterSection() {\r\n  const {watch} = useFormContext<AdminSettings>();\r\n  const twitterLoginEnabled = watch('client.social.twitter.enable');\r\n\r\n  return (\r\n    <SettingsErrorGroup\r\n      name=\"twitter_group\"\r\n      separatorTop={false}\r\n      separatorBottom={false}\r\n    >\r\n      {isInvalid => (\r\n        <>\r\n          <FormSwitch\r\n            invalid={isInvalid}\r\n            name=\"client.social.twitter.enable\"\r\n            description={\r\n              <Trans message=\"Enable logging into the site via twitter.\" />\r\n            }\r\n          >\r\n            <Trans message=\"Twitter login\" />\r\n          </FormSwitch>\r\n          {!!twitterLoginEnabled && (\r\n            <>\r\n              <FormTextField\r\n                invalid={isInvalid}\r\n                className=\"mt-30\"\r\n                name=\"server.twitter_id\"\r\n                label={<Trans message=\"Twitter ID\" />}\r\n                required\r\n              />\r\n              <FormTextField\r\n                invalid={isInvalid}\r\n                className=\"mt-30\"\r\n                name=\"server.twitter_secret\"\r\n                label={<Trans message=\"Twitter secret\" />}\r\n                required\r\n              />\r\n            </>\r\n          )}\r\n        </>\r\n      )}\r\n    </SettingsErrorGroup>\r\n  );\r\n}\r\n","export const spaceUnits = ['B', 'KB', 'MB', 'GB', 'TB', 'PB'];\n","export type SpaceUnit = 'KB' | 'MB' | 'GB' | 'TB' | 'PB';\n\nexport function convertToBytes(value: number, unit: SpaceUnit): number {\n  if (value == null) return 0;\n  switch (unit) {\n    case 'KB':\n      return value * 1024;\n    case 'MB':\n      return value * 1024 ** 2;\n    case 'GB':\n      return value * 1024 ** 3;\n    case 'TB':\n      return value * 1024 ** 4;\n    case 'PB':\n      return value * 1024 ** 5;\n    default:\n      return value;\n  }\n}\n","import {useController} from 'react-hook-form';\nimport {mergeProps} from '@react-aria/utils';\nimport React, {useEffect, useState} from 'react';\nimport memoize from 'nano-memoize';\nimport {\n  FormTextFieldProps,\n  TextField,\n  TextFieldProps,\n} from '@ui/forms/input-field/text-field/text-field';\nimport {prettyBytes} from '@ui/utils/files/pretty-bytes';\nimport {Option, Select} from '@ui/forms/select/select';\nimport {spaceUnits} from '@ui/utils/files/space-units';\nimport {convertToBytes, SpaceUnit} from '@ui/utils/files/convert-to-bytes';\n\n// 99TB\nconst MaxValue = 108851651149824;\n\nexport const FormFileSizeField = React.forwardRef<\n  HTMLDivElement,\n  FormTextFieldProps\n>(({name, ...props}, ref) => {\n  const {\n    field: {\n      onChange: setByteValue,\n      onBlur,\n      value: byteValue = '',\n      ref: inputRef,\n    },\n    fieldState: {invalid, error},\n  } = useController({\n    name,\n  });\n\n  const [liveValue, setLiveValue] = useState<number | string>('');\n  const [unit, setUnit] = useState<SpaceUnit | string>('MB');\n\n  useEffect(() => {\n    if (byteValue == null || byteValue === '') {\n      setLiveValue('');\n      return;\n    }\n    const {amount, unit: newUnit} = fromBytes({\n      bytes: Math.min(byteValue, MaxValue),\n    });\n    setUnit(newUnit || 'MB');\n    setLiveValue(Number.isNaN(amount) ? '' : amount);\n  }, [byteValue, unit]);\n\n  const formProps: TextFieldProps = {\n    onChange: e => {\n      const value = parseInt(e.target.value);\n      if (Number.isNaN(value)) {\n        setByteValue(value);\n      } else {\n        const newBytes = convertToBytes(\n          parseInt(e.target.value),\n          unit as SpaceUnit,\n        );\n        setByteValue(newBytes);\n      }\n    },\n    onBlur,\n    value: liveValue,\n    invalid,\n    errorMessage: error?.message,\n    inputRef,\n  };\n\n  const unitSelect = (\n    <Select\n      minWidth=\"min-w-80\"\n      selectionMode=\"single\"\n      selectedValue={unit}\n      disabled={!byteValue}\n      inputRadius=\"rounded-l-none rounded-r-input\"\n      onSelectionChange={newUnit => {\n        const newBytes = convertToBytes(\n          (liveValue || 0) as number,\n          newUnit as SpaceUnit,\n        );\n        setByteValue(newBytes);\n      }}\n    >\n      {spaceUnits.slice(0, 5).map(u => (\n        <Option value={u} key={u}>\n          {u === 'B' ? 'Bytes' : u}\n        </Option>\n      ))}\n    </Select>\n  );\n\n  return (\n    <TextField\n      {...mergeProps(formProps, props)}\n      type=\"number\"\n      ref={ref}\n      endAppend={unitSelect}\n    />\n  );\n});\n\nconst fromBytes = memoize(\n  ({bytes}: {bytes: number}): {amount: number | string; unit: SpaceUnit} => {\n    const pretty = prettyBytes(bytes);\n    if (!pretty) return {amount: '', unit: 'MB'};\n    let amount = parseInt(pretty.split(' ')[0]);\n    // get rid of any punctuation\n    amount = Math.round(amount);\n    return {amount, unit: pretty.split(' ')[1] as SpaceUnit};\n  },\n);\n","import {useQuery} from '@tanstack/react-query';\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\nimport {apiClient} from '@common/http/query-client';\n\nexport interface FetchMaxServerUploadSizeResponse extends BackendResponse {\n  maxSize: string;\n}\n\nfunction fetchMaxServerUploadSize(): Promise<FetchMaxServerUploadSizeResponse> {\n  return apiClient\n    .get('uploads/server-max-file-size')\n    .then(response => response.data);\n}\n\nexport function useMaxServerUploadSize() {\n  return useQuery({\n    queryKey: ['MaxServerUploadSize'],\n    queryFn: () => fetchMaxServerUploadSize(),\n  });\n}\n","import {useMutation} from '@tanstack/react-query';\nimport {apiClient} from '@common/http/query-client';\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\nimport {showHttpErrorToast} from '@common/http/show-http-error-toast';\n\ninterface Response extends BackendResponse {\n  refreshToken: string;\n}\n\ninterface Payload {\n  app_key: string;\n  app_secret: string;\n  access_code: string;\n}\n\nexport function useGenerateDropboxRefreshToken() {\n  return useMutation({\n    mutationFn: (props: Payload) => generateToken(props),\n    onError: err => showHttpErrorToast(err),\n  });\n}\n\nfunction generateToken(payload: Payload): Promise<Response> {\n  return apiClient\n    .post('settings/uploading/dropbox-refresh-token', payload)\n    .then(r => r.data);\n}\n","import {Fragment} from 'react';\nimport {FormTextField} from '@ui/forms/input-field/text-field/text-field';\nimport {Trans} from '@ui/i18n/trans';\nimport {CredentialFormProps} from '../uploading-settings';\nimport {Button} from '@ui/buttons/button';\nimport {Dialog} from '@ui/overlays/dialog/dialog';\nimport {DialogHeader} from '@ui/overlays/dialog/dialog-header';\nimport {DialogBody} from '@ui/overlays/dialog/dialog-body';\nimport {useForm, useFormContext} from 'react-hook-form';\nimport {Form} from '@ui/forms/form';\nimport {DialogTrigger} from '@ui/overlays/dialog/dialog-trigger';\nimport {AdminSettings} from '../../../admin-settings';\nimport {DialogFooter} from '@ui/overlays/dialog/dialog-footer';\nimport {useDialogContext} from '@ui/overlays/dialog/dialog-context';\nimport {useGenerateDropboxRefreshToken} from './use-generate-dropbox-refresh-token';\n\nexport function DropboxForm({isInvalid}: CredentialFormProps) {\n  const {watch, setValue} = useFormContext<AdminSettings>();\n  const appKey = watch('server.storage_dropbox_app_key');\n  const appSecret = watch('server.storage_dropbox_app_secret');\n\n  return (\n    <Fragment>\n      <FormTextField\n        invalid={isInvalid}\n        className=\"mb-20\"\n        name=\"server.storage_dropbox_app_key\"\n        label={<Trans message=\"Dropbox application key\" />}\n        required\n      />\n      <FormTextField\n        invalid={isInvalid}\n        className=\"mb-20\"\n        name=\"server.storage_dropbox_app_secret\"\n        label={<Trans message=\"Dropbox application secret\" />}\n        required\n      />\n      <FormTextField\n        invalid={isInvalid}\n        className=\"mb-20\"\n        name=\"server.storage_dropbox_refresh_token\"\n        label={<Trans message=\"Dropbox refresh token\" />}\n        required\n      />\n      <DialogTrigger\n        type=\"modal\"\n        onClose={refreshToken => {\n          if (refreshToken) {\n            setValue('server.storage_dropbox_refresh_token', refreshToken);\n          }\n        }}\n      >\n        <Button\n          variant=\"outline\"\n          color=\"primary\"\n          size=\"xs\"\n          disabled={!appKey || !appSecret}\n        >\n          <Trans message=\"Get dropbox refresh token\" />\n        </Button>\n        <DropboxRefreshTokenDialog appKey={appKey!} appSecret={appSecret!} />\n      </DialogTrigger>\n    </Fragment>\n  );\n}\n\ninterface DropboxRefreshTokenDialogProps {\n  appKey: string;\n  appSecret: string;\n}\nfunction DropboxRefreshTokenDialog({\n  appKey,\n  appSecret,\n}: DropboxRefreshTokenDialogProps) {\n  const form = useForm<{accessCode: string}>();\n  const {formId, close} = useDialogContext();\n  const generateRefreshToken = useGenerateDropboxRefreshToken();\n  return (\n    <Dialog>\n      <DialogHeader>\n        <Trans message=\"Connected dropbox account\" />\n      </DialogHeader>\n      <DialogBody>\n        <Form\n          id={formId}\n          form={form}\n          onSubmit={data => {\n            generateRefreshToken.mutate(\n              {\n                app_key: appKey,\n                app_secret: appSecret,\n                access_code: data.accessCode,\n              },\n              {\n                onSuccess: response => {\n                  close(response.refreshToken);\n                },\n              },\n            );\n          }}\n        >\n          <div className=\"mb-20 border-b pb-20\">\n            <div className=\"mb-10 text-sm text-muted\">\n              <Trans message=\"Click the 'get access code' button to get dropbox access code, then paste it into the field below.\" />\n            </div>\n            <Button\n              variant=\"outline\"\n              color=\"primary\"\n              size=\"xs\"\n              elementType=\"a\"\n              target=\"_blank\"\n              href={`https://www.dropbox.com/oauth2/authorize?client_id=${appKey}&token_access_type=offline&response_type=code`}\n            >\n              <Trans message=\"Get access code\" />\n            </Button>\n          </div>\n          <FormTextField\n            name=\"accessCode\"\n            label={<Trans message=\"Dropbox access code\" />}\n            required\n          />\n        </Form>\n      </DialogBody>\n      <DialogFooter>\n        <Button\n          onClick={() => {\n            close();\n          }}\n        >\n          <Trans message=\"Cancel\" />\n        </Button>\n        <Button\n          variant=\"flat\"\n          color=\"primary\"\n          form={formId}\n          type=\"submit\"\n          disabled={!appKey || !appSecret || generateRefreshToken.isPending}\n        >\n          <Trans message=\"Connect\" />\n        </Button>\n      </DialogFooter>\n    </Dialog>\n  );\n}\n","import {useMutation} from '@tanstack/react-query';\nimport {apiClient} from '@common/http/query-client';\nimport {useTrans} from '@ui/i18n/use-trans';\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\nimport {showHttpErrorToast} from '@common/http/show-http-error-toast';\nimport {message} from '@ui/i18n/message';\nimport {toast} from '@ui/toast/toast';\n\ninterface Response extends BackendResponse {}\n\nexport function useUploadS3Cors() {\n  const {trans} = useTrans();\n  return useMutation({\n    mutationFn: () => uploadCors(),\n    onSuccess: () => {\n      toast(trans(message('CORS file updated')));\n    },\n    onError: err => showHttpErrorToast(err),\n  });\n}\n\nfunction uploadCors(): Promise<Response> {\n  return apiClient.post('s3/cors/upload').then(r => r.data);\n}\n","import {\n  AdminSettingsForm,\n  AdminSettingsLayout,\n} from '@common/admin/settings/form/admin-settings-form';\nimport {useTrans} from '@ui/i18n/use-trans';\nimport {Trans} from '@ui/i18n/trans';\nimport {SettingsErrorGroup} from '@common/admin/settings/form/settings-error-group';\nimport {FormRadioGroup} from '@ui/forms/radio-group/radio-group';\nimport {FormRadio} from '@ui/forms/radio-group/radio';\nimport {FormFileSizeField} from '@common/uploads/components/file-size-field';\nimport {SettingsSeparator} from '@common/admin/settings/form/settings-separator';\nimport {JsonChipField} from '@common/admin/settings/form/json-chip-field';\nimport {message} from '@ui/i18n/message';\nimport {useMaxServerUploadSize} from '@common/admin/settings/pages/uploading-settings/max-server-upload-size';\nimport {SectionHelper} from '@common/ui/other/section-helper';\nimport {useForm, useFormContext} from 'react-hook-form';\nimport {AdminSettings} from '@common/admin/settings/admin-settings';\nimport {FormSelect} from '@ui/forms/select/select';\nimport {DropboxForm} from '@common/admin/settings/pages/uploading-settings/dropbox-form/dropbox-form';\nimport React, {Fragment} from 'react';\nimport {FormTextField} from '@ui/forms/input-field/text-field/text-field';\nimport {useUploadS3Cors} from '@common/admin/settings/pages/uploading-settings/use-upload-s3-cors';\nimport {useAdminSettings} from '@common/admin/settings/requests/use-admin-settings';\nimport {FormSwitch} from '@ui/forms/toggle/switch';\nimport {Button} from '@ui/buttons/button';\nimport {Item} from '@ui/forms/listbox/item';\n\nexport function UploadingSettings() {\n  return (\n    <AdminSettingsLayout\n      title={<Trans message=\"Uploading\" />}\n      description={\n        <Trans message=\"Configure size and type of files that users are able to upload. This will affect all uploads across the site.\" />\n      }\n    >\n      {data => <Form data={data} />}\n    </AdminSettingsLayout>\n  );\n}\n\ninterface FormProps {\n  data: AdminSettings;\n}\nfunction Form({data}: FormProps) {\n  const {trans} = useTrans();\n  const form = useForm<AdminSettings>({\n    defaultValues: {\n      client: {\n        uploads: {\n          max_size: data.client.uploads.max_size ?? 0,\n          chunk_size: data.client.uploads.chunk_size ?? 0,\n          available_space: data.client.uploads.available_space ?? 0,\n          allowed_extensions: data.client.uploads.allowed_extensions ?? [],\n          blocked_extensions: data.client.uploads.blocked_extensions ?? [],\n          s3_direct_upload: data.client.uploads.s3_direct_upload ?? false,\n        },\n      },\n      server: {\n        static_file_delivery: data.server.static_file_delivery ?? '',\n        uploads_disk_driver: data.server.uploads_disk_driver ?? 'local',\n        public_disk_driver: data.server.public_disk_driver ?? 'local',\n\n        // s3\n        storage_s3_key: data.server.storage_s3_key ?? '',\n        storage_s3_secret: data.server.storage_s3_secret ?? '',\n        storage_s3_region: data.server.storage_s3_region ?? '',\n        storage_s3_bucket: data.server.storage_s3_bucket ?? '',\n        storage_s3_endpoint: data.server.storage_s3_endpoint ?? '',\n\n        // digitalocean spaces\n        storage_digitalocean_key: data.server.storage_digitalocean_key ?? '',\n        storage_digitalocean_secret:\n          data.server.storage_digitalocean_secret ?? '',\n        storage_digitalocean_region:\n          data.server.storage_digitalocean_region ?? '',\n        storage_digitalocean_bucket:\n          data.server.storage_digitalocean_bucket ?? '',\n\n        // backblaze\n        storage_backblaze_key: data.server.storage_backblaze_key ?? '',\n        storage_backblaze_secret: data.server.storage_backblaze_secret ?? '',\n        storage_backblaze_region: data.server.storage_backblaze_region ?? '',\n        storage_backblaze_bucket: data.server.storage_backblaze_bucket ?? '',\n\n        // ftp\n        storage_ftp_host: data.server.storage_ftp_host ?? '',\n        storage_ftp_username: data.server.storage_ftp_username ?? '',\n        storage_ftp_password: data.server.storage_ftp_password ?? '',\n        storage_ftp_root: data.server.storage_ftp_root ?? '',\n        storage_ftp_port: data.server.storage_ftp_port ?? '21',\n        storage_ftp_passive: data.server.storage_ftp_passive ?? false,\n        storage_ftp_ssl: data.server.storage_ftp_ssl ?? false,\n\n        // dropbox\n        storage_dropbox_app_key: data.server.storage_dropbox_app_key ?? '',\n        storage_dropbox_app_secret:\n          data.server.storage_dropbox_app_secret ?? '',\n        storage_dropbox_refresh_token:\n          data.server.storage_dropbox_refresh_token ?? '',\n      },\n    },\n  });\n\n  return (\n    <AdminSettingsForm form={form}>\n      <PrivateUploadSection />\n      <PublicUploadSection />\n      <CredentialsSection />\n      <SettingsErrorGroup name=\"static_delivery_group\">\n        {isInvalid => (\n          <FormRadioGroup\n            invalid={isInvalid}\n            size=\"sm\"\n            name=\"server.static_file_delivery\"\n            orientation=\"vertical\"\n            label={<Trans message=\"File delivery optimization\" />}\n            description={\n              <Trans message=\"Both X-Sendfile and X-Accel need to be enabled on the server first. When enabled, it will reduce server memory and CPU usage when previewing or downloading files, especially for large files.\" />\n            }\n          >\n            <FormRadio value=\"\">\n              <Trans message=\"None\" />\n            </FormRadio>\n            <FormRadio value=\"xsendfile\">\n              <Trans message=\"X-Sendfile (Apache)\" />\n            </FormRadio>\n            <FormRadio value=\"xaccel\">\n              <Trans message=\"X-Accel (Nginx)\" />\n            </FormRadio>\n          </FormRadioGroup>\n        )}\n      </SettingsErrorGroup>\n      <FormFileSizeField\n        className=\"mb-30\"\n        name=\"client.uploads.chunk_size\"\n        min={1}\n        label={<Trans message=\"Chunk size\" />}\n        placeholder=\"Infinity\"\n        description={\n          <Trans message=\"Size (in bytes) for each file chunk. It should only be changed if there is a maximum upload size on your server or proxy (for example cloudflare). If chunk size is larger then limit on the server, uploads will fail.\" />\n        }\n      />\n      <MaxUploadSizeSection />\n      <SettingsSeparator />\n      <FormFileSizeField\n        min={1}\n        name=\"client.uploads.max_size\"\n        className=\"mb-30\"\n        label={<Trans message=\"Maximum file size\" />}\n        description={\n          <Trans message=\"Maximum size (in bytes) for a single file user can upload.\" />\n        }\n      />\n      <FormFileSizeField\n        min={1}\n        name=\"client.uploads.available_space\"\n        className=\"mb-30\"\n        label={<Trans message=\"Available space\" />}\n        description={\n          <Trans message=\"Disk space (in bytes) each user uploads are allowed to take up. This can be overridden per user.\" />\n        }\n      />\n      <JsonChipField\n        name=\"client.uploads.allowed_extensions\"\n        className=\"mb-30\"\n        label={<Trans message=\"Allowed extensions\" />}\n        placeholder={trans(message('Add extension...'))}\n        description={\n          <Trans message=\"List of allowed file types (jpg, mp3, pdf etc.). Leave empty to allow all file types.\" />\n        }\n      />\n      <JsonChipField\n        name=\"client.uploads.blocked_extensions\"\n        label={<Trans message=\"Blocked extensions\" />}\n        placeholder={trans(message('Add extension...'))}\n        description={\n          <Trans message=\"Prevent uploading of these file types, even if they are allowed above.\" />\n        }\n      />\n    </AdminSettingsForm>\n  );\n}\n\nfunction MaxUploadSizeSection() {\n  const {data} = useMaxServerUploadSize();\n  return (\n    <SectionHelper\n      color=\"warning\"\n      description={\n        <Trans\n          message=\"Maximum upload size on your server currently is set to <b>:size</b>\"\n          values={{size: data?.maxSize, b: chunks => <b>{chunks}</b>}}\n        />\n      }\n    />\n  );\n}\n\nfunction PrivateUploadSection() {\n  const {watch, clearErrors} = useFormContext<AdminSettings>();\n  const isEnabled = watch('server.uploads_disk_driver');\n\n  if (!isEnabled) return null;\n\n  return (\n    <FormSelect\n      className=\"mb-30\"\n      selectionMode=\"single\"\n      name=\"server.uploads_disk_driver\"\n      label={<Trans message=\"User Uploads Storage Method\" />}\n      description={\n        <Trans message=\"Where should user private file uploads be stored.\" />\n      }\n      onSelectionChange={() => {\n        clearErrors();\n      }}\n    >\n      <Item value=\"local\">\n        <Trans message=\"Local Disk (Default)\" />\n      </Item>\n      <Item value=\"ftp\">FTP</Item>\n      <Item value=\"digitalocean_s3\">DigitalOcean Spaces</Item>\n      <Item value=\"backblaze_s3\">Backblaze</Item>\n      <Item value=\"s3\">Amazon S3 (Or compatible service)</Item>\n      <Item value=\"dropbox\">Dropbox</Item>\n      <Item value=\"rackspace\">Rackspace</Item>\n    </FormSelect>\n  );\n}\n\nfunction PublicUploadSection() {\n  const {watch, clearErrors} = useFormContext<AdminSettings>();\n  const isEnabled = watch('server.public_disk_driver');\n\n  if (!isEnabled) return null;\n\n  return (\n    <FormSelect\n      label={<Trans message=\"Public Uploads Storage Method\" />}\n      selectionMode=\"single\"\n      name=\"server.public_disk_driver\"\n      description={\n        <Trans message=\"Where should user public uploads (like avatars) be stored.\" />\n      }\n      onSelectionChange={() => {\n        clearErrors();\n      }}\n    >\n      <Item value=\"local\">\n        <Trans message=\"Local Disk (Default)\" />\n      </Item>\n      <Item value=\"s3\">Amazon S3</Item>\n      <Item value=\"ftp\">FTP</Item>\n      <Item value=\"digitalocean_s3\">DigitalOcean Spaces</Item>\n      <Item value=\"backblaze_s3\">Backblaze</Item>\n    </FormSelect>\n  );\n}\n\nfunction CredentialsSection() {\n  const {watch} = useFormContext<AdminSettings>();\n  const drives = [\n    watch('server.uploads_disk_driver'),\n    watch('server.public_disk_driver'),\n  ];\n\n  if (drives[0] === 'local' && drives[1] === 'local') {\n    return null;\n  }\n\n  return (\n    <SettingsErrorGroup separatorBottom={false} name=\"storage_group\">\n      {isInvalid => {\n        if (drives.includes('s3')) {\n          return <S3Form isInvalid={isInvalid} />;\n        }\n        if (drives.includes('ftp')) {\n          return <FtpForm isInvalid={isInvalid} />;\n        }\n        if (drives.includes('dropbox')) {\n          return <DropboxForm isInvalid={isInvalid} />;\n        }\n        if (drives.includes('digitalocean_s3')) {\n          return <DigitalOceanForm isInvalid={isInvalid} />;\n        }\n        if (drives.includes('backblaze_s3')) {\n          return <BackblazeForm isInvalid={isInvalid} />;\n        }\n      }}\n    </SettingsErrorGroup>\n  );\n}\n\nexport interface CredentialFormProps {\n  isInvalid: boolean;\n}\nfunction S3Form({isInvalid}: CredentialFormProps) {\n  return (\n    <Fragment>\n      <FormTextField\n        invalid={isInvalid}\n        className=\"mb-30\"\n        name=\"server.storage_s3_key\"\n        label={<Trans message=\"Amazon S3 key\" />}\n        required\n      />\n      <FormTextField\n        invalid={isInvalid}\n        className=\"mb-30\"\n        name=\"server.storage_s3_secret\"\n        label={<Trans message=\"Amazon S3 secret\" />}\n        required\n      />\n      <FormTextField\n        invalid={isInvalid}\n        className=\"mb-30\"\n        name=\"server.storage_s3_region\"\n        label={<Trans message=\"Amazon S3 region\" />}\n        placeholder=\"us-east-1\"\n      />\n      <FormTextField\n        invalid={isInvalid}\n        className=\"mb-30\"\n        name=\"server.storage_s3_bucket\"\n        label={<Trans message=\"Amazon S3 bucket\" />}\n        required\n      />\n      <FormTextField\n        invalid={isInvalid}\n        name=\"server.storage_s3_endpoint\"\n        label={<Trans message=\"Amazon S3 endpoint\" />}\n        description={\n          <Trans message=\"Only change endpoint if you are using another S3 compatible storage service.\" />\n        }\n      />\n      <S3DirectUploadField invalid={isInvalid} />\n    </Fragment>\n  );\n}\n\nfunction DigitalOceanForm({isInvalid}: CredentialFormProps) {\n  return (\n    <Fragment>\n      <FormTextField\n        invalid={isInvalid}\n        className=\"mb-30\"\n        name=\"server.storage_digitalocean_key\"\n        label={<Trans message=\"DigitalOcean key\" />}\n        required\n      />\n      <FormTextField\n        invalid={isInvalid}\n        className=\"mb-30\"\n        name=\"server.storage_digitalocean_secret\"\n        label={<Trans message=\"DigitalOcean secret\" />}\n        required\n      />\n      <FormTextField\n        invalid={isInvalid}\n        className=\"mb-30\"\n        name=\"server.storage_digitalocean_region\"\n        label={<Trans message=\"DigitalOcean region\" />}\n        pattern=\"[a-z0-9\\-]+\"\n        placeholder=\"us-east-1\"\n        required\n      />\n      <FormTextField\n        invalid={isInvalid}\n        className=\"mb-30\"\n        name=\"server.storage_digitalocean_bucket\"\n        label={<Trans message=\"DigitalOcean bucket\" />}\n        required\n      />\n      <S3DirectUploadField invalid={isInvalid} />\n    </Fragment>\n  );\n}\n\nfunction BackblazeForm({isInvalid}: CredentialFormProps) {\n  return (\n    <Fragment>\n      <FormTextField\n        invalid={isInvalid}\n        className=\"mb-30\"\n        name=\"server.storage_backblaze_key\"\n        label={<Trans message=\"Backblaze KeyID\" />}\n        required\n      />\n      <FormTextField\n        invalid={isInvalid}\n        className=\"mb-30\"\n        name=\"server.storage_backblaze_secret\"\n        label={<Trans message=\"Backblaze applicationKey\" />}\n        required\n      />\n      <FormTextField\n        invalid={isInvalid}\n        className=\"mb-30\"\n        name=\"server.storage_backblaze_region\"\n        label={<Trans message=\"Backblaze Region\" />}\n        pattern=\"[a-z0-9\\-]+\"\n        placeholder=\"us-west-002\"\n        required\n      />\n      <FormTextField\n        invalid={isInvalid}\n        className=\"mb-30\"\n        name=\"server.storage_backblaze_bucket\"\n        label={<Trans message=\"Backblaze bucket name\" />}\n        required\n      />\n      <S3DirectUploadField invalid={isInvalid} />\n    </Fragment>\n  );\n}\n\ninterface S3DirectUploadFieldProps {\n  invalid: boolean;\n}\nfunction S3DirectUploadField({invalid}: S3DirectUploadFieldProps) {\n  const uploadCors = useUploadS3Cors();\n  const {data: defaultSettings} = useAdminSettings();\n\n  const s3DriverEnabled =\n    defaultSettings?.server.uploads_disk_driver?.endsWith('s3') ||\n    defaultSettings?.server.public_disk_driver?.endsWith('s3');\n\n  return (\n    <Fragment>\n      <FormSwitch\n        className=\"mt-30\"\n        invalid={invalid}\n        name=\"client.uploads.s3_direct_upload\"\n        description={\n          <div>\n            <p>\n              <Trans message=\"Upload files directly from the browser to s3 without going through the server. It will save on server bandwidth and should result in faster upload times. This should be enabled, unless storage provider does not support multipart uploads.\" />\n            </p>\n            <p className=\"mt-10\">\n              <Trans message=\"If s3 provider is not configured to allow uploads from browser, this can be done automatically via CORS button below, when valid credentials are saved.\" />\n            </p>\n          </div>\n        }\n      >\n        <Trans message=\"Direct upload\" />\n      </FormSwitch>\n      <Button\n        variant=\"flat\"\n        color=\"primary\"\n        size=\"xs\"\n        className=\"mt-20\"\n        onClick={() => {\n          uploadCors.mutate();\n        }}\n        disabled={!s3DriverEnabled || uploadCors.isPending}\n      >\n        <Trans message=\"Configure CORS\" />\n      </Button>\n    </Fragment>\n  );\n}\n\nfunction FtpForm({isInvalid}: CredentialFormProps) {\n  return (\n    <>\n      <FormTextField\n        invalid={isInvalid}\n        className=\"mb-30\"\n        name=\"server.storage_ftp_host\"\n        label={<Trans message=\"FTP hostname\" />}\n        required\n      />\n      <FormTextField\n        invalid={isInvalid}\n        className=\"mb-30\"\n        name=\"server.storage_ftp_username\"\n        label={<Trans message=\"FTP username\" />}\n        required\n      />\n      <FormTextField\n        invalid={isInvalid}\n        className=\"mb-30\"\n        name=\"server.storage_ftp_password\"\n        label={<Trans message=\"FTP password\" />}\n        type=\"password\"\n        required\n      />\n      <FormTextField\n        invalid={isInvalid}\n        className=\"mb-30\"\n        name=\"server.storage_ftp_root\"\n        label={<Trans message=\"FTP directory\" />}\n        placeholder=\"/\"\n      />\n      <FormTextField\n        invalid={isInvalid}\n        className=\"mb-30\"\n        name=\"server.storage_ftp_port\"\n        label={<Trans message=\"FTP port\" />}\n        type=\"number\"\n        min={0}\n        placeholder=\"21\"\n      />\n      <FormSwitch\n        invalid={isInvalid}\n        name=\"server.storage_ftp_passive\"\n        className=\"mb-30\"\n      >\n        <Trans message=\"Passive\" />\n      </FormSwitch>\n      <FormSwitch invalid={isInvalid} name=\"server.storage_ftp_ssl\">\n        <Trans message=\"SSL\" />\n      </FormSwitch>\n    </>\n  );\n}\n","import {Fragment} from 'react';\nimport {FormTextField} from '@ui/forms/input-field/text-field/text-field';\nimport {Trans} from '@ui/i18n/trans';\n\nexport interface MailgunCredentialsProps {\n  isInvalid: boolean;\n}\nexport function MailgunCredentials({isInvalid}: MailgunCredentialsProps) {\n  return (\n    <Fragment>\n      <FormTextField\n        invalid={isInvalid}\n        className=\"mb-30\"\n        name=\"server.mailgun_domain\"\n        label={<Trans message=\"Mailgun domain\" />}\n        description={\n          <Trans message=\"Usually the domain of your site (site.com)\" />\n        }\n        required\n      />\n      <FormTextField\n        invalid={isInvalid}\n        className=\"mb-30\"\n        name=\"server.mailgun_secret\"\n        label={<Trans message=\"Mailgun API key\" />}\n        description={<Trans message=\"Should start with `key-`\" />}\n        required\n      />\n      <FormTextField\n        invalid={isInvalid}\n        name=\"server.mailgun_endpoint\"\n        label={<Trans message=\"Mailgun endpoint\" />}\n        description={\n          <Trans message=\"Can be left empty, if your mailgun account is in the US region.\" />\n        }\n        placeholder=\"api.eu.mailgun.net\"\n      />\n    </Fragment>\n  );\n}\n","import {FormTextField} from '@ui/forms/input-field/text-field/text-field';\nimport {Trans} from '@ui/i18n/trans';\nimport {FormSelect} from '@ui/forms/select/select';\nimport {Item} from '@ui/forms/listbox/item';\n\nexport interface SmtpCredentialsProps {\n  isInvalid: boolean;\n}\nexport function SmtpCredentials({isInvalid}: SmtpCredentialsProps) {\n  return (\n    <>\n      <FormTextField\n        invalid={isInvalid}\n        className=\"mb-30\"\n        name=\"server.mail_host\"\n        label={<Trans message=\"SMTP host\" />}\n        required\n      />\n      <FormTextField\n        invalid={isInvalid}\n        className=\"mb-30\"\n        name=\"server.mail_username\"\n        label={<Trans message=\"SMTP username\" />}\n        required\n      />\n      <FormTextField\n        invalid={isInvalid}\n        className=\"mb-30\"\n        type=\"password\"\n        name=\"server.mail_password\"\n        label={<Trans message=\"SMTP password\" />}\n        required\n      />\n      <FormTextField\n        invalid={isInvalid}\n        className=\"mb-30\"\n        type=\"number\"\n        name=\"server.mail_port\"\n        label={<Trans message=\"SMTP port\" />}\n      />\n      <FormSelect\n        selectionMode=\"single\"\n        invalid={isInvalid}\n        className=\"mb-30\"\n        name=\"server.mail_encryption\"\n        label={<Trans message=\"SMTP encryption\" />}\n      >\n        <Item value=\"\">\n          <Trans message=\"None\" />\n        </Item>\n        <Item value=\"tls\">\n          <Trans message=\"TLS\" />\n        </Item>\n        <Item value=\"ssl\">\n          <Trans message=\"SSL\" />\n        </Item>\n      </FormSelect>\n    </>\n  );\n}\n","import {FormTextField} from '@ui/forms/input-field/text-field/text-field';\nimport {Trans} from '@ui/i18n/trans';\nimport {Fragment} from 'react';\n\nexport interface SesCredentialsProps {\n  isInvalid: boolean;\n}\nexport function SesCredentials({isInvalid}: SesCredentialsProps) {\n  return (\n    <Fragment>\n      <FormTextField\n        invalid={isInvalid}\n        className=\"mb-30\"\n        name=\"server.ses_key\"\n        label={<Trans message=\"SES key\" />}\n        required\n      />\n      <FormTextField\n        invalid={isInvalid}\n        className=\"mb-30\"\n        name=\"server.ses_secret\"\n        label={<Trans message=\"SES secret\" />}\n        required\n      />\n      <FormTextField\n        invalid={isInvalid}\n        name=\"server.ses_region\"\n        label={<Trans message=\"SES region\" />}\n        placeholder=\"us-east-1\"\n        required\n      />\n    </Fragment>\n  );\n}\n","import {FormTextField} from '@ui/forms/input-field/text-field/text-field';\nimport {Trans} from '@ui/i18n/trans';\n\nexport interface PostmarkCredentialsProps {\n  isInvalid: boolean;\n}\nexport function PostmarkCredentials({isInvalid}: PostmarkCredentialsProps) {\n  return (\n    <FormTextField\n      invalid={isInvalid}\n      name=\"server.postmark_token\"\n      label={<Trans message=\"Postmark token\" />}\n      required\n    />\n  );\n}\n","import {createSvgIcon} from '@ui/icons/create-svg-icon';\n\nexport const GmailIcon = createSvgIcon(\n  [\n    <path\n      key=\"0\"\n      fill=\"#4caf50\"\n      d=\"M45,16.2l-5,2.75l-5,4.75L35,40h7c1.657,0,3-1.343,3-3V16.2z\"\n    />,\n    <path\n      key=\"1\"\n      fill=\"#1e88e5\"\n      d=\"M3,16.2l3.614,1.71L13,23.7V40H6c-1.657,0-3-1.343-3-3V16.2z\"\n    />,\n    <polygon\n      key=\"2\"\n      fill=\"#e53935\"\n      points=\"35,11.2 24,19.45 13,11.2 12,17 13,23.7 24,31.95 35,23.7 36,17\"\n    />,\n    <path\n      key=\"3\"\n      fill=\"#c62828\"\n      d=\"M3,12.298V16.2l10,7.5V11.2L9.876,8.859C9.132,8.301,8.228,8,7.298,8h0C4.924,8,3,9.924,3,12.298z\"\n    />,\n    <path\n      key=\"4\"\n      fill=\"#fbc02d\"\n      d=\"M45,12.298V16.2l-10,7.5V11.2l3.124-2.341C38.868,8.301,39.772,8,40.702,8h0 C43.076,8,45,9.924,45,12.298z\"\n    />,\n  ],\n  'Gmail',\n  '0 0 48 48',\n);\n","import {useFormContext} from 'react-hook-form';\nimport {AdminSettings} from '../../admin-settings';\nimport {useSocialLogin} from '@common/auth/requests/use-social-login';\nimport {toast} from '@ui/toast/toast';\nimport {message} from '@ui/i18n/message';\nimport {Button} from '@ui/buttons/button';\nimport {GmailIcon} from './gmail-icon';\nimport {Trans} from '@ui/i18n/trans';\nimport {Fragment} from 'react';\n\nexport function ConnectGmailPanel() {\n  const {watch, setValue} = useFormContext<AdminSettings>();\n  const {connectSocial} = useSocialLogin();\n  const connectedEmail = watch('server.connectedGmailAccount');\n\n  const handleGmailConnect = async () => {\n    const e = await connectSocial('secure/settings/mail/gmail/connect');\n    if (e?.status === 'SUCCESS') {\n      const email = (e.callbackData as any).profile.email;\n      setValue('server.connectedGmailAccount', email);\n      toast(message('Connected gmail account: :email', {values: {email}}));\n    }\n  };\n\n  const connectButton = (\n    <Button\n      variant=\"outline\"\n      color=\"primary\"\n      startIcon={<GmailIcon />}\n      onClick={() => handleGmailConnect()}\n    >\n      <Trans message=\"Connect gmail account\" />\n    </Button>\n  );\n\n  const reconnectPanel = (\n    <div className=\"flex items-center gap-14 rounded border bg-alt px-14 py-6 text-sm\">\n      <GmailIcon size=\"lg\" />\n      {connectedEmail}\n      <Button\n        variant=\"text\"\n        color=\"primary\"\n        className=\"ml-auto\"\n        onClick={() => handleGmailConnect()}\n      >\n        <Trans message=\"Reconnect\" />\n      </Button>\n    </div>\n  );\n\n  return (\n    <Fragment>\n      <div className=\"mb-6 text-sm\">\n        <Trans message=\"Gmail account\" />\n      </div>\n      {connectedEmail ? reconnectPanel : connectButton}\n    </Fragment>\n  );\n}\n","import {useFormContext} from 'react-hook-form';\nimport {AdminSettings} from '@common/admin/settings/admin-settings';\nimport {ComponentType, Fragment} from 'react';\nimport {MailgunCredentials} from './mailgun-credentials';\nimport {SmtpCredentials} from './smtp-credentials';\nimport {SesCredentials} from './ses-credentials';\nimport {PostmarkCredentials} from './postmark-credentials';\nimport {ConnectGmailPanel} from './connect-gmail-panel';\nimport {FormSelect, Option} from '@ui/forms/select/select';\nimport {Trans} from '@ui/i18n/trans';\nimport {SettingsErrorGroup} from '@common/admin/settings/form/settings-error-group';\nimport {LearnMoreLink} from '@common/admin/settings/form/learn-more-link';\n\nexport function OutgoingMailGroup() {\n  const {watch, clearErrors} = useFormContext<AdminSettings>();\n\n  const selectedDriver = watch('server.mail_driver');\n  const credentialForms: ComponentType<{isInvalid: boolean}>[] = [];\n\n  if (selectedDriver === 'mailgun') {\n    credentialForms.push(MailgunCredentials);\n  }\n  if (selectedDriver === 'smtp') {\n    credentialForms.push(SmtpCredentials);\n  }\n  if (selectedDriver === 'ses') {\n    credentialForms.push(SesCredentials);\n  }\n  if (selectedDriver === 'postmark') {\n    credentialForms.push(PostmarkCredentials);\n  }\n  if (selectedDriver === 'gmailApi') {\n    credentialForms.push(ConnectGmailPanel);\n  }\n\n  return (\n    <SettingsErrorGroup\n      separatorTop={false}\n      separatorBottom={false}\n      name=\"mail_group\"\n    >\n      {isInvalid => (\n        <Fragment>\n          <FormSelect\n            onSelectionChange={() => {\n              clearErrors();\n            }}\n            invalid={isInvalid}\n            selectionMode=\"single\"\n            name=\"server.mail_driver\"\n            label={<Trans message=\"Outgoing mail method\" />}\n            description={\n              <div>\n                <Trans message=\"Which method should be used for sending outgoing application emails (like registration confirmation)\" />\n                <LearnMoreLink\n                  className=\"mt-8\"\n                  link=\"https://support.vebto.com/hc/articles/42/44/76/outgoing-emails\"\n                />\n              </div>\n            }\n          >\n            <Option value=\"mailgun\">Mailgun</Option>\n            <Option value=\"gmailApi\">Gmail Api</Option>\n            <Option value=\"smtp\">SMTP</Option>\n            <Option value=\"postmark\">Postmark</Option>\n            <Option value=\"ses\">Ses (Amazon Simple Email Service)</Option>\n            <Option value=\"sendmail\">SendMail</Option>\n            <Option value=\"log\">Log (Email will be saved to error log)</Option>\n          </FormSelect>\n          {credentialForms.length ? (\n            <div className=\"mt-30\">\n              {credentialForms.map((CredentialsForm, index) => (\n                <CredentialsForm key={index} isInvalid={isInvalid} />\n              ))}\n            </div>\n          ) : null}\n        </Fragment>\n      )}\n    </SettingsErrorGroup>\n  );\n}\n","import {FormTextField} from '@ui/forms/input-field/text-field/text-field';\nimport {ExternalLink} from '@ui/buttons/external-link';\nimport {SectionHelper} from '@common/ui/other/section-helper';\nimport {Trans} from '@ui/i18n/trans';\nimport {OutgoingMailGroup} from './outgoing-mail-group';\nimport {useSettings} from '@ui/settings/use-settings';\nimport {\n  AdminSettingsForm,\n  AdminSettingsLayout,\n} from '@common/admin/settings/form/admin-settings-form';\nimport {SettingsSeparator} from '@common/admin/settings/form/settings-separator';\nimport React from 'react';\nimport {AdminSettings} from '@common/admin/settings/admin-settings';\nimport {useForm} from 'react-hook-form';\n\nexport function OutgoingEmailSettings() {\n  return (\n    <AdminSettingsLayout\n      title={<Trans message=\"Outgoing email settings\" />}\n      description={\n        <Trans message=\"Change outgoing email handlers, email credentials and other related settings.\" />\n      }\n    >\n      {data => <Form data={data} />}\n    </AdminSettingsLayout>\n  );\n}\n\ninterface FormProps {\n  data: AdminSettings;\n}\nfunction Form({data}: FormProps) {\n  const form = useForm<AdminSettings>({\n    defaultValues: {\n      server: {\n        mail_from_address: data.server.mail_from_address ?? '',\n        mail_from_name: data.server.mail_from_name ?? '',\n        mail_driver: data.server.mail_driver ?? '',\n        mailgun_domain: data.server.mailgun_domain ?? '',\n        mailgun_secret: data.server.mailgun_secret ?? '',\n        mailgun_endpoint: data.server.mailgun_endpoint ?? '',\n        mail_host: data.server.mail_host ?? '',\n        mail_username: data.server.mail_username ?? '',\n        mail_password: data.server.mail_password ?? '',\n        mail_port: data.server.mail_port ?? '',\n        mail_encryption: data.server.mail_encryption ?? '',\n        ses_key: data.server.ses_key ?? '',\n        ses_secret: data.server.ses_secret ?? '',\n        ses_region: data.server.ses_region ?? '',\n        postmark_token: data.server.postmark_token ?? '',\n        connectedGmailAccount: data.server.connectedGmailAccount ?? '',\n      },\n      client: {\n        mail: {\n          contact_page_address: data.client.mail?.contact_page_address ?? '',\n        },\n      },\n    },\n  });\n\n  return (\n    <AdminSettingsForm form={form}>\n      <FormTextField\n        id=\"outgoing-emails\"\n        className=\"mb-30\"\n        type=\"email\"\n        name=\"server.mail_from_address\"\n        label={<Trans message=\"From address\" />}\n        description={\n          <Trans message=\"All outgoing application emails will be sent from this email address.\" />\n        }\n        required\n      />\n      <ContactAddressSection />\n      <FormTextField\n        className=\"mb-30\"\n        name=\"server.mail_from_name\"\n        label={<Trans message=\"From name\" />}\n        description={\n          <Trans message=\"All outgoing application emails will be sent using this name.\" />\n        }\n        required\n      />\n      <SectionHelper\n        color=\"warning\"\n        description={\n          <Trans message=\"Your selected mail method must be authorized to send emails using this address and name.\" />\n        }\n      />\n      <SettingsSeparator />\n      <OutgoingMailGroup />\n    </AdminSettingsForm>\n  );\n}\n\nfunction ContactAddressSection() {\n  const {base_url} = useSettings();\n  const contactPageUrl = `${base_url}/contact`;\n  const link = (\n    <ExternalLink href={contactPageUrl}>{contactPageUrl}</ExternalLink>\n  );\n  return (\n    <FormTextField\n      className=\"mb-30\"\n      type=\"email\"\n      name=\"client.mail.contact_page_address\"\n      label={<Trans message=\"Contact page address\" />}\n      description={\n        <Trans\n          values={{\n            contactPageUrl: link,\n          }}\n          message=\"Where emails from :contactPageUrl page should be sent to.\"\n        />\n      }\n    />\n  );\n}\n","import {useMutation} from '@tanstack/react-query';\nimport {toast} from '@ui/toast/toast';\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\nimport {message} from '@ui/i18n/message';\nimport {apiClient} from '@common/http/query-client';\nimport {showHttpErrorToast} from '@common/http/show-http-error-toast';\n\ninterface Response extends BackendResponse {}\n\nfunction clearCache(): Promise<Response> {\n  return apiClient.post('cache/flush').then(r => r.data);\n}\n\nexport function useClearCache() {\n  return useMutation({\n    mutationFn: () => clearCache(),\n    onSuccess: () => {\n      toast(message('Cache cleared'));\n    },\n    onError: err => showHttpErrorToast(err),\n  });\n}\n","import {useForm, useFormContext} from 'react-hook-form';\nimport React, {ComponentType, Fragment} from 'react';\nimport {FormSelect, Option} from '@ui/forms/select/select';\nimport {SettingsErrorGroup} from '@common/admin/settings/form/settings-error-group';\nimport {FormTextField} from '@ui/forms/input-field/text-field/text-field';\nimport {AdminSettings} from '@common/admin/settings/admin-settings';\nimport {useClearCache} from '@common/admin/settings/pages/cache-settings/clear-cache';\nimport {Button} from '@ui/buttons/button';\nimport {SectionHelper} from '@common/ui/other/section-helper';\nimport {Trans} from '@ui/i18n/trans';\nimport {\n  AdminSettingsForm,\n  AdminSettingsLayout,\n} from '@common/admin/settings/form/admin-settings-form';\n\nexport function CacheSettings() {\n  return (\n    <AdminSettingsLayout\n      title={<Trans message=\"Cache settings\" />}\n      description={\n        <Trans message=\"Select cache provider and manually clear cache.\" />\n      }\n    >\n      {data => <Form data={data} />}\n    </AdminSettingsLayout>\n  );\n}\n\ninterface FormProps {\n  data: AdminSettings;\n}\nfunction Form({data}: FormProps) {\n  const clearCache = useClearCache();\n  const form = useForm<AdminSettings>({\n    defaultValues: {\n      server: {\n        cache_driver: data.server.cache_driver ?? 'file',\n        memcached_host: data.server.memcached_host ?? '',\n        memcached_port: data.server.memcached_port ?? '',\n      },\n    },\n  });\n\n  return (\n    <AdminSettingsForm form={form}>\n      <CacheSelect />\n      <Button\n        type=\"button\"\n        variant=\"outline\"\n        size=\"xs\"\n        color=\"primary\"\n        disabled={clearCache.isPending}\n        onClick={() => clearCache.mutate()}\n      >\n        <Trans message=\"Clear cache\" />\n      </Button>\n      <SectionHelper\n        color=\"warning\"\n        className=\"mt-30\"\n        description={\n          <Trans\n            message={\n              '\"File\" is the best option for most cases and should not be changed, unless you are familiar with another cache method and have it set up on the server already.'\n            }\n          />\n        }\n      />\n    </AdminSettingsForm>\n  );\n}\n\nfunction CacheSelect() {\n  const {watch, clearErrors} = useFormContext<AdminSettings>();\n  const cacheDriver = watch('server.cache_driver');\n\n  let CredentialSection: ComponentType<CredentialProps> | null = null;\n  if (cacheDriver === 'memcached') {\n    CredentialSection = MemcachedCredentials;\n  }\n\n  return (\n    <SettingsErrorGroup separatorTop={false} name=\"cache_group\">\n      {isInvalid => {\n        return (\n          <>\n            <FormSelect\n              invalid={isInvalid}\n              onSelectionChange={() => clearErrors()}\n              selectionMode=\"single\"\n              name=\"server.cache_driver\"\n              label={<Trans message=\"Cache method\" />}\n              description={\n                <Trans message=\"Which method should be used for storing and retrieving cached items.\" />\n              }\n            >\n              <Option value=\"file\">\n                <Trans message=\"File (Default)\" />\n              </Option>\n              <Option value=\"array\">\n                <Trans message=\"None\" />\n              </Option>\n              <Option value=\"apc\">APC</Option>\n              <Option value=\"memcached\">Memcached</Option>\n              <Option value=\"redis\">Redis</Option>\n            </FormSelect>\n            {CredentialSection && (\n              <div className=\"mt-30\">\n                <CredentialSection isInvalid={isInvalid} />\n              </div>\n            )}\n          </>\n        );\n      }}\n    </SettingsErrorGroup>\n  );\n}\n\ninterface CredentialProps {\n  isInvalid: boolean;\n}\nfunction MemcachedCredentials({isInvalid}: CredentialProps) {\n  return (\n    <>\n      <FormTextField\n        invalid={isInvalid}\n        className=\"mb-30\"\n        name=\"server.memcached_host\"\n        label={<Trans message=\"Memcached host\" />}\n        required\n      />\n      <FormTextField\n        invalid={isInvalid}\n        type=\"number\"\n        name=\"server.memcached_port\"\n        label={<Trans message=\"Memcached port\" />}\n        required\n      />\n    </>\n  );\n}\n","import {useForm, useFormContext} from 'react-hook-form';\nimport {SettingsErrorGroup} from '@common/admin/settings/form/settings-error-group';\nimport {FormTextField} from '@ui/forms/input-field/text-field/text-field';\nimport {SectionHelper} from '@common/ui/other/section-helper';\nimport {ExternalLink} from '@ui/buttons/external-link';\nimport {Trans} from '@ui/i18n/trans';\nimport {\n  AdminSettingsForm,\n  AdminSettingsLayout,\n} from '@common/admin/settings/form/admin-settings-form';\nimport React from 'react';\nimport {AdminSettings} from '@common/admin/settings/admin-settings';\n\nexport function LoggingSettings() {\n  return (\n    <AdminSettingsLayout\n      title={<Trans message=\"Error logging\" />}\n      description={\n        <Trans message=\"Configure site error logging and related 3rd party integrations.\" />\n      }\n    >\n      {data => <Form data={data} />}\n    </AdminSettingsLayout>\n  );\n}\n\ninterface FormProps {\n  data: AdminSettings;\n}\nfunction Form({data}: FormProps) {\n  const form = useForm<AdminSettings>({\n    defaultValues: {\n      server: {\n        sentry_dsn: data.server.sentry_dsn ?? '',\n      },\n    },\n  });\n\n  return (\n    <AdminSettingsForm form={form}>\n      <SentrySection />\n      <SectionHelper\n        className=\"mt-30\"\n        color=\"positive\"\n        description={\n          <Trans\n            values={{\n              a: parts => (\n                <ExternalLink href=\"https://sentry.io\">{parts}</ExternalLink>\n              ),\n            }}\n            message=\"<a>Sentry</a> integration provides real-time error tracking and helps identify and fix issues when site is in production.\"\n          />\n        }\n      />\n    </AdminSettingsForm>\n  );\n}\n\nfunction SentrySection() {\n  const {clearErrors} = useFormContext();\n  return (\n    <SettingsErrorGroup\n      separatorTop={false}\n      separatorBottom={false}\n      name=\"logging_group\"\n    >\n      {isInvalid => {\n        return (\n          <FormTextField\n            onChange={() => clearErrors()}\n            invalid={isInvalid}\n            name=\"server.sentry_dsn\"\n            type=\"url\"\n            minLength={30}\n            label={<Trans message=\"Sentry DSN\" />}\n          />\n        );\n      }}\n    </SettingsErrorGroup>\n  );\n}\n","import {useQuery} from '@tanstack/react-query';\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\nimport {apiClient} from '@common/http/query-client';\n\ninterface Response extends BackendResponse {\n  failedJobs: number;\n  jobsPerMinute: number;\n  pausedMasters: number;\n  periods: {\n    failedJobs: number;\n    recentJobs: number;\n  };\n  processes: number;\n  queueWithMaxRuntime?: string;\n  queueWithMaxThroughput?: string;\n  recentJobs: number;\n  status: 'running' | 'inactive' | 'paused';\n}\n\nexport function useQueueStats() {\n  return useQuery({\n    queryKey: ['queue-stats'],\n    queryFn: () => fetchStats(),\n    refetchInterval: 5000, // Poll every 5s\n  });\n}\n\nfunction fetchStats() {\n  return apiClient\n    .get<Response>('horizon/api/stats')\n    .then(response => response.data);\n}\n","import {useForm, useFormContext} from 'react-hook-form';\nimport React, {ComponentType, Fragment} from 'react';\nimport {AdminSettings} from '../admin-settings';\nimport {FormSelect, Option} from '@ui/forms/select/select';\nimport {FormTextField} from '@ui/forms/input-field/text-field/text-field';\nimport {Trans} from '@ui/i18n/trans';\nimport {useQueueStats} from '@common/admin/settings/requests/use-queue-stats';\nimport clsx from 'clsx';\nimport {useSettings} from '@ui/settings/use-settings';\nimport {Button} from '@ui/buttons/button';\nimport {OpenInNewIcon} from '@ui/icons/material/OpenInNew';\nimport {\n  AdminSettingsForm,\n  AdminSettingsLayout,\n} from '@common/admin/settings/form/admin-settings-form';\nimport {LearnMoreLink} from '@common/admin/settings/form/learn-more-link';\nimport {SettingsErrorGroup} from '@common/admin/settings/form/settings-error-group';\n\nexport function QueueSettings() {\n  return (\n    <AdminSettingsLayout\n      title={<Trans message=\"Queue\" />}\n      description={\n        <Fragment>\n          <Trans message=\"Queues allow to defer time consuming tasks, such as sending an email, until a later time. They are fully optional and do not provide any additional functionality.\" />\n          <LearnMoreLink\n            className=\"mt-6 text-sm\"\n            link=\"https://support.vebto.com/hc/articles/224/queues\"\n          />\n        </Fragment>\n      }\n    >\n      {data => <Form data={data} />}\n    </AdminSettingsLayout>\n  );\n}\n\ninterface FormProps {\n  data: AdminSettings;\n}\nfunction Form({data}: FormProps) {\n  const form = useForm<AdminSettings>({\n    defaultValues: {\n      server: {\n        queue_driver: data.server.queue_driver ?? 'sync',\n        sqs_queue_key: data.server.sqs_queue_key ?? '',\n        sqs_queue_secret: data.server.sqs_queue_secret ?? '',\n        sqs_queue_prefix: data.server.sqs_queue_prefix ?? '',\n        sqs_queue_name: data.server.sqs_queue_name ?? '',\n        sqs_queue_region: data.server.sqs_queue_region ?? '',\n      },\n    },\n  });\n\n  const selectedDriver = form.watch('server.queue_driver');\n\n  return (\n    <AdminSettingsForm form={form}>\n      {selectedDriver !== 'sync' && <StatusWidget />}\n      <DriverSection />\n    </AdminSettingsForm>\n  );\n}\n\nfunction StatusWidget() {\n  const {base_url} = useSettings();\n  const {data} = useQueueStats();\n  const status = data?.status;\n\n  return (\n    <div className=\"mb-30 flex h-32 items-center justify-between gap-14\">\n      {status && (\n        <Fragment>\n          <div\n            className={clsx(\n              'min-w-108 flex w-max items-center gap-8 rounded-button px-10 py-4 text-sm capitalize',\n              status === 'running' && 'bg-positive-lighter',\n              status === 'inactive' && 'bg-danger-lighter',\n              status === 'paused' && 'bg-chip',\n            )}\n          >\n            <div\n              className={clsx(\n                'h-10 w-10 rounded-full',\n                status === 'running' && 'bg-positive',\n                status === 'inactive' && 'bg-danger',\n                status === 'paused' && 'bg-chip',\n              )}\n            />\n            <Trans message={`Worker ${status}`} />\n          </div>\n          <Button\n            variant=\"outline\"\n            size=\"xs\"\n            elementType=\"a\"\n            href={`${base_url}/horizon`}\n            target=\"_blank\"\n            endIcon={<OpenInNewIcon />}\n          >\n            <Trans message=\"Monitor\" />\n          </Button>\n        </Fragment>\n      )}\n    </div>\n  );\n}\n\nfunction DriverSection() {\n  const {watch, clearErrors} = useFormContext<AdminSettings>();\n  const queueDriver = watch('server.queue_driver');\n\n  let CredentialSection: ComponentType<CredentialProps> | null = null;\n  if (queueDriver === 'sqs') {\n    CredentialSection = SqsCredentials;\n  }\n  return (\n    <SettingsErrorGroup\n      separatorTop={false}\n      separatorBottom={false}\n      name=\"queue_group\"\n    >\n      {isInvalid => {\n        return (\n          <>\n            <FormSelect\n              invalid={isInvalid}\n              onSelectionChange={() => {\n                clearErrors();\n              }}\n              selectionMode=\"single\"\n              name=\"server.queue_driver\"\n              label={<Trans message=\"Queue method\" />}\n              required\n            >\n              <Option value=\"sync\">\n                <Trans message=\"None (Default)\" />\n              </Option>\n              <Option value=\"beanstalkd\">Beanstalkd</Option>\n              <Option value=\"database\">\n                <Trans message=\"Database\" />\n              </Option>\n              <Option value=\"sqs\">\n                <Trans message=\"SQS (Amazon simple queue service)\" />\n              </Option>\n              <Option value=\"redis\">Redis</Option>\n            </FormSelect>\n            {CredentialSection && (\n              <div className=\"mt-30\">\n                <CredentialSection isInvalid={isInvalid} />\n              </div>\n            )}\n          </>\n        );\n      }}\n    </SettingsErrorGroup>\n  );\n}\n\ninterface CredentialProps {\n  isInvalid: boolean;\n}\nfunction SqsCredentials({isInvalid}: CredentialProps) {\n  return (\n    <>\n      <FormTextField\n        invalid={isInvalid}\n        className=\"mb-30\"\n        name=\"server.sqs_queue_key\"\n        label={<Trans message=\"SQS queue key\" />}\n        required\n      />\n      <FormTextField\n        invalid={isInvalid}\n        className=\"mb-30\"\n        name=\"server.sqs_queue_secret\"\n        label={<Trans message=\"SQS queue secret\" />}\n        required\n      />\n      <FormTextField\n        invalid={isInvalid}\n        className=\"mb-30\"\n        name=\"server.sqs_queue_prefix\"\n        label={<Trans message=\"SQS queue prefix\" />}\n        required\n      />\n      <FormTextField\n        invalid={isInvalid}\n        className=\"mb-30\"\n        name=\"server.sqs_queue_name\"\n        label={<Trans message=\"SQS queue name\" />}\n        required\n      />\n      <FormTextField\n        invalid={isInvalid}\n        className=\"mb-30\"\n        name=\"server.sqs_queue_region\"\n        label={<Trans message=\"SQS queue region\" />}\n        required\n      />\n    </>\n  );\n}\n","import {useForm, useFormContext, useWatch} from 'react-hook-form';\nimport React, {ComponentType, Fragment} from 'react';\nimport {AdminSettings} from '../admin-settings';\nimport {FormSelect, Option} from '@ui/forms/select/select';\nimport {FormTextField} from '@ui/forms/input-field/text-field/text-field';\nimport {Trans} from '@ui/i18n/trans';\nimport {\n  AdminSettingsForm,\n  AdminSettingsLayout,\n} from '@common/admin/settings/form/admin-settings-form';\nimport {LearnMoreLink} from '@common/admin/settings/form/learn-more-link';\nimport {SettingsErrorGroup} from '@common/admin/settings/form/settings-error-group';\n\nexport function WebsocketSettings() {\n  return (\n    <AdminSettingsLayout\n      title={<Trans message=\"Websockets\" />}\n      description={\n        <Fragment>\n          <Trans message=\"Configure websockets provider responsible for all realtime functionality on the site.\" />\n          <LearnMoreLink\n            className=\"mt-6 text-sm\"\n            link=\"https://support.vebto.com/hc/articles/224/queues\"\n          />\n        </Fragment>\n      }\n    >\n      {data => <Form data={data} />}\n    </AdminSettingsLayout>\n  );\n}\n\ninterface FormProps {\n  data: AdminSettings;\n}\nfunction Form({data}: FormProps) {\n  const form = useForm<AdminSettings>({\n    defaultValues: {\n      server: {\n        broadcast_driver: data.server.broadcast_driver ?? 'null',\n\n        // pusher\n        pusher_app_id: data.server.pusher_app_id ?? '',\n        pusher_app_key: data.server.pusher_app_key ?? '',\n        pusher_app_secret: data.server.pusher_app_secret ?? '',\n        pusher_app_cluster: data.server.pusher_app_cluster ?? '',\n\n        // reverb\n        reverb_app_id: data.server.reverb_app_id ?? '',\n        reverb_app_key: data.server.reverb_app_key ?? '',\n        reverb_app_secret: data.server.reverb_app_secret ?? '',\n        reverb_host: data.server.reverb_host ?? '',\n        reverb_port: data.server.reverb_port ?? '',\n        reverb_scheme: data.server.reverb_scheme ?? 'https',\n\n        // ably\n        ably_app_id: data.server.ably_app_id ?? '',\n        ably_app_key: data.server.ably_app_key ?? '',\n        ably_app_secret: data.server.ably_app_secret ?? '',\n      },\n    },\n  });\n\n  return (\n    <AdminSettingsForm form={form}>\n      <DriverSection />\n    </AdminSettingsForm>\n  );\n}\n\nfunction DriverSection() {\n  const {clearErrors, control} = useFormContext<AdminSettings>();\n  const driver = useWatch({\n    control,\n    name: 'server.broadcast_driver',\n  });\n\n  let CredentialSection: ComponentType<CredentialsProps> | null = null;\n  if (driver === 'pusher') {\n    CredentialSection = PusherFields;\n  } else if (driver === 'ably') {\n    CredentialSection = AblyFields;\n  }\n  return (\n    <SettingsErrorGroup\n      separatorTop={false}\n      separatorBottom={false}\n      name=\"queue_group\"\n    >\n      {isInvalid => (\n        <Fragment>\n          <FormSelect\n            invalid={isInvalid}\n            onSelectionChange={() => clearErrors()}\n            selectionMode=\"single\"\n            name=\"server.broadcast_driver\"\n            label={<Trans message=\"Websockets provider\" />}\n            required\n          >\n            <Option value=\"null\">\n              <Trans message=\"None (Disabled)\" />\n            </Option>\n            <Option value=\"reverb\">Local</Option>\n            <Option value=\"pusher\">Pusher</Option>\n            <Option value=\"ably\">\n              <Trans message=\"Ably\" />\n            </Option>\n          </FormSelect>\n          {CredentialSection && (\n            <div className=\"mt-30\">\n              <CredentialSection isInvalid={isInvalid} />\n            </div>\n          )}\n        </Fragment>\n      )}\n    </SettingsErrorGroup>\n  );\n}\n\ninterface CredentialsProps {\n  isInvalid: boolean;\n}\nfunction PusherFields({isInvalid}: CredentialsProps) {\n  return (\n    <Fragment>\n      <FormTextField\n        name=\"server.pusher_app_id\"\n        label={<Trans message=\"Pusher app ID\" />}\n        className=\"mb-30\"\n        required\n      />\n      <FormTextField\n        name=\"server.pusher_app_key\"\n        label={<Trans message=\"Pusher app key\" />}\n        className=\"mb-30\"\n        required\n      />\n      <FormTextField\n        name=\"server.pusher_app_secret\"\n        label={<Trans message=\"Pusher app secret\" />}\n        className=\"mb-30\"\n        required\n      />\n      <FormTextField\n        name=\"server.pusher_app_cluster\"\n        label={<Trans message=\"Pusher app cluster\" />}\n        className=\"mb-30\"\n        placeholder=\"mt1\"\n        required\n      />\n    </Fragment>\n  );\n}\n\nfunction AblyFields({isInvalid}: CredentialsProps) {\n  return (\n    <Fragment>\n      <FormTextField\n        name=\"server.ably_app_id\"\n        label={<Trans message=\"Ably app ID\" />}\n        className=\"mb-30\"\n        required\n      />\n      <FormTextField\n        name=\"server.ably_app_key\"\n        label={<Trans message=\"Ably app key\" />}\n        className=\"mb-30\"\n        required\n      />\n      <FormTextField\n        name=\"server.ably_app_secret\"\n        label={<Trans message=\"Ably app secret\" />}\n        className=\"mb-30\"\n        required\n      />\n    </Fragment>\n  );\n}\n","import {useForm, useFormContext} from 'react-hook-form';\nimport React, {Fragment, useContext} from 'react';\nimport {FormTextField} from '@ui/forms/input-field/text-field/text-field';\nimport {FormSwitch} from '@ui/forms/toggle/switch';\nimport {SiteConfigContext} from '@common/core/settings/site-config-context';\nimport {Trans} from '@ui/i18n/trans';\nimport {\n  AdminSettingsForm,\n  AdminSettingsLayout,\n} from '@common/admin/settings/form/admin-settings-form';\nimport {SettingsErrorGroup} from '@common/admin/settings/form/settings-error-group';\nimport {AdminSettings} from '@common/admin/settings/admin-settings';\n\nexport function RecaptchaSettings() {\n  return (\n    <AdminSettingsLayout\n      title={<Trans message=\"Recaptcha\" />}\n      description={\n        <Trans message=\"Configure google recaptcha integration and credentials.\" />\n      }\n    >\n      {data => <Form data={data} />}\n    </AdminSettingsLayout>\n  );\n}\n\ninterface FormProps {\n  data: AdminSettings;\n}\nfunction Form({data}: FormProps) {\n  const {settings} = useContext(SiteConfigContext);\n  const form = useForm<AdminSettings>({\n    defaultValues: {\n      client: {\n        recaptcha: {\n          enable: {\n            link_creation:\n              data.client.recaptcha?.enable?.link_creation ?? false,\n            contact: data.client.recaptcha?.enable?.contact ?? false,\n            register: data.client.recaptcha?.enable?.register ?? false,\n          },\n          site_key: data.client.recaptcha?.site_key ?? '',\n          secret_key: data.client.recaptcha?.secret_key ?? '',\n        },\n      },\n    },\n  });\n\n  return (\n    <AdminSettingsForm form={form}>\n      {settings?.showRecaptchaLinkSwitch && (\n        <FormSwitch\n          className=\"mb-30\"\n          name=\"client.recaptcha.enable.link_creation\"\n          description={\n            <Trans message=\"Enable recaptcha integration when creating links from homepage or user dashboard.\" />\n          }\n        >\n          <Trans message=\"Link creation\" />\n        </FormSwitch>\n      )}\n      <FormSwitch\n        className=\"mb-30\"\n        name=\"client.recaptcha.enable.contact\"\n        description={\n          <Trans\n            message={'Enable recaptcha integration for \"contact us\" page.'}\n          />\n        }\n      >\n        <Trans message=\"Contact page\" />\n      </FormSwitch>\n      <FormSwitch\n        className=\"mb-30\"\n        name=\"client.recaptcha.enable.register\"\n        description={\n          <Trans message=\"Enable recaptcha integration for registration page.\" />\n        }\n      >\n        <Trans message=\"Registration page\" />\n      </FormSwitch>\n      <RecaptchaSection />\n    </AdminSettingsForm>\n  );\n}\n\nfunction RecaptchaSection() {\n  const {clearErrors} = useFormContext();\n  return (\n    <SettingsErrorGroup\n      separatorTop={false}\n      separatorBottom={false}\n      name=\"recaptcha_group\"\n    >\n      {isInvalid => {\n        return (\n          <>\n            <FormTextField\n              className=\"mb-30\"\n              onChange={() => {\n                clearErrors();\n              }}\n              invalid={isInvalid}\n              name=\"client.recaptcha.site_key\"\n              label={<Trans message=\"Recaptcha v3 site key\" />}\n            />\n            <FormTextField\n              onChange={() => {\n                clearErrors();\n              }}\n              invalid={isInvalid}\n              name=\"client.recaptcha.secret_key\"\n              label={<Trans message=\"Recaptcha v3 secret key\" />}\n            />\n          </>\n        );\n      }}\n    </SettingsErrorGroup>\n  );\n}\n","import React, {ChangeEventHandler} from 'react';\nimport {mergeProps, useObjectRef} from '@react-aria/utils';\nimport {useController} from 'react-hook-form';\nimport clsx from 'clsx';\nimport {BaseFieldProps} from './base-field-props';\nimport {useField} from './use-field';\nimport {getInputFieldClassNames} from './get-input-field-class-names';\nimport {Field} from './field';\nimport {TextFieldProps} from './text-field/text-field';\n\nexport interface FileFieldProps\n  extends Omit<BaseFieldProps, 'type'> {\n  onChange?: ChangeEventHandler<'input'>;\n  accept?: string;\n}\nexport const FileField = React.forwardRef<HTMLInputElement, FileFieldProps>(\n  (props, ref) => {\n    const inputRef = useObjectRef(ref);\n\n    const {fieldProps, inputProps} = useField({...props, focusRef: inputRef});\n\n    const inputFieldClassNames = getInputFieldClassNames(props);\n\n    return (\n      <Field ref={ref} fieldClassNames={inputFieldClassNames} {...fieldProps}>\n        <input\n          type=\"file\"\n          ref={inputRef}\n          {...inputProps as any}\n          className={clsx(\n            inputFieldClassNames.input,\n            'py-8',\n            'file:bg-primary file:text-on-primary file:border-none file:rounded file:text-sm file:font-semibold file:px-10 file:h-24 file:mr-10'\n          )}\n        />\n      </Field>\n    );\n  }\n);\n\nexport interface FormFileFieldProps extends FileFieldProps {\n  name: string;\n}\nexport function FormFileField({name, ...props}: FormFileFieldProps) {\n  const {\n    field: {onChange, onBlur, ref},\n    fieldState: {invalid, error},\n  } = useController({\n    name,\n  });\n\n  const [value, setValue] = React.useState('');\n\n  const formProps: TextFieldProps = {\n    onChange: e => {\n      onChange(e.target.files?.[0]);\n      setValue(e.target.value);\n    },\n    onBlur,\n    value,\n    invalid,\n    errorMessage: error?.message,\n  };\n\n  return <FileField ref={ref} {...mergeProps(formProps, props)} />;\n}\n","import {useForm, useFormContext} from 'react-hook-form';\nimport {FormTextField} from '@ui/forms/input-field/text-field/text-field';\nimport {FormFileField} from '@ui/forms/input-field/file-field';\nimport {Trans} from '@ui/i18n/trans';\nimport React, {Fragment} from 'react';\nimport {\n  AdminSettingsForm,\n  AdminSettingsLayout,\n} from '@common/admin/settings/form/admin-settings-form';\nimport {SettingsErrorGroup} from '@common/admin/settings/form/settings-error-group';\nimport {AdminSettings} from '@common/admin/settings/admin-settings';\n\nexport function ReportsSettings() {\n  return (\n    <AdminSettingsLayout\n      title={<Trans message=\"Analytics\" />}\n      description={\n        <Trans message=\"Configure google analytics integration and credentials.\" />\n      }\n    >\n      {data => <Form data={data} />}\n    </AdminSettingsLayout>\n  );\n}\n\ninterface FormProps {\n  data: AdminSettings;\n}\nfunction Form({data}: FormProps) {\n  const form = useForm<AdminSettings>({\n    defaultValues: {\n      files: {\n        certificate: '',\n      },\n      server: {\n        analytics_property_id: data.server.analytics_property_id ?? '',\n      },\n      client: {\n        analytics: {\n          tracking_code: data.client.analytics?.tracking_code ?? '',\n          gchart_api_key: data.client.analytics?.gchart_api_key ?? '',\n        },\n      },\n    },\n  });\n\n  return (\n    <AdminSettingsForm form={form}>\n      <AnalyticsSection />\n    </AdminSettingsForm>\n  );\n}\n\nfunction AnalyticsSection() {\n  const {clearErrors} = useFormContext();\n  return (\n    <SettingsErrorGroup\n      separatorTop={false}\n      separatorBottom={false}\n      name=\"analytics_group\"\n    >\n      {isInvalid => (\n        <Fragment>\n          <FormFileField\n            className=\"mb-30\"\n            onChange={() => clearErrors()}\n            invalid={isInvalid}\n            name=\"files.certificate\"\n            accept=\".json\"\n            label={<Trans message=\"Google service account key file (.json)\" />}\n          />\n          <FormTextField\n            className=\"mb-30\"\n            onChange={() => clearErrors()}\n            invalid={isInvalid}\n            name=\"server.analytics_property_id\"\n            type=\"number\"\n            label={<Trans message=\"Google analytics property ID\" />}\n          />\n          <FormTextField\n            className=\"mb-30\"\n            onChange={() => clearErrors()}\n            invalid={isInvalid}\n            name=\"client.analytics.tracking_code\"\n            placeholder=\"G-******\"\n            min=\"1\"\n            max=\"20\"\n            description={\n              <Trans message=\"Google analytics measurement ID only, not the whole javascript snippet.\" />\n            }\n            label={<Trans message=\"Google tag manager measurement ID\" />}\n          />\n          <FormTextField\n            name=\"client.analytics.gchart_api_key\"\n            label={<Trans message=\"Google maps javascript API key\" />}\n            description={\n              <Trans message=\"Only required in order to show world geochart on integrated analytics pages.\" />\n            }\n          />\n        </Fragment>\n      )}\n    </SettingsErrorGroup>\n  );\n}\n","import {useCallback, useRef, useState} from 'react';\n\nexport function useStickySentinel() {\n  const [isSticky, setIsSticky] = useState(false);\n\n  const observerRef = useRef<IntersectionObserver>();\n\n  const sentinelRef = useCallback((sentinel: HTMLDivElement | null) => {\n    if (sentinel) {\n      const observer = new IntersectionObserver(\n        ([e]) => setIsSticky(e.intersectionRatio < 1),\n        {threshold: [1]}\n      );\n      observerRef.current = observer;\n      observer.observe(sentinel);\n    } else if (observerRef.current) {\n      observerRef.current?.disconnect();\n    }\n  }, []);\n\n  return {isSticky, sentinelRef};\n}\n","import {\n  FieldValues,\n  SubmitHandler,\n  useFormContext,\n  UseFormReturn,\n} from 'react-hook-form';\nimport clsx from 'clsx';\nimport React, {Fragment, ReactElement, ReactNode} from 'react';\nimport {useStickySentinel} from '@ui/utils/hooks/sticky-sentinel';\nimport {Form} from '@ui/forms/form';\nimport {Button} from '@ui/buttons/button';\nimport {Trans} from '@ui/i18n/trans';\nimport {AnimatePresence, m} from 'framer-motion';\n\ninterface Props<T extends FieldValues> {\n  onSubmit: SubmitHandler<T>;\n  form: UseFormReturn<T>;\n  title: ReactNode;\n  subTitle?: ReactNode;\n  isLoading: boolean;\n  children: ReactNode;\n  actions?: ReactNode;\n  backButton?: ReactNode;\n  disableSaveWhenNotDirty?: boolean;\n  wrapInContainer?: boolean;\n  submitButtonText?: ReactNode;\n  variant?: 'popup' | 'sticky';\n}\nexport function CrupdateResourceLayout<T extends FieldValues>({\n  onSubmit,\n  form,\n  title,\n  subTitle,\n  children,\n  actions,\n  backButton,\n  isLoading = false,\n  disableSaveWhenNotDirty = false,\n  wrapInContainer = true,\n  submitButtonText,\n  variant = 'sticky',\n}: Props<T>) {\n  const {isSticky, sentinelRef} = useStickySentinel();\n  const isDirty = !disableSaveWhenNotDirty\n    ? true\n    : Object.keys(form.formState.dirtyFields).length;\n\n  const saveButton = (\n    <Button\n      variant=\"flat\"\n      color=\"primary\"\n      type=\"submit\"\n      disabled={isLoading || !isDirty}\n    >\n      {submitButtonText ?? <Trans message=\"Save\" />}\n    </Button>\n  );\n\n  return (\n    <Form\n      onSubmit={onSubmit}\n      onBeforeSubmit={() => form.clearErrors()}\n      form={form}\n      className=\"relative\"\n    >\n      {variant === 'sticky' && <div ref={sentinelRef} />}\n      <CrupdateResourceHeader\n        wrapInContainer={wrapInContainer}\n        startActions={backButton}\n        subTitle={subTitle}\n        endActions={\n          <Fragment>\n            {actions}\n            {variant === 'sticky' && saveButton}\n          </Fragment>\n        }\n        className={clsx(\n          isSticky && 'bg shadow',\n          variant === 'sticky' && 'sticky',\n        )}\n      >\n        {title}\n      </CrupdateResourceHeader>\n      <div\n        className={\n          wrapInContainer ? 'container mx-auto px-24 pb-24' : undefined\n        }\n      >\n        <div className=\"rounded\">{children}</div>\n      </div>\n      {variant === 'popup' && (\n        <DirtyFormSaveDrawer saveButton={saveButton} isLoading={isLoading} />\n      )}\n    </Form>\n  );\n}\n\ninterface CrupdateResourceHeaderProps {\n  className?: string;\n  wrapInContainer?: boolean;\n  children: ReactNode;\n  subTitle?: ReactNode;\n  startActions?: ReactNode;\n  endActions?: ReactNode;\n}\nexport function CrupdateResourceHeader({\n  className,\n  wrapInContainer,\n  children,\n  subTitle,\n  startActions,\n  endActions,\n}: CrupdateResourceHeaderProps) {\n  return (\n    <div\n      className={clsx('top-0 z-10 my-12 transition-shadow md:my-24', className)}\n    >\n      <div\n        className={clsx(\n          'flex items-center gap-24 py-14 md:items-start',\n          wrapInContainer && 'container mx-auto px-24',\n        )}\n      >\n        {startActions}\n        <div className=\"flex-auto overflow-hidden overflow-ellipsis md:mr-64\">\n          <h1 className=\"overflow-hidden overflow-ellipsis whitespace-nowrap text-xl md:text-3xl\">\n            {children}\n          </h1>\n          {subTitle && <div className=\"mt-4\">{subTitle}</div>}\n        </div>\n        <div className=\"mr-auto\"></div>\n        {endActions}\n      </div>\n    </div>\n  );\n}\n\ninterface CrupdateResourceSectionProps {\n  label: ReactElement;\n  labelMargin?: string;\n  children: ReactNode;\n  margin?: string;\n}\n\nexport function CrupdateResourceSection({\n  label,\n  children,\n  margin = 'mb-48',\n  labelMargin = 'mb-16',\n}: CrupdateResourceSectionProps) {\n  return (\n    <section className={clsx(margin)}>\n      <div className={clsx(labelMargin, 'text-lg font-semibold')}>{label}</div>\n      {children}\n    </section>\n  );\n}\n\ninterface DirtyFormSaveDrawerProps {\n  saveButton?: ReactElement;\n  isLoading?: boolean;\n}\n\nexport function DirtyFormSaveDrawer({\n  saveButton,\n  isLoading,\n}: DirtyFormSaveDrawerProps) {\n  const {formState, reset} = useFormContext();\n  return (\n    <AnimatePresence>\n      {formState.isDirty && (\n        <Fragment>\n          <div className=\"invisible h-92\" />\n          <m.div\n            key=\"dirty-panel\"\n            initial={{y: 100, opacity: 0}}\n            animate={{y: 0, opacity: 1}}\n            exit={{y: 100, opacity: 0}}\n            transition={{duration: 0.2}}\n            className=\"fixed bottom-0 left-0 right-0 z-20 flex items-center justify-center gap-16 border-t bg px-12 py-28 shadow-[rgba(0,0,0,0.2)_0px_0px_10px]\"\n          >\n            <Button variant=\"outline\" onClick={() => reset()}>\n              <Trans message=\"Cancel\" />\n            </Button>\n            {saveButton ?? (\n              <Button\n                variant=\"flat\"\n                color=\"primary\"\n                type=\"submit\"\n                disabled={isLoading}\n              >\n                <Trans message=\"Save changes\" />\n              </Button>\n            )}\n          </m.div>\n        </Fragment>\n      )}\n    </AnimatePresence>\n  );\n}\n","import {Chip} from '@ui/forms/input-field/chip-field/chip';\nimport React, {ReactElement, useState} from 'react';\nimport {useUploadAvatar} from '@common/auth/ui/account-settings/avatar/upload-avatar';\nimport {useRemoveAvatar} from '@common/auth/ui/account-settings/avatar/remove-avatar';\nimport {FileUploadProvider} from '@common/uploads/uploader/file-upload-provider';\nimport {ImageSelector} from '@common/uploads/components/image-selector';\nimport {Avatar} from '@ui/avatar/avatar';\nimport {User} from '@ui/types/user';\nimport {Trans} from '@ui/i18n/trans';\nimport {ErrorOutlineIcon} from '@ui/icons/material/ErrorOutline';\n\ninterface Props {\n  user: User;\n  badge?: ReactElement;\n}\nexport function UpdateUserPageHeader({user, badge}: Props) {\n  const isSuspended = user.banned_at !== null;\n  const banReason = user.bans?.[0]?.comment;\n  return (\n    <div className=\"container mx-auto mb-44 mt-38 px-24\">\n      <div className=\"flex gap-32\">\n        <div className=\"relative\">\n          <AvatarSelector user={user} />\n          <div className=\"absolute right-0 top-2\">{badge}</div>\n        </div>\n        <div>\n          {!!user.roles.length && (\n            <Chip radius=\"rounded-panel\" size=\"sm\" className=\"mb-6 w-max\">\n              {user.roles[0].name}\n            </Chip>\n          )}\n          <h1 className=\"text-2xl font-semibold\">{user.name}</h1>\n          <div className=\"mt-4 text-sm text-muted\">{user.email}</div>\n        </div>\n      </div>\n      {isSuspended && (\n        <div className=\"mt-24 flex w-max items-center gap-8 rounded-panel bg-danger-lighter px-10 py-6 text-sm text-danger-darker\">\n          <ErrorOutlineIcon size=\"sm\" />\n          {banReason ? (\n            <Trans message=\"Suspended: :reason\" values={{reason: banReason}} />\n          ) : (\n            <Trans message=\"Suspended\" />\n          )}\n        </div>\n      )}\n    </div>\n  );\n}\n\ninterface AvatarManagerProps {\n  user: User;\n}\n\nfunction AvatarSelector({user}: AvatarManagerProps) {\n  const uploadAvatar = useUploadAvatar({user});\n  const removeAvatar = useRemoveAvatar({user});\n  const [value, setValue] = useState(user.image);\n  return (\n    <FileUploadProvider>\n      <ImageSelector\n        value={value}\n        diskPrefix=\"avatars\"\n        variant=\"avatar\"\n        stretchPreview\n        previewSize=\"w-90 h-90\"\n        placeholderIcon={\n          <Avatar label={user.name} size=\"w-full h-full text-2xl\" circle />\n        }\n        showRemoveButton\n        onChange={url => {\n          const onSuccess = {\n            onSuccess: () => setValue(url),\n          };\n          if (url) {\n            uploadAvatar.mutate({url}, onSuccess);\n          } else {\n            removeAvatar.mutate(undefined, onSuccess);\n          }\n        }}\n      />\n    </FileUploadProvider>\n  );\n}\n","import {useLocation} from 'react-router';\nimport {useState} from 'react';\nimport {MessageDescriptor} from '@ui/i18n/message-descriptor';\n\nexport interface UrlBackedTabConfig {\n  uri: string;\n  label: MessageDescriptor;\n}\n\nexport function useUrlBackedTabs(config: UrlBackedTabConfig[]) {\n  const {pathname} = useLocation();\n  const tabName = pathname.split('/').pop();\n  return useState(() => {\n    const index = config.findIndex(tab => tab.uri === tabName);\n    return index === -1 ? 0 : index;\n  });\n}\n","import {Tabs} from '@ui/tabs/tabs';\nimport {TabList} from '@ui/tabs/tab-list';\nimport {Tab} from '@ui/tabs/tab';\nimport {Link, Outlet} from 'react-router';\nimport {Trans} from '@ui/i18n/trans';\nimport React, {useMemo} from 'react';\nimport {User} from '@ui/types/user';\nimport {\n  UrlBackedTabConfig,\n  useUrlBackedTabs,\n} from '@common/http/use-url-backed-tabs';\nimport {message} from '@ui/i18n/message';\nimport {useAuth} from '@common/auth/use-auth';\nimport {useSettings} from '@ui/settings/use-settings';\n\nexport const updateUserPageTabs: UrlBackedTabConfig[] = [\n  {uri: 'details', label: message('Details')},\n  {uri: 'permissions', label: message('Roles & permissions')},\n  {uri: 'security', label: message('Security')},\n  {uri: 'date', label: message('Date & time')},\n  {uri: 'api', label: message('API')},\n];\n\ninterface Props {\n  tabs: UrlBackedTabConfig[];\n  user: User;\n}\nexport function UpdateUserPageTabs({user, tabs}: Props) {\n  const {user: authUser, hasPermission} = useAuth();\n  const {api} = useSettings();\n  const apiEnabled = api?.integrated && hasPermission('api.access');\n  const filteredTabs = useMemo(() => {\n    return tabs.filter(tab => {\n      if (tab.uri === 'api' && !apiEnabled) {\n        return false;\n      }\n      if (tab.uri === 'security' && user.id !== authUser?.id) {\n        return false;\n      }\n      return true;\n    });\n  }, [user.id, authUser?.id, apiEnabled, tabs]);\n\n  const [activeTab, setActiveTab] = useUrlBackedTabs(filteredTabs);\n\n  return (\n    <div className=\"container mx-auto px-24\">\n      <Tabs\n        selectedTab={activeTab}\n        onTabChange={setActiveTab}\n        overflow=\"overflow-visible\"\n      >\n        <TabList className=\"mb-24\">\n          {filteredTabs.map(tab => (\n            <Tab key={tab.uri} elementType={Link} to={tab.uri}>\n              <Trans {...tab.label} />\n            </Tab>\n          ))}\n        </TabList>\n        <Outlet context={user} />\n      </Tabs>\n    </div>\n  );\n}\n","import {useMutation} from '@tanstack/react-query';\nimport {apiClient, queryClient} from '@common/http/query-client';\nimport {toast} from '@ui/toast/toast';\nimport {useTrans} from '@ui/i18n/use-trans';\nimport {message} from '@ui/i18n/message';\nimport {DatatableDataQueryKey} from '@common/datatable/requests/paginated-resources';\nimport {showHttpErrorToast} from '@common/http/show-http-error-toast';\n\nexport function useDeleteUser() {\n  const {trans} = useTrans();\n  return useMutation({\n    mutationFn: (payload: {userId: number}) => deleteUser(payload.userId),\n    onSuccess: async () => {\n      await queryClient.invalidateQueries({\n        queryKey: DatatableDataQueryKey('users'),\n      });\n      toast(trans(message('User deleted')));\n    },\n    onError: r => showHttpErrorToast(r),\n  });\n}\n\nfunction deleteUser(userId: string | number) {\n  return apiClient.delete<Response>(`users/${userId}`).then(r => r.data);\n}\n","import {Menu, MenuTrigger} from '@ui/menu/menu-trigger';\nimport {Button} from '@ui/buttons/button';\nimport {KeyboardArrowDownIcon} from '@ui/icons/material/KeyboardArrowDown';\nimport {Trans} from '@ui/i18n/trans';\nimport {Item} from '@ui/forms/listbox/item';\nimport React, {Fragment, ReactNode, useState} from 'react';\nimport {BanUserDialog} from '@common/admin/users/ban-user-dialog';\nimport {openDialog} from '@ui/overlays/store/dialog-store';\nimport {User} from '@ui/types/user';\nimport {useUnbanUser} from '@common/admin/users/requests/use-unban-user';\nimport {ConfirmationDialog} from '@ui/overlays/dialog/confirmation-dialog';\nimport {useDeleteUser} from '@common/admin/users/requests/use-delete-user';\nimport {useDialogContext} from '@ui/overlays/dialog/dialog-context';\nimport {useNavigate} from '@common/ui/navigation/use-navigate';\nimport {DialogTrigger} from '@ui/overlays/dialog/dialog-trigger';\n\ninterface Props {\n  user: User;\n  children?: ReactNode;\n}\nexport function UpdateUserPageActions({user, children}: Props) {\n  const unban = useUnbanUser(user.id);\n  const isSuspended = user.banned_at !== null;\n  const [deleteDialogOpen, setDeleteDialogOpen] = useState(false);\n  return (\n    <Fragment>\n      <DialogTrigger\n        type=\"modal\"\n        isOpen={deleteDialogOpen}\n        onOpenChange={setDeleteDialogOpen}\n      >\n        <DeleteUserDialog userId={user.id} />\n      </DialogTrigger>\n      <MenuTrigger>\n        <Button\n          className=\"ml-auto\"\n          variant=\"outline\"\n          size=\"sm\"\n          endIcon={<KeyboardArrowDownIcon />}\n        >\n          <Trans message=\"Actions\" />\n        </Button>\n        <Menu>\n          {children}\n          <Item\n            value=\"toggleSuspension\"\n            onSelected={() => {\n              if (isSuspended) {\n                unban.mutate();\n              } else {\n                openDialog(BanUserDialog, {user});\n              }\n            }}\n          >\n            {isSuspended ? (\n              <Trans message=\"Unsuspend user\" />\n            ) : (\n              <Trans message=\"Suspend user\" />\n            )}\n          </Item>\n          <Item\n            value=\"delete\"\n            onSelected={() => {\n              setDeleteDialogOpen(true);\n            }}\n          >\n            <Trans message=\"Delete user\" />\n          </Item>\n        </Menu>\n      </MenuTrigger>\n    </Fragment>\n  );\n}\n\ninterface DeleteUserDialogProps {\n  userId: number;\n}\nexport function DeleteUserDialog({userId}: DeleteUserDialogProps) {\n  const deleteUser = useDeleteUser();\n  const {close} = useDialogContext();\n  const navigate = useNavigate();\n  return (\n    <ConfirmationDialog\n      isDanger\n      isLoading={deleteUser.isPending}\n      title={<Trans message=\"Delete user\" />}\n      confirm={<Trans message=\"Delete\" />}\n      body={<Trans message=\"Are you sure you want to delete this user?\" />}\n      onConfirm={() => {\n        deleteUser.mutate(\n          {userId},\n          {\n            onSuccess: () => {\n              close();\n              navigate('..', {relative: 'path'});\n            },\n          },\n        );\n      }}\n    />\n  );\n}\n","import {Link, useParams} from 'react-router';\nimport React, {Fragment} from 'react';\nimport {useUser} from '@common/auth/ui/use-user';\nimport {User} from '@ui/types/user';\nimport {Trans} from '@ui/i18n/trans';\nimport {CrupdateResourceHeader} from '@common/admin/crupdate-resource-layout';\nimport {UpdateUserPageHeader} from '@common/admin/users/update-user-page/update-user-page-header';\nimport {StaticPageTitle} from '@common/seo/static-page-title';\nimport {PageStatus} from '@common/http/page-status';\nimport {\n  updateUserPageTabs,\n  UpdateUserPageTabs,\n} from '@common/admin/users/update-user-page/update-user-page-tabs';\nimport {IconButton} from '@ui/buttons/icon-button';\nimport {ArrowBackIcon} from '@ui/icons/material/ArrowBack';\nimport {UpdateUserPageActions} from '@common/admin/users/update-user-page/update-user-page-actions';\n\nexport function UpdateUserPage() {\n  const {userId} = useParams();\n  const query = useUser(userId!, {\n    with: ['subscriptions', 'roles', 'permissions', 'bans'],\n  });\n\n  return (\n    <Fragment>\n      <StaticPageTitle>\n        <Trans message=\"Edit user\" />\n      </StaticPageTitle>\n      {query.data?.user ? (\n        <PageContent user={query.data.user} />\n      ) : (\n        <PageStatus query={query} />\n      )}\n    </Fragment>\n  );\n}\n\ninterface PageContentProps {\n  user: User;\n}\nfunction PageContent({user}: PageContentProps) {\n  return (\n    <Fragment>\n      <CrupdateResourceHeader\n        wrapInContainer\n        startActions={\n          <IconButton\n            elementType={Link}\n            to=\"..\"\n            relative=\"path\"\n            size=\"sm\"\n            iconSize=\"md\"\n          >\n            <ArrowBackIcon />\n          </IconButton>\n        }\n        endActions={<UpdateUserPageActions user={user} />}\n      >\n        <Trans message=\"Edit user\" />\n      </CrupdateResourceHeader>\n      <UpdateUserPageHeader user={user} />\n      <UpdateUserPageTabs tabs={updateUserPageTabs} user={user} />\n    </Fragment>\n  );\n}\n","import {createSvgIcon} from '../create-svg-icon';\n\nexport const TranslateIcon = createSvgIcon(\n  <path d=\"m12.87 15.07-2.54-2.51.03-.03c1.74-1.94 2.98-4.17 3.71-6.53H17V4h-7V2H8v2H1v1.99h11.17C11.5 7.92 10.44 9.75 9 11.35 8.07 10.32 7.3 9.19 6.69 8h-2c.73 1.63 1.73 3.17 2.98 4.56l-5.09 5.02L4 19l5-5 3.11 3.11.76-2.04zM18.5 10h-2L12 22h2l1.12-3h4.75L21 22h2l-4.5-12zm-2.62 7 1.62-4.33L19.12 17h-3.24z\" />\n, 'TranslateOutlined');\n","import {useQuery} from '@tanstack/react-query';\nimport {BackendResponse} from '../../http/backend-response/backend-response';\nimport {Localization} from '@ui/i18n/localization';\nimport {apiClient} from '../../http/query-client';\n\nexport interface FetchLocaleWithLinesResponse extends BackendResponse {\n  localization: Localization;\n}\n\nexport const getLocalWithLinesQueryKey = (localeId?: number | string) => {\n  const key: (string | number)[] = ['getLocaleWithLines'];\n  if (localeId != null) {\n    key.push(localeId);\n  }\n  return key;\n};\n\nexport function useLocaleWithLines(localeId: number | string) {\n  return useQuery({\n    queryKey: getLocalWithLinesQueryKey(localeId),\n    queryFn: () => fetchLocaleWithLines(localeId),\n    staleTime: Infinity,\n  });\n}\n\nfunction fetchLocaleWithLines(\n  localeId: number | string,\n): Promise<FetchLocaleWithLinesResponse> {\n  return apiClient\n    .get(`localizations/${localeId}`)\n    .then(response => response.data);\n}\n","import {useMutation} from '@tanstack/react-query';\nimport {UseFormReturn} from 'react-hook-form';\nimport {toast} from '@ui/toast/toast';\nimport {BackendResponse} from '../../http/backend-response/backend-response';\nimport {apiClient, queryClient} from '../../http/query-client';\nimport {message} from '@ui/i18n/message';\nimport {DatatableDataQueryKey} from '../../datatable/requests/paginated-resources';\nimport {Localization} from '@ui/i18n/localization';\nimport {onFormQueryError} from '../../errors/on-form-query-error';\nimport {showHttpErrorToast} from '../../http/show-http-error-toast';\nimport {getLocalWithLinesQueryKey} from './use-locale-with-lines';\n\ninterface Response extends BackendResponse {\n  localization: Localization;\n}\n\nfunction UpdateLocalization({\n  id,\n  ...other\n}: Partial<Localization>): Promise<Response> {\n  return apiClient.put(`localizations/${id}`, other).then(r => r.data);\n}\n\nexport function useUpdateLocalization(\n  form?: UseFormReturn<Partial<Localization>>,\n) {\n  return useMutation({\n    mutationFn: (props: Partial<Localization>) => UpdateLocalization(props),\n    onSuccess: () => {\n      toast(message('Localization updated'));\n      queryClient.invalidateQueries({\n        queryKey: DatatableDataQueryKey('localizations'),\n      });\n      queryClient.invalidateQueries({queryKey: getLocalWithLinesQueryKey()});\n    },\n    onError: r => (form ? onFormQueryError(r, form) : showHttpErrorToast(r)),\n  });\n}\n","import {useForm} from 'react-hook-form';\nimport {Dialog} from '@ui/overlays/dialog/dialog';\nimport {DialogHeader} from '@ui/overlays/dialog/dialog-header';\nimport {Trans} from '@ui/i18n/trans';\nimport {DialogBody} from '@ui/overlays/dialog/dialog-body';\nimport {useDialogContext} from '@ui/overlays/dialog/dialog-context';\nimport {Form} from '@ui/forms/form';\nimport {Localization} from '@ui/i18n/localization';\nimport {FormTextField} from '@ui/forms/input-field/text-field/text-field';\nimport {useValueLists} from '../../http/value-lists';\nimport {FormSelect, Option} from '@ui/forms/select/select';\nimport {DialogFooter} from '@ui/overlays/dialog/dialog-footer';\nimport {Button} from '@ui/buttons/button';\nimport {useUpdateLocalization} from './update-localization';\nimport {message} from '@ui/i18n/message';\nimport {useTrans} from '@ui/i18n/use-trans';\n\ninterface UpdateLocalizationDialogProps {\n  localization: Localization;\n}\nexport function UpdateLocalizationDialog({\n  localization,\n}: UpdateLocalizationDialogProps) {\n  const {trans} = useTrans();\n  const {formId, close} = useDialogContext();\n  const form = useForm<Partial<Localization>>({\n    defaultValues: {\n      id: localization.id,\n      name: localization.name,\n      language: localization.language,\n    },\n  });\n\n  const {data} = useValueLists(['languages']);\n  const languages = data?.languages || [];\n\n  const updateLocalization = useUpdateLocalization(form);\n\n  return (\n    <Dialog>\n      <DialogHeader>\n        <Trans message=\"Update localization\" />\n      </DialogHeader>\n      <DialogBody>\n        <Form\n          form={form}\n          id={formId}\n          onSubmit={values => {\n            updateLocalization.mutate(values, {onSuccess: close});\n          }}\n        >\n          <FormTextField\n            name=\"name\"\n            label={<Trans message=\"Name\" />}\n            className=\"mb-30\"\n            required\n          />\n          <FormSelect\n            required\n            name=\"language\"\n            label={<Trans message=\"Language\" />}\n            selectionMode=\"single\"\n            showSearchField\n            searchPlaceholder={trans(message('Search languages'))}\n          >\n            {languages.map(language => (\n              <Option value={language.code} key={language.code}>\n                {language.name}\n              </Option>\n            ))}\n          </FormSelect>\n        </Form>\n      </DialogBody>\n      <DialogFooter>\n        <Button onClick={close}>\n          <Trans message=\"Cancel\" />\n        </Button>\n        <Button\n          variant=\"flat\"\n          color=\"primary\"\n          type=\"submit\"\n          form={formId}\n          disabled={updateLocalization.isPending}\n        >\n          <Trans message=\"Save\" />\n        </Button>\n      </DialogFooter>\n    </Dialog>\n  );\n}\n","import {useMutation, useQueryClient} from '@tanstack/react-query';\nimport {UseFormReturn} from 'react-hook-form';\nimport {toast} from '@ui/toast/toast';\nimport {BackendResponse} from '../../http/backend-response/backend-response';\nimport {apiClient} from '../../http/query-client';\nimport {message} from '@ui/i18n/message';\nimport {DatatableDataQueryKey} from '../../datatable/requests/paginated-resources';\nimport {onFormQueryError} from '../../errors/on-form-query-error';\nimport {Localization} from '@ui/i18n/localization';\n\ninterface Response extends BackendResponse {\n  localization: Localization;\n}\n\nexport interface CreateLocalizationPayload {\n  name: string;\n  language: string;\n}\n\nfunction createLocalization(\n  payload: CreateLocalizationPayload,\n): Promise<Response> {\n  return apiClient.post(`localizations`, payload).then(r => r.data);\n}\n\nexport function useCreateLocalization(\n  form: UseFormReturn<CreateLocalizationPayload>,\n) {\n  const queryClient = useQueryClient();\n  return useMutation({\n    mutationFn: (props: CreateLocalizationPayload) => createLocalization(props),\n    onSuccess: () => {\n      toast(message('Localization created'));\n      queryClient.invalidateQueries({\n        queryKey: DatatableDataQueryKey('localizations'),\n      });\n    },\n    onError: r => onFormQueryError(r, form),\n  });\n}\n","import {useForm} from 'react-hook-form';\nimport {Dialog} from '@ui/overlays/dialog/dialog';\nimport {DialogHeader} from '@ui/overlays/dialog/dialog-header';\nimport {Trans} from '@ui/i18n/trans';\nimport {DialogBody} from '@ui/overlays/dialog/dialog-body';\nimport {useDialogContext} from '@ui/overlays/dialog/dialog-context';\nimport {Form} from '@ui/forms/form';\nimport {FormTextField} from '@ui/forms/input-field/text-field/text-field';\nimport {useValueLists} from '../../http/value-lists';\nimport {FormSelect, Option} from '@ui/forms/select/select';\nimport {DialogFooter} from '@ui/overlays/dialog/dialog-footer';\nimport {Button} from '@ui/buttons/button';\nimport {\n  CreateLocalizationPayload,\n  useCreateLocalization,\n} from './create-localization';\nimport {message} from '@ui/i18n/message';\nimport {useTrans} from '@ui/i18n/use-trans';\n\nexport function CreateLocationDialog() {\n  const {trans} = useTrans();\n  const {formId, close} = useDialogContext();\n  const form = useForm<CreateLocalizationPayload>({\n    defaultValues: {\n      language: 'en',\n    },\n  });\n\n  const {data} = useValueLists(['languages']);\n  const languages = data?.languages || [];\n\n  const createLocalization = useCreateLocalization(form);\n\n  return (\n    <Dialog>\n      <DialogHeader>\n        <Trans message=\"Create localization\" />\n      </DialogHeader>\n      <DialogBody>\n        <Form\n          form={form}\n          id={formId}\n          onSubmit={values => {\n            createLocalization.mutate(values, {onSuccess: close});\n          }}\n        >\n          <FormTextField\n            autoFocus\n            name=\"name\"\n            label={<Trans message=\"Name\" />}\n            className=\"mb-30\"\n            required\n          />\n          <FormSelect\n            required\n            name=\"language\"\n            label={<Trans message=\"Language\" />}\n            selectionMode=\"single\"\n            showSearchField\n            searchPlaceholder={trans(message('Search languages'))}\n          >\n            {languages.map(language => (\n              <Option value={language.code} key={language.code}>\n                {language.name}\n              </Option>\n            ))}\n          </FormSelect>\n        </Form>\n      </DialogBody>\n      <DialogFooter>\n        <Button onClick={close}>\n          <Trans message=\"Cancel\" />\n        </Button>\n        <Button\n          variant=\"flat\"\n          color=\"primary\"\n          type=\"submit\"\n          form={formId}\n          disabled={createLocalization.isPending}\n        >\n          <Trans message=\"Save\" />\n        </Button>\n      </DialogFooter>\n    </Dialog>\n  );\n}\n","export default \"__VITE_ASSET__5bb85b7d__\"","import {useMutation} from '@tanstack/react-query';\nimport {toast} from '@ui/toast/toast';\nimport {BackendResponse} from '../../http/backend-response/backend-response';\nimport {apiClient, queryClient} from '../../http/query-client';\nimport {message} from '@ui/i18n/message';\nimport {DatatableDataQueryKey} from '../../datatable/requests/paginated-resources';\nimport {Localization} from '@ui/i18n/localization';\nimport {showHttpErrorToast} from '../../http/show-http-error-toast';\nimport {getLocalWithLinesQueryKey} from './use-locale-with-lines';\nimport {UploadedFile} from '@ui/utils/files/uploaded-file';\n\ninterface Response extends BackendResponse {\n  localization: Localization;\n}\n\ninterface Payload {\n  file: UploadedFile;\n  localeId: string | number;\n}\n\nexport function useUploadTranslationFile() {\n  return useMutation({\n    mutationFn: (payload: Payload) => uploadFile(payload),\n    onSuccess: async () => {\n      await queryClient.invalidateQueries({\n        queryKey: DatatableDataQueryKey('localizations'),\n      });\n      await queryClient.invalidateQueries({\n        queryKey: getLocalWithLinesQueryKey(),\n      });\n      toast(message('Translation file uploaded'));\n    },\n    onError: r => showHttpErrorToast(r),\n  });\n}\n\nfunction uploadFile({localeId, file}: Payload): Promise<Response> {\n  const data = new FormData();\n  data.append('file', file.native);\n  return apiClient\n    .post(`localizations/${localeId}/upload`, data)\n    .then(r => r.data);\n}\n","import React, {Fragment} from 'react';\nimport {Link} from 'react-router';\nimport {DataTablePage} from '../../datatable/page/data-table-page';\nimport {IconButton} from '@ui/buttons/icon-button';\nimport {FormattedDate} from '@ui/i18n/formatted-date';\nimport {ColumnConfig} from '../../datatable/column-config';\nimport {Trans} from '@ui/i18n/trans';\nimport {Localization} from '@ui/i18n/localization';\nimport {TranslateIcon} from '@ui/icons/material/Translate';\nimport {DialogTrigger} from '@ui/overlays/dialog/dialog-trigger';\nimport {UpdateLocalizationDialog} from './update-localization-dialog';\nimport {Tooltip} from '@ui/tooltip/tooltip';\nimport {CreateLocationDialog} from './create-localization-dialog';\nimport {DataTableEmptyStateMessage} from '../../datatable/page/data-table-emty-state-message';\nimport aroundTheWorldSvg from './around-the-world.svg';\nimport {DataTableAddItemButton} from '../../datatable/data-table-add-item-button';\nimport {DeleteSelectedItemsAction} from '../../datatable/page/delete-selected-items-action';\nimport {Menu, MenuItem, MenuTrigger} from '@ui/menu/menu-trigger';\nimport {openDialog} from '@ui/overlays/store/dialog-store';\nimport {downloadFileFromUrl} from '@ui/utils/files/download-file-from-url';\nimport {MoreVertIcon} from '@ui/icons/material/MoreVert';\nimport {FileUploadProvider} from '@common/uploads/uploader/file-upload-provider';\nimport {useUploadTranslationFile} from '@common/admin/translations/use-upload-translation-file';\nimport {openUploadWindow} from '@ui/utils/files/open-upload-window';\nimport {FileInputType} from '@ui/utils/files/file-input-config';\n\nconst columnConfig: ColumnConfig<Localization>[] = [\n  {\n    key: 'name',\n    allowsSorting: true,\n    sortingKey: 'name',\n    visibleInMode: 'all',\n    width: 'flex-3 min-w-200',\n    header: () => <Trans message=\"Name\" />,\n    body: locale => locale.name,\n  },\n  {\n    key: 'language',\n    allowsSorting: true,\n    sortingKey: 'language',\n    header: () => <Trans message=\"Language code\" />,\n    body: locale => locale.language,\n  },\n  {\n    key: 'updatedAt',\n    allowsSorting: true,\n    width: 'w-100',\n    header: () => <Trans message=\"Last updated\" />,\n    body: locale => <FormattedDate date={locale.updated_at} />,\n  },\n  {\n    key: 'actions',\n    header: () => <Trans message=\"Actions\" />,\n    hideHeader: true,\n    align: 'end',\n    width: 'w-84 flex-shrink-0',\n    visibleInMode: 'all',\n    body: locale => {\n      return (\n        <div className=\"text-muted\">\n          <Tooltip label={<Trans message=\"Translate\" />}>\n            <IconButton\n              size=\"md\"\n              elementType={Link}\n              to={`${locale.id}/translate`}\n            >\n              <TranslateIcon />\n            </IconButton>\n          </Tooltip>\n\n          <FileUploadProvider>\n            <RowActionsMenuTrigger locale={locale} />\n          </FileUploadProvider>\n        </div>\n      );\n    },\n  },\n];\n\nexport function LocalizationIndex() {\n  return (\n    <DataTablePage\n      endpoint=\"localizations\"\n      title={<Trans message=\"Localizations\" />}\n      columns={columnConfig}\n      actions={<Actions />}\n      selectedActions={<DeleteSelectedItemsAction />}\n      emptyStateMessage={\n        <DataTableEmptyStateMessage\n          image={aroundTheWorldSvg}\n          title={<Trans message=\"No localizations have been created yet\" />}\n          filteringTitle={<Trans message=\"No matching localizations\" />}\n        />\n      }\n    />\n  );\n}\n\nfunction Actions() {\n  return (\n    <Fragment>\n      <DialogTrigger type=\"modal\">\n        <DataTableAddItemButton>\n          <Trans message=\"Add new localization\" />\n        </DataTableAddItemButton>\n        <CreateLocationDialog />\n      </DialogTrigger>\n    </Fragment>\n  );\n}\n\ninterface RowActionsMenuTriggerProps {\n  locale: Localization;\n}\nfunction RowActionsMenuTrigger({locale}: RowActionsMenuTriggerProps) {\n  const uploadFile = useUploadTranslationFile();\n  return (\n    <MenuTrigger>\n      <IconButton disabled={uploadFile.isPending}>\n        <MoreVertIcon />\n      </IconButton>\n      <Menu>\n        <MenuItem\n          value=\"translate\"\n          elementType={Link}\n          to={`${locale.id}/translate`}\n        >\n          <Trans message=\"Translate\" />\n        </MenuItem>\n        <MenuItem\n          value=\"rename\"\n          onSelected={() =>\n            openDialog(UpdateLocalizationDialog, {localization: locale})\n          }\n        >\n          <Trans message=\"Rename\" />\n        </MenuItem>\n        <MenuItem\n          value=\"download\"\n          onSelected={() =>\n            downloadFileFromUrl(`api/v1/localizations/${locale.id}/download`)\n          }\n        >\n          <Trans message=\"Download\" />\n        </MenuItem>\n        <MenuItem\n          value=\"upload\"\n          onSelected={async () => {\n            const files = await openUploadWindow({\n              types: [FileInputType.json],\n            });\n            if (files.length == 1) {\n              uploadFile.mutate({localeId: locale.id, file: files[0]});\n            }\n          }}\n        >\n          <Trans message=\"Upload\" />\n        </MenuItem>\n      </Menu>\n    </MenuTrigger>\n  );\n}\n","import {useForm} from 'react-hook-form';\nimport {Dialog} from '@ui/overlays/dialog/dialog';\nimport {DialogHeader} from '@ui/overlays/dialog/dialog-header';\nimport {Trans} from '@ui/i18n/trans';\nimport {DialogBody} from '@ui/overlays/dialog/dialog-body';\nimport {useDialogContext} from '@ui/overlays/dialog/dialog-context';\nimport {Form} from '@ui/forms/form';\nimport {FormTextField} from '@ui/forms/input-field/text-field/text-field';\nimport {DialogFooter} from '@ui/overlays/dialog/dialog-footer';\nimport {Button} from '@ui/buttons/button';\nimport {SectionHelper} from '../../ui/other/section-helper';\n\ninterface FormValue {\n  key: string;\n  value: string;\n}\n\nexport function NewTranslationDialog() {\n  const {formId, close} = useDialogContext();\n  const form = useForm<FormValue>();\n\n  return (\n    <Dialog>\n      <DialogHeader>\n        <Trans message=\"Add translation\" />\n      </DialogHeader>\n      <DialogBody>\n        <Form\n          form={form}\n          id={formId}\n          onSubmit={values => {\n            close(values);\n          }}\n        >\n          <SectionHelper\n            className=\"mb-30\"\n            title={\n              <Trans message=\"Add a new translation, if it does not exist already.\" />\n            }\n            description={\n              <Trans message=\"This should only need to be done for things like custom menu items.\" />\n            }\n          />\n          <FormTextField\n            inputElementType=\"textarea\"\n            rows={2}\n            autoFocus\n            name=\"key\"\n            label={<Trans message=\"Translation key\" />}\n            className=\"mb-30\"\n            required\n          />\n          <FormTextField\n            inputElementType=\"textarea\"\n            rows={2}\n            name=\"value\"\n            label={<Trans message=\"Translation value\" />}\n            required\n          />\n        </Form>\n      </DialogBody>\n      <DialogFooter>\n        <Button onClick={close}>\n          <Trans message=\"Cancel\" />\n        </Button>\n        <Button variant=\"flat\" color=\"primary\" type=\"submit\" form={formId}>\n          <Trans message=\"Add\" />\n        </Button>\n      </DialogFooter>\n    </Dialog>\n  );\n}\n","import React, {useMemo, useRef, useState} from 'react';\nimport {useParams} from 'react-router';\nimport {useLocaleWithLines} from './use-locale-with-lines';\nimport {Trans} from '@ui/i18n/trans';\nimport {IconButton} from '@ui/buttons/icon-button';\nimport {Button} from '@ui/buttons/button';\nimport {Breadcrumb} from '@ui/breadcrumbs/breadcrumb';\nimport {BreadcrumbItem} from '@ui/breadcrumbs/breadcrumb-item';\nimport {TextField} from '@ui/forms/input-field/text-field/text-field';\nimport {useTrans} from '@ui/i18n/use-trans';\nimport {SearchIcon} from '@ui/icons/material/Search';\nimport {CloseIcon} from '@ui/icons/material/Close';\nimport {AddIcon} from '@ui/icons/material/Add';\nimport {DialogTrigger} from '@ui/overlays/dialog/dialog-trigger';\nimport {NewTranslationDialog} from './new-translation-dialog';\nimport {useUpdateLocalization} from './update-localization';\nimport {Localization} from '@ui/i18n/localization';\nimport {FullPageLoader} from '@ui/progress/full-page-loader';\nimport {useIsMobileMediaQuery} from '@ui/utils/hooks/is-mobile-media-query';\nimport {useVirtualizer} from '@tanstack/react-virtual';\nimport {useNavigate} from '../../ui/navigation/use-navigate';\nimport {useUploadTranslationFile} from '@common/admin/translations/use-upload-translation-file';\nimport {Menu, MenuItem, MenuTrigger} from '@ui/menu/menu-trigger';\nimport {MoreVertIcon} from '@ui/icons/material/MoreVert';\nimport {downloadFileFromUrl} from '@ui/utils/files/download-file-from-url';\nimport {openUploadWindow} from '@ui/utils/files/open-upload-window';\n\nimport {FileInputType} from '@ui/utils/files/file-input-config';\n\ntype Lines = Record<string, string>;\n\nexport function TranslationManagementPage() {\n  const {localeId} = useParams();\n\n  const {data, isLoading} = useLocaleWithLines(localeId!);\n  const localization = data?.localization;\n\n  if (isLoading || !localization) {\n    return <FullPageLoader />;\n  }\n\n  return <Form localization={localization} />;\n}\n\ninterface FormProps {\n  localization: Localization;\n}\nfunction Form({localization}: FormProps) {\n  const [lines, setLines] = useState<Lines>(localization.lines || {});\n\n  const navigate = useNavigate();\n  const updateLocalization = useUpdateLocalization();\n  const [searchQuery, setSearchQuery] = useState<string>('');\n\n  return (\n    <form\n      className=\"flex h-full flex-col p-14 md:p-24\"\n      onSubmit={e => {\n        e.preventDefault();\n        updateLocalization.mutate(\n          {id: localization.id, lines},\n          {\n            onSuccess: () => {\n              navigate('/admin/localizations');\n            },\n          },\n        );\n      }}\n    >\n      <Header\n        localization={localization}\n        setLines={setLines}\n        lines={lines}\n        searchQuery={searchQuery}\n        setSearchQuery={setSearchQuery}\n        isLoading={updateLocalization.isPending}\n      />\n      <LinesList lines={lines} setLines={setLines} searchQuery={searchQuery} />\n    </form>\n  );\n}\n\ninterface HeaderProps {\n  localization: Localization;\n  lines: Lines;\n  setLines: (lines: Lines) => void;\n  searchQuery: string;\n  setSearchQuery: (value: string) => void;\n  isLoading: boolean;\n}\nfunction Header({\n  localization,\n  searchQuery,\n  setSearchQuery,\n  isLoading,\n  lines,\n  setLines,\n}: HeaderProps) {\n  const navigate = useNavigate();\n  const isMobile = useIsMobileMediaQuery();\n  const {trans} = useTrans();\n\n  return (\n    <div className=\"flex-shrink-0\">\n      <Breadcrumb size=\"lg\" className=\"mb-16\">\n        <BreadcrumbItem\n          onSelected={() => {\n            navigate('/admin/localizations');\n          }}\n        >\n          <Trans message=\"Localizations\" />\n        </BreadcrumbItem>\n        <BreadcrumbItem>\n          <Trans\n            message=\":locale translations\"\n            values={{locale: localization.name}}\n          />\n        </BreadcrumbItem>\n      </Breadcrumb>\n      <div className=\"mb-24 flex items-center gap-32 md:gap-12\">\n        <div className=\"max-w-440 flex-auto\">\n          <TextField\n            value={searchQuery}\n            onChange={e => setSearchQuery(e.target.value)}\n            startAdornment={<SearchIcon />}\n            placeholder={trans({message: 'Type to search...'})}\n          />\n        </div>\n        <DialogTrigger\n          type=\"modal\"\n          onClose={newTranslation => {\n            if (newTranslation) {\n              const newLines = {...lines};\n              newLines[newTranslation.key] = newTranslation.value;\n              setLines(newLines);\n            }\n          }}\n        >\n          {!isMobile && (\n            <Button\n              className=\"ml-auto\"\n              variant=\"outline\"\n              color=\"primary\"\n              startIcon={<AddIcon />}\n            >\n              <Trans message=\"Add new\" />\n            </Button>\n          )}\n          <NewTranslationDialog />\n        </DialogTrigger>\n        <ActionsMenuTrigger locale={localization} />\n        <Button\n          variant=\"flat\"\n          color=\"primary\"\n          type=\"submit\"\n          disabled={isLoading}\n        >\n          {isMobile ? (\n            <Trans message=\"Save\" />\n          ) : (\n            <Trans message=\"Save translations\" />\n          )}\n        </Button>\n      </div>\n    </div>\n  );\n}\n\ninterface LinesListProps {\n  searchQuery?: string;\n  lines: Lines;\n  setLines: (lines: Lines) => void;\n}\nfunction LinesList({searchQuery, lines, setLines}: LinesListProps) {\n  const filteredLines = useMemo(() => {\n    return Object.entries(lines).filter(([id, translation]) => {\n      const lowerCaseQuery = searchQuery?.toLowerCase();\n      return (\n        !lowerCaseQuery ||\n        id?.toLowerCase().includes(lowerCaseQuery) ||\n        translation?.toLowerCase().includes(lowerCaseQuery)\n      );\n    });\n  }, [lines, searchQuery]);\n\n  const ref = useRef<HTMLDivElement>(null);\n  const rowVirtualizer = useVirtualizer({\n    count: filteredLines.length,\n    getScrollElement: () => ref.current,\n    estimateSize: () => 123,\n  });\n\n  return (\n    <div className=\"flex-auto overflow-y-auto\" ref={ref}>\n      <div\n        className=\"relative w-full\"\n        style={{\n          height: `${rowVirtualizer.getTotalSize()}px`,\n        }}\n      >\n        {rowVirtualizer.getVirtualItems().map(virtualItem => {\n          const [id, translation] = filteredLines[virtualItem.index];\n          return (\n            <div\n              key={id}\n              className=\"absolute left-0 top-0 w-full\"\n              style={{\n                height: `${virtualItem.size}px`,\n                transform: `translateY(${virtualItem.start}px)`,\n              }}\n            >\n              <div className=\"mb-10 rounded border md:mr-10\">\n                <div className=\"flex items-center justify-between gap-24 border-b px-10 py-2\">\n                  <label\n                    className=\"flex-auto text-xs font-semibold\"\n                    htmlFor={id}\n                  >\n                    {id}\n                  </label>\n                  <IconButton\n                    size=\"xs\"\n                    className=\"text-muted\"\n                    onClick={() => {\n                      const newLines = {...lines};\n                      delete newLines[id];\n                      setLines(newLines);\n                    }}\n                  >\n                    <CloseIcon />\n                  </IconButton>\n                </div>\n                <div>\n                  <textarea\n                    id={id}\n                    name={id}\n                    defaultValue={translation}\n                    className=\"block w-full resize-none rounded bg-inherit p-10 text-sm outline-none focus-visible:ring-2\"\n                    rows={2}\n                    onChange={e => {\n                      const newLines = {...lines};\n                      newLines[id] = e.target.value;\n                      setLines(newLines);\n                    }}\n                  />\n                </div>\n              </div>\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n}\n\ninterface ActionsMenuTriggerProps {\n  locale: Localization;\n}\nfunction ActionsMenuTrigger({locale}: ActionsMenuTriggerProps) {\n  const uploadFile = useUploadTranslationFile();\n  return (\n    <MenuTrigger>\n      <IconButton\n        variant=\"outline\"\n        size=\"sm\"\n        color=\"primary\"\n        disabled={uploadFile.isPending}\n      >\n        <MoreVertIcon />\n      </IconButton>\n      <Menu>\n        <MenuItem\n          value=\"download\"\n          onSelected={() =>\n            downloadFileFromUrl(`api/v1/localizations/${locale.id}/download`)\n          }\n        >\n          <Trans message=\"Download\" />\n        </MenuItem>\n        <MenuItem\n          value=\"upload\"\n          onSelected={async () => {\n            const files = await openUploadWindow({\n              types: [FileInputType.json],\n            });\n            if (files.length == 1) {\n              uploadFile.mutate({localeId: locale.id, file: files[0]});\n            }\n          }}\n        >\n          <Trans message=\"Upload\" />\n        </MenuItem>\n      </Menu>\n    </MenuTrigger>\n  );\n}\n","import React from 'react';\nimport {useDialogContext} from './dialog-context';\nimport {Dialog} from './dialog';\nimport {DialogBody} from './dialog-body';\nimport {IconButton} from '@ui/buttons/icon-button';\nimport {CloseIcon} from '@ui/icons/material/Close';\nimport {KeyboardArrowLeftIcon} from '@ui/icons/material/KeyboardArrowLeft';\nimport {KeyboardArrowRightIcon} from '@ui/icons/material/KeyboardArrowRight';\nimport {useControlledState} from '@react-stately/utils';\n\ninterface Props {\n  image?: string;\n  images?: string[];\n  activeIndex?: number;\n  onActiveIndexChange?: (index: number) => void;\n  defaultActiveIndex?: number;\n}\nexport function ImageZoomDialog(props: Props) {\n  const {close} = useDialogContext();\n  const {image, images} = props;\n  const [activeIndex, setActiveIndex] = useControlledState(\n    props.activeIndex,\n    props.defaultActiveIndex,\n    props.onActiveIndexChange,\n  );\n  const src = image || images?.[activeIndex];\n\n  return (\n    <Dialog size=\"fullscreenTakeover\" background=\"bg-black/80\">\n      <DialogBody padding=\"p-0\" className=\"h-full w-full\">\n        <IconButton\n          size=\"lg\"\n          color=\"paper\"\n          className=\"absolute right-0 top-0 z-20 text-white\"\n          onClick={() => {\n            close();\n          }}\n        >\n          <CloseIcon />\n        </IconButton>\n        <div className=\"relative flex h-full w-full items-center justify-center p-40\">\n          {images?.length ? (\n            <IconButton\n              size=\"lg\"\n              color=\"white\"\n              variant=\"flat\"\n              className=\"absolute bottom-0 left-20 top-0 my-auto\"\n              disabled={activeIndex < 1}\n              onClick={() => {\n                setActiveIndex(activeIndex - 1);\n              }}\n            >\n              <KeyboardArrowLeftIcon />\n            </IconButton>\n          ) : null}\n          <img\n            src={src}\n            alt=\"\"\n            className=\"max-h-full w-auto object-contain shadow\"\n          />\n          {images?.length ? (\n            <IconButton\n              size=\"lg\"\n              color=\"white\"\n              variant=\"flat\"\n              className=\"absolute bottom-0 right-20 top-0 my-auto\"\n              disabled={activeIndex + 1 === images?.length}\n              onClick={() => {\n                setActiveIndex(activeIndex + 1);\n              }}\n            >\n              <KeyboardArrowRightIcon />\n            </IconButton>\n          ) : null}\n        </div>\n      </DialogBody>\n    </Dialog>\n  );\n}\n","import {useContext} from 'react';\nimport {\n  AdConfig,\n  SiteConfigContext,\n} from '../../core/settings/site-config-context';\nimport {Form} from '@ui/forms/form';\nimport {useForm} from 'react-hook-form';\nimport {FormTextField} from '@ui/forms/input-field/text-field/text-field';\nimport {Trans} from '@ui/i18n/trans';\nimport {Button} from '@ui/buttons/button';\nimport {FormSwitch} from '@ui/forms/toggle/switch';\nimport {useAdminSettings} from '../settings/requests/use-admin-settings';\nimport {ProgressCircle} from '@ui/progress/progress-circle';\nimport {Settings} from '@ui/settings/settings';\nimport {\n  AdminSettingsWithFiles,\n  useUpdateAdminSettings,\n} from '../settings/requests/use-update-admin-settings';\nimport {DialogTrigger} from '@ui/overlays/dialog/dialog-trigger';\nimport {ImageZoomDialog} from '@ui/overlays/dialog/image-zoom-dialog';\nimport {StaticPageTitle} from '../../seo/static-page-title';\n\nexport function AdsPage() {\n  const query = useAdminSettings();\n\n  return (\n    <div className=\"container mx-auto p-12 md:p-24\">\n      <StaticPageTitle>\n        <Trans message=\"Ads\" />\n      </StaticPageTitle>\n      <h1 className=\"mb-20 text-2xl font-light md:mb-40 md:text-3xl\">\n        <Trans message=\"Predefined Ad slots\" />\n      </h1>\n      {query.isLoading ? (\n        <ProgressCircle isIndeterminate />\n      ) : (\n        <AdsForm defaultValues={query.data?.client.ads || {}} />\n      )}\n    </div>\n  );\n}\n\ninterface AdsFormProps {\n  defaultValues: Settings['ads'];\n}\nfunction AdsForm({defaultValues}: AdsFormProps) {\n  const {\n    admin: {ads},\n  } = useContext(SiteConfigContext);\n\n  const form = useForm<AdminSettingsWithFiles>({\n    defaultValues: {client: {ads: defaultValues}},\n  });\n  const updateSettings = useUpdateAdminSettings(form);\n\n  return (\n    <Form\n      form={form}\n      onSubmit={value => {\n        updateSettings.mutate(value);\n      }}\n    >\n      {ads.map(ad => {\n        return <AdSection key={ad.slot} adConfig={ad} />;\n      })}\n      <FormSwitch\n        name=\"client.ads.disable\"\n        className=\"mb-30\"\n        description={\n          <Trans message=\"Disable all add related functionality across the site.\" />\n        }\n      >\n        <Trans message=\"Disable ads\" />\n      </FormSwitch>\n      <Button\n        type=\"submit\"\n        variant=\"flat\"\n        color=\"primary\"\n        disabled={updateSettings.isPending}\n      >\n        <Trans message=\"Save\" />\n      </Button>\n    </Form>\n  );\n}\n\ninterface AdSectionProps {\n  adConfig: AdConfig;\n}\nfunction AdSection({adConfig}: AdSectionProps) {\n  return (\n    <div className=\"flex items-center gap-24\">\n      <FormTextField\n        className=\"mb-30 flex-auto\"\n        name={`client.${adConfig.slot}`}\n        inputElementType=\"textarea\"\n        rows={8}\n        label={<Trans {...adConfig.description} />}\n      />\n      <DialogTrigger type=\"modal\">\n        <button\n          type=\"button\"\n          className=\"cursor-zoom-in overflow-hidden rounded outline-none transition hover:scale-105 focus-visible:ring max-md:hidden\"\n        >\n          <img\n            src={adConfig.image}\n            className=\"h-[186px] w-auto border\"\n            alt=\"Ad slot example\"\n          />\n        </button>\n        <ImageZoomDialog image={adConfig.image} />\n      </DialogTrigger>\n    </div>\n  );\n}\n","import {NavLink} from 'react-router';\nimport {AppearanceButton} from './appearance-button';\nimport {useAppearanceStore} from './appearance-store';\nimport {Trans} from '@ui/i18n/trans';\nimport {useMemo} from 'react';\nimport {AppearanceEditorLayout} from '@common/admin/appearance/appearance-editor-form';\n\nexport function SectionList() {\n  const sections = useAppearanceStore(s => s.config?.sections);\n  const sortedSection = useMemo(() => {\n    if (!sections) return [];\n    return Object.entries(sections || [])\n      .map(([key, value]) => {\n        return {\n          ...value,\n          key,\n        };\n      })\n      .sort((a, b) => (a?.position || 1) - (b?.position || 1));\n  }, [sections]);\n\n  return (\n    <AppearanceEditorLayout>\n      {sortedSection.map(section => (\n        <AppearanceButton\n          key={section.key}\n          to={section.key}\n          elementType={NavLink}\n        >\n          <Trans {...section.label} />\n        </AppearanceButton>\n      ))}\n    </AppearanceEditorLayout>\n  );\n}\n","import {\n  BackendFilter,\n  FilterControlType,\n  FilterOperator,\n} from '../../datatable/filters/backend-filter';\nimport {message} from '@ui/i18n/message';\nimport {\n  createdAtFilter,\n  updatedAtFilter,\n} from '@common/datatable/filters/timestamp-filters';\n\nexport const RoleIndexPageFilters: BackendFilter[] = [\n  {\n    key: 'type',\n    label: message('Type'),\n    description: message('Type of the role'),\n    defaultOperator: FilterOperator.ne,\n    control: {\n      type: FilterControlType.Select,\n      defaultValue: '01',\n      options: [\n        {\n          key: '01',\n          label: message('Sitewide'),\n          value: 'sitewide',\n        },\n        {\n          key: '02',\n          label: message('Workspace'),\n          value: 'workspace',\n        },\n      ],\n    },\n  },\n  createdAtFilter({\n    description: message('Date role was created'),\n  }),\n  updatedAtFilter({\n    description: message('Date role was last updated'),\n  }),\n];\n","import React, {Fragment} from 'react';\nimport {Link} from 'react-router';\nimport {DataTablePage} from '../../datatable/page/data-table-page';\nimport {IconButton} from '@ui/buttons/icon-button';\nimport {EditIcon} from '@ui/icons/material/Edit';\nimport {FormattedDate} from '@ui/i18n/formatted-date';\nimport {ColumnConfig} from '../../datatable/column-config';\nimport {Trans} from '@ui/i18n/trans';\nimport {Role} from '../../auth/role';\nimport teamSvg from './team.svg';\nimport {DeleteSelectedItemsAction} from '../../datatable/page/delete-selected-items-action';\nimport {DataTableEmptyStateMessage} from '../../datatable/page/data-table-emty-state-message';\nimport {RoleIndexPageFilters} from './role-index-page-filters';\nimport {DataTableExportCsvButton} from '../../datatable/csv-export/data-table-export-csv-button';\nimport {DataTableAddItemButton} from '../../datatable/data-table-add-item-button';\n\nconst columnConfig: ColumnConfig<Role>[] = [\n  {\n    key: 'name',\n    allowsSorting: true,\n    visibleInMode: 'all',\n    header: () => <Trans message=\"Role\" />,\n    body: role => (\n      <div>\n        <div>\n          <Trans message={role.name} />\n        </div>\n        <div className=\"overflow-x-hidden overflow-ellipsis text-xs text-muted\">\n          {role.description ? <Trans message={role.description} /> : undefined}\n        </div>\n      </div>\n    ),\n  },\n  {\n    key: 'type',\n    maxWidth: 'max-w-100',\n    allowsSorting: true,\n    header: () => <Trans message=\"Type\" />,\n    body: role => <Trans message={role.type} />,\n  },\n  {\n    key: 'updated_at',\n    maxWidth: 'max-w-100',\n    allowsSorting: true,\n    header: () => <Trans message=\"Last updated\" />,\n    body: role => <FormattedDate date={role.updated_at} />,\n  },\n  {\n    key: 'actions',\n    header: () => <Trans message=\"Actions\" />,\n    hideHeader: true,\n    visibleInMode: 'all',\n    align: 'end',\n    width: 'w-42 flex-shrink-0',\n    body: role => {\n      return (\n        <Link to={`${role.id}/edit`}>\n          <IconButton size=\"md\" className=\"text-muted\">\n            <EditIcon />\n          </IconButton>\n        </Link>\n      );\n    },\n  },\n];\n\nexport function RolesIndexPage() {\n  return (\n    <DataTablePage\n      endpoint=\"roles\"\n      title={<Trans message=\"Roles\" />}\n      columns={columnConfig}\n      filters={RoleIndexPageFilters}\n      actions={<Actions />}\n      selectedActions={<DeleteSelectedItemsAction />}\n      emptyStateMessage={\n        <DataTableEmptyStateMessage\n          image={teamSvg}\n          title={<Trans message=\"No roles have been created yet\" />}\n          filteringTitle={<Trans message=\"No matching roles\" />}\n        />\n      }\n    />\n  );\n}\n\nfunction Actions() {\n  return (\n    <Fragment>\n      <DataTableExportCsvButton endpoint=\"roles/csv/export\" />\n      <DataTableAddItemButton elementType={Link} to=\"new\">\n        <Trans message=\"Add new role\" />\n      </DataTableAddItemButton>\n    </Fragment>\n  );\n}\n","import {useQuery} from '@tanstack/react-query';\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\nimport {apiClient} from '@common/http/query-client';\nimport {Role} from '@common/auth/role';\nimport {useParams} from 'react-router';\n\nconst Endpoint = (id: number | string) => `roles/${id}`;\n\nexport interface FetchRoleResponse extends BackendResponse {\n  role: Role;\n}\n\nexport function useRole() {\n  const {roleId} = useParams();\n  return useQuery({\n    queryKey: [Endpoint(roleId!)],\n    queryFn: () => fetchRole(roleId!),\n  });\n}\n\nfunction fetchRole(roleId: number | string): Promise<FetchRoleResponse> {\n  return apiClient.get(Endpoint(roleId)).then(response => response.data);\n}\n","import {useMutation} from '@tanstack/react-query';\nimport {apiClient, queryClient} from '@common/http/query-client';\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\nimport {toast} from '@ui/toast/toast';\nimport {Role} from '@common/auth/role';\nimport {useTrans} from '@ui/i18n/use-trans';\nimport {message} from '@ui/i18n/message';\nimport {DatatableDataQueryKey} from '@common/datatable/requests/paginated-resources';\nimport {showHttpErrorToast} from '@common/http/show-http-error-toast';\nimport {useNavigate} from '@common/ui/navigation/use-navigate';\n\ninterface Response extends BackendResponse {\n  role: Role;\n}\n\ninterface Payload extends Partial<Role> {\n  id: number;\n}\n\nconst Endpoint = (id: number) => `roles/${id}`;\n\nexport function useUpdateRole() {\n  const {trans} = useTrans();\n  const navigate = useNavigate();\n  return useMutation({\n    mutationFn: (payload: Payload) => updateRole(payload),\n    onSuccess: response => {\n      toast(trans(message('Role updated')));\n      queryClient.invalidateQueries({queryKey: [Endpoint(response.role.id)]});\n      queryClient.invalidateQueries({queryKey: DatatableDataQueryKey('roles')});\n      navigate('/admin/roles');\n    },\n    onError: err => showHttpErrorToast(err),\n  });\n}\n\nfunction updateRole({id, ...payload}: Payload): Promise<Response> {\n  return apiClient.put(Endpoint(id), payload).then(r => r.data);\n}\n","import {Role} from '@common/auth/role';\nimport {useTrans} from '@ui/i18n/use-trans';\nimport {useFormContext} from 'react-hook-form';\nimport {FormTextField} from '@ui/forms/input-field/text-field/text-field';\nimport {Trans} from '@ui/i18n/trans';\nimport {message} from '@ui/i18n/message';\nimport {FormSelect} from '@ui/forms/select/select';\nimport {Item} from '@ui/forms/listbox/item';\nimport {FormSwitch} from '@ui/forms/toggle/switch';\nimport {FormPermissionSelector} from '@common/auth/ui/permission-selector';\nimport {useSettings} from '@ui/settings/use-settings';\nimport {Button} from '@ui/buttons/button';\n\ninterface CrupdateRolePageSettingsPanelProps {\n  isInternal?: boolean;\n}\nexport function CrupdateRolePageSettingsPanel({\n  isInternal = false,\n}: CrupdateRolePageSettingsPanelProps) {\n  const {trans} = useTrans();\n  const {workspaces} = useSettings();\n  const {watch, setValue} = useFormContext<Role>();\n  const watchedType = watch('type');\n\n  return (\n    <>\n      <FormTextField\n        label={<Trans message=\"Name\" />}\n        name=\"name\"\n        className=\"mb-20\"\n        required\n      />\n      <FormTextField\n        label={<Trans message=\"Description\" />}\n        name=\"description\"\n        inputElementType=\"textarea\"\n        placeholder={trans(message('Role description...'))}\n        rows={4}\n        className=\"mb-20\"\n      />\n      {workspaces.integrated && (\n        <FormSelect\n          label={<Trans message=\"Type\" />}\n          name=\"type\"\n          selectionMode=\"single\"\n          className=\"mb-20\"\n          description={\n            <Trans message=\"Whether this role will be assigned to users globally on the site or only within workspaces.\" />\n          }\n        >\n          <Item value=\"sitewide\">\n            <Trans message=\"Sitewide\" />\n          </Item>\n          <Item value=\"workspace\">\n            <Trans message=\"Workspace\" />\n          </Item>\n        </FormSelect>\n      )}\n      {!isInternal && (\n        <>\n          <FormSwitch\n            name=\"default\"\n            className=\"mb-20\"\n            description={\n              <Trans message=\"Assign this role to new users automatically.\" />\n            }\n          >\n            <Trans message=\"Default\" />\n          </FormSwitch>\n          {watchedType === 'sitewide' && (\n            <FormSwitch\n              name=\"guests\"\n              description={\n                <Trans message=\"Assign this role to guests (not logged in users).\" />\n              }\n            >\n              <Trans message=\"Guests\" />\n            </FormSwitch>\n          )}\n        </>\n      )}\n      <div className=\"mb-14 mt-30 flex items-end justify-between gap-12\">\n        <h2 className=\"text-lg leading-tight\">\n          <Trans message=\"Permissions\" />\n        </h2>\n        <Button\n          variant=\"outline\"\n          size=\"xs\"\n          onClick={() => setValue('permissions', [])}\n        >\n          <Trans message=\"Remove all\" />\n        </Button>\n      </div>\n      <FormPermissionSelector\n        name=\"permissions\"\n        valueListKey={\n          watchedType === 'sitewide' ? 'permissions' : 'workspacePermissions'\n        }\n      />\n    </>\n  );\n}\n","import {Dialog} from '@ui/overlays/dialog/dialog';\nimport {DialogHeader} from '@ui/overlays/dialog/dialog-header';\nimport {Trans} from '@ui/i18n/trans';\nimport {DialogBody} from '@ui/overlays/dialog/dialog-body';\nimport {TextField} from '@ui/forms/input-field/text-field/text-field';\nimport {SearchIcon} from '@ui/icons/material/Search';\nimport {useState} from 'react';\nimport {useTrans} from '@ui/i18n/use-trans';\nimport {message} from '@ui/i18n/message';\nimport {Avatar} from '@ui/avatar/avatar';\nimport {NormalizedModel} from '@ui/types/normalized-model';\nimport {IllustratedMessage} from '@ui/images/illustrated-message';\nimport {SvgImage} from '@ui/images/svg-image';\nimport teamSvg from '../admin/roles/team.svg';\nimport {useDialogContext} from '@ui/overlays/dialog/dialog-context';\nimport {useNormalizedModels} from '../ui/normalized-model/use-normalized-models';\nimport {DialogFooter} from '@ui/overlays/dialog/dialog-footer';\nimport {Button} from '@ui/buttons/button';\nimport clsx from 'clsx';\n\ninterface SingleProps<T extends NormalizedModel> {\n  multiple?: false;\n}\n\ninterface MultipleProps<T extends NormalizedModel> {\n  multiple?: true;\n}\n\nexport function SelectUserDialog<T extends NormalizedModel>({\n  multiple = false,\n  endpoint = 'normalized-models/user',\n}: (MultipleProps<T> | SingleProps<T>) & {endpoint?: string}) {\n  const {close} = useDialogContext();\n  const [searchTerm, setSearchTerm] = useState<string>('');\n  const {trans} = useTrans();\n  const query = useNormalizedModels(endpoint, {\n    query: searchTerm,\n    perPage: 14,\n  });\n  const users = query.data?.results || [];\n  const [selectedUsers, setSelectedUsers] = useState<T[]>([]);\n\n  const emptyStateMessage = (\n    <IllustratedMessage\n      className=\"pt-20\"\n      size=\"sm\"\n      title={<Trans message=\"No matching users\" />}\n      description={<Trans message=\"Try another search query\" />}\n      image={<SvgImage src={teamSvg} />}\n    />\n  );\n\n  return (\n    <Dialog>\n      <DialogHeader>\n        {multiple ? (\n          <Trans message=\"Select users\" />\n        ) : (\n          <Trans message=\"Select a user\" />\n        )}\n      </DialogHeader>\n      <DialogBody>\n        <TextField\n          autoFocus\n          size=\"sm\"\n          className=\"mb-20\"\n          startAdornment={<SearchIcon />}\n          placeholder={trans(message('Search for user by name or email'))}\n          value={searchTerm}\n          onChange={e => {\n            setSearchTerm(e.target.value);\n          }}\n        />\n        {!query.isLoading && !users.length && emptyStateMessage}\n        <div className=\"grid grid-cols-2 gap-x-10\">\n          {users.map(user => (\n            <UserListItem\n              isSelected={!!selectedUsers.find(u => u.id === user.id)}\n              key={user.id}\n              user={user}\n              onSelected={user => {\n                if (multiple) {\n                  if (selectedUsers.find(u => u.id === user.id)) {\n                    setSelectedUsers(\n                      selectedUsers.filter(u => u.id !== user.id),\n                    );\n                  } else {\n                    setSelectedUsers([...selectedUsers, user as T]);\n                  }\n                } else {\n                  close(user);\n                }\n              }}\n            />\n          ))}\n        </div>\n      </DialogBody>\n      {multiple && (\n        <DialogFooter>\n          <Button onClick={() => close()}>\n            <Trans message=\"Cancel\" />\n          </Button>\n          <Button\n            variant=\"flat\"\n            color=\"primary\"\n            onClick={() => close(selectedUsers)}\n            disabled={!selectedUsers.length}\n          >\n            <Trans message=\"Select\" />\n          </Button>\n        </DialogFooter>\n      )}\n    </Dialog>\n  );\n}\n\ninterface UserListItemProps {\n  isSelected: boolean;\n  user: NormalizedModel;\n  onSelected: (user: NormalizedModel) => void;\n}\nfunction UserListItem({user, onSelected, isSelected}: UserListItemProps) {\n  return (\n    <div\n      key={user.id}\n      className={clsx(\n        'flex items-center gap-10 rounded border-1 p-10 outline-none ring-offset-4 focus-visible:ring',\n        isSelected\n          ? 'border-primary bg-primary/5 hover:bg-primary/10'\n          : 'border-transparent hover:bg-hover',\n      )}\n      role=\"button\"\n      tabIndex={0}\n      onClick={() => {\n        onSelected(user);\n      }}\n      onKeyDown={e => {\n        if (e.key === 'Enter' || e.key === ' ') {\n          e.preventDefault();\n          onSelected(user);\n        }\n      }}\n    >\n      <Avatar src={user.image} label={user.name} circle />\n      <div className=\"overflow-hidden\">\n        <div className=\"overflow-hidden text-ellipsis\">{user.name}</div>\n        <div className=\"overflow-hidden text-ellipsis text-muted\">\n          {user.description}\n        </div>\n      </div>\n    </div>\n  );\n}\n","import {useMutation} from '@tanstack/react-query';\nimport {apiClient} from '@common/http/query-client';\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\nimport {toast} from '@ui/toast/toast';\nimport {message} from '@ui/i18n/message';\nimport {Role} from '@common/auth/role';\nimport {showHttpErrorToast} from '@common/http/show-http-error-toast';\n\ninterface Response extends BackendResponse {}\n\ninterface Payload {\n  userIds: number[];\n}\n\nexport function useRemoveUsersFromRole(role: Role) {\n  return useMutation({\n    mutationFn: ({userIds}: Payload) =>\n      removeUsersFromRole({userIds, roleId: role.id}),\n    onSuccess: (response, payload) => {\n      toast(\n        message('Removed [one 1 user|other :count users] from “{role}“', {\n          values: {count: payload.userIds.length, role: role.name},\n        }),\n      );\n    },\n    onError: err => showHttpErrorToast(err),\n  });\n}\n\nfunction removeUsersFromRole({\n  roleId,\n  userIds,\n}: Payload & {roleId: number}): Promise<Response> {\n  return apiClient\n    .post(`roles/${roleId}/remove-users`, {userIds})\n    .then(r => r.data);\n}\n","import {useMutation} from '@tanstack/react-query';\nimport {apiClient} from '@common/http/query-client';\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\nimport {toast} from '@ui/toast/toast';\nimport {message} from '@ui/i18n/message';\nimport {Role} from '@common/auth/role';\nimport {showHttpErrorToast} from '@common/http/show-http-error-toast';\n\ninterface Response extends BackendResponse {}\n\ninterface Payload {\n  userIds: number[];\n}\n\nexport function useAddUsersToRole(role: Role) {\n  return useMutation({\n    mutationFn: ({userIds}: Payload) =>\n      addUsersToRole({userIds, roleId: role.id}),\n    onSuccess: (response, payload) => {\n      toast(\n        message('Assigned [one 1 user|other :count users] to {role}', {\n          values: {count: payload.userIds.length, role: role.name},\n        }),\n      );\n    },\n    onError: err => showHttpErrorToast(err),\n  });\n}\n\nfunction addUsersToRole({\n  roleId,\n  userIds,\n}: Payload & {roleId: number}): Promise<Response> {\n  return apiClient\n    .post(`roles/${roleId}/add-users`, {userIds})\n    .then(r => r.data);\n}\n","import {Role} from '@common/auth/role';\nimport {ColumnConfig} from '@common/datatable/column-config';\nimport {User} from '@ui/types/user';\nimport {Trans} from '@ui/i18n/trans';\nimport {NameWithAvatar} from '@common/datatable/column-templates/name-with-avatar';\nimport {FormattedDate} from '@ui/i18n/formatted-date';\nimport React from 'react';\nimport teamSvg from '../team.svg';\nimport {DialogTrigger} from '@ui/overlays/dialog/dialog-trigger';\nimport {Button} from '@ui/buttons/button';\nimport {SelectUserDialog} from '@common/users/select-user-dialog';\nimport {queryClient} from '@common/http/query-client';\nimport {DatatableDataQueryKey} from '@common/datatable/requests/paginated-resources';\nimport {DataTableEmptyStateMessage} from '@common/datatable/page/data-table-emty-state-message';\nimport {useDataTable} from '@common/datatable/page/data-table-context';\nimport {ConfirmationDialog} from '@ui/overlays/dialog/confirmation-dialog';\nimport {useRemoveUsersFromRole} from '../requests/use-remove-users-from-role';\nimport {useAddUsersToRole} from '../requests/use-add-users-to-role';\nimport {DataTable} from '@common/datatable/data-table';\nimport {useIsMobileMediaQuery} from '@ui/utils/hooks/is-mobile-media-query';\n\nconst userColumn: ColumnConfig<User> = {\n  key: 'name',\n  allowsSorting: true,\n  sortingKey: 'email',\n  width: 'flex-3 min-w-200',\n  header: () => <Trans message=\"User\" />,\n  body: user => (\n    <NameWithAvatar\n      image={user.image}\n      label={user.name}\n      description={user.email}\n    />\n  ),\n};\n\nconst desktopColumns: ColumnConfig<User>[] = [\n  userColumn,\n  {\n    key: 'first_name',\n    allowsSorting: true,\n    header: () => <Trans message=\"First name\" />,\n    body: user => user.first_name,\n  },\n  {\n    key: 'last_name',\n    allowsSorting: true,\n    header: () => <Trans message=\"Last name\" />,\n    body: user => user.last_name,\n  },\n  {\n    key: 'created_at',\n    allowsSorting: true,\n    header: () => <Trans message=\"Assigned at\" />,\n    body: user => <FormattedDate date={user.created_at} />,\n  },\n];\n\nconst mobileColumns: ColumnConfig<User>[] = [userColumn];\n\ninterface CrupdateRolePageUsersPanelProps {\n  role: Role;\n}\nexport function EditRolePageUsersPanel({\n  role,\n}: CrupdateRolePageUsersPanelProps) {\n  const isMobile = useIsMobileMediaQuery();\n\n  if (role.guests || role.type === 'workspace') {\n    return (\n      <div className=\"pb-10 pt-30\">\n        <DataTableEmptyStateMessage\n          image={teamSvg}\n          title={<Trans message=\"Users can't be assigned to this role\" />}\n        />\n      </div>\n    );\n  }\n\n  return (\n    <DataTable\n      endpoint=\"users\"\n      columns={isMobile ? mobileColumns : desktopColumns}\n      queryParams={{roleId: `${role.id}`}}\n      actions={<AssignUserAction role={role} />}\n      selectedActions={<RemoveUsersAction role={role} />}\n      emptyStateMessage={\n        <DataTableEmptyStateMessage\n          image={teamSvg}\n          title={\n            <Trans message=\"No users have been assigned to this role yet\" />\n          }\n          filteringTitle={<Trans message=\"No matching users\" />}\n        />\n      }\n    />\n  );\n}\n\ninterface AssignUserActionProps {\n  role: Role;\n}\nfunction AssignUserAction({role}: AssignUserActionProps) {\n  const addUsers = useAddUsersToRole(role);\n  return (\n    <DialogTrigger\n      type=\"modal\"\n      onClose={user => {\n        if (user) {\n          addUsers.mutate(\n            {userIds: [user.id as number]},\n            {\n              onSuccess: () => {\n                queryClient.invalidateQueries({\n                  queryKey: DatatableDataQueryKey('users', {\n                    roleId: `${role.id}`,\n                  }),\n                });\n              },\n            },\n          );\n        }\n      }}\n    >\n      <Button variant=\"flat\" color=\"primary\" disabled={addUsers.isPending}>\n        <Trans message=\"Assign user\" />\n      </Button>\n      <SelectUserDialog />\n    </DialogTrigger>\n  );\n}\n\ntype RemoveUsersActionProps = {\n  role: Role;\n};\nexport function RemoveUsersAction({role}: RemoveUsersActionProps) {\n  const removeUsers = useRemoveUsersFromRole(role);\n  const {selectedRows} = useDataTable();\n\n  return (\n    <DialogTrigger\n      type=\"modal\"\n      onClose={isConfirmed => {\n        if (isConfirmed) {\n          removeUsers.mutate(\n            {userIds: selectedRows as number[]},\n            {\n              onSuccess: () => {\n                queryClient.invalidateQueries({\n                  queryKey: DatatableDataQueryKey('users', {\n                    roleId: `${role.id}`,\n                  }),\n                });\n              },\n            },\n          );\n        }\n      }}\n    >\n      <Button variant=\"flat\" color=\"danger\" disabled={removeUsers.isPending}>\n        <Trans message=\"Remove users\" />\n      </Button>\n      <ConfirmationDialog\n        title={\n          <Trans\n            message=\"Remove [one 1 user|other :count users] from “:name“ role?\"\n            values={{count: selectedRows.length, name: role.name}}\n          />\n        }\n        body={<Trans message=\"This will permanently remove the users.\" />}\n        confirm={<Trans message=\"Remove\" />}\n        isDanger\n      />\n    </DialogTrigger>\n  );\n}\n","import {useRole} from '../requests/use-role';\nimport {FullPageLoader} from '@ui/progress/full-page-loader';\nimport {Role} from '@common/auth/role';\nimport {Trans} from '@ui/i18n/trans';\nimport {useForm} from 'react-hook-form';\nimport {Tabs} from '@ui/tabs/tabs';\nimport {Tab} from '@ui/tabs/tab';\nimport {TabList} from '@ui/tabs/tab-list';\nimport {TabPanel, TabPanels} from '@ui/tabs/tab-panels';\nimport {useUpdateRole} from '../requests/use-update-role';\nimport {CrupdateResourceLayout} from '../../crupdate-resource-layout';\nimport {CrupdateRolePageSettingsPanel} from './crupdate-role-settings-panel';\nimport {EditRolePageUsersPanel} from './edit-role-page-users-panel';\n\nexport function EditRolePage() {\n  const query = useRole();\n\n  if (query.status !== 'success') {\n    return <FullPageLoader />;\n  }\n\n  return <PageContent role={query.data.role} />;\n}\n\ninterface PageContentProps {\n  role: Role;\n}\nfunction PageContent({role}: PageContentProps) {\n  const form = useForm<Role>({defaultValues: role});\n  const updateRole = useUpdateRole();\n\n  return (\n    <CrupdateResourceLayout\n      form={form}\n      onSubmit={values => {\n        updateRole.mutate(values);\n      }}\n      title={<Trans message=\"Edit “:name“ role\" values={{name: role.name}} />}\n      isLoading={updateRole.isPending}\n    >\n      <Tabs isLazy>\n        <TabList>\n          <Tab>\n            <Trans message=\"Settings\" />\n          </Tab>\n          <Tab>\n            <Trans message=\"Users\" />\n          </Tab>\n        </TabList>\n        <TabPanels className=\"pt-20\">\n          <TabPanel>\n            <CrupdateRolePageSettingsPanel isInternal={role.internal} />\n          </TabPanel>\n          <TabPanel>\n            <EditRolePageUsersPanel role={role} />\n          </TabPanel>\n        </TabPanels>\n      </Tabs>\n    </CrupdateResourceLayout>\n  );\n}\n","import {useMutation} from '@tanstack/react-query';\nimport {apiClient, queryClient} from '@common/http/query-client';\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\nimport {toast} from '@ui/toast/toast';\nimport {Role} from '@common/auth/role';\nimport {useTrans} from '@ui/i18n/use-trans';\nimport {message} from '@ui/i18n/message';\nimport {DatatableDataQueryKey} from '@common/datatable/requests/paginated-resources';\nimport {onFormQueryError} from '@common/errors/on-form-query-error';\nimport {UseFormReturn} from 'react-hook-form';\n\ninterface Response extends BackendResponse {\n  role: Role;\n}\n\nexport interface CreateRolePayload extends Partial<Role> {}\n\nconst Endpoint = 'roles';\n\nexport function useCreateRole(form: UseFormReturn<CreateRolePayload>) {\n  const {trans} = useTrans();\n  return useMutation({\n    mutationFn: (payload: CreateRolePayload) => createRole(payload),\n    onSuccess: () => {\n      toast(trans(message('Created new role')));\n      queryClient.invalidateQueries({queryKey: DatatableDataQueryKey('roles')});\n    },\n    onError: r => onFormQueryError(r, form),\n  });\n}\n\nfunction createRole({id, ...payload}: CreateRolePayload): Promise<Response> {\n  return apiClient.post(Endpoint, payload).then(r => r.data);\n}\n","import {useForm} from 'react-hook-form';\nimport {CrupdateResourceLayout} from '../../crupdate-resource-layout';\nimport {Trans} from '@ui/i18n/trans';\nimport {CrupdateRolePageSettingsPanel} from './crupdate-role-settings-panel';\nimport {CreateRolePayload, useCreateRole} from '../requests/user-create-role';\nimport {useNavigate} from '@common/ui/navigation/use-navigate';\n\nexport function CreateRolePage() {\n  const form = useForm<CreateRolePayload>({defaultValues: {type: 'sitewide'}});\n  const createRole = useCreateRole(form);\n  const navigate = useNavigate();\n\n  return (\n    <CrupdateResourceLayout\n      form={form}\n      onSubmit={values => {\n        createRole.mutate(values, {\n          onSuccess: response => {\n            navigate(`/admin/roles/${response.role.id}/edit`);\n          },\n        });\n      }}\n      title={<Trans message=\"Add new role\" />}\n      isLoading={createRole.isPending}\n    >\n      <CrupdateRolePageSettingsPanel />\n    </CrupdateResourceLayout>\n  );\n}\n","import {\n  BackendFilter,\n  FilterControlType,\n  FilterOperator,\n} from '../../datatable/filters/backend-filter';\nimport {message} from '@ui/i18n/message';\nimport {TagType} from '../../core/settings/site-config-context';\nimport {\n  createdAtFilter,\n  updatedAtFilter,\n} from '@common/datatable/filters/timestamp-filters';\n\nexport const TagIndexPageFilters = (types: TagType[]): BackendFilter[] => {\n  return [\n    {\n      key: 'type',\n      label: message('Type'),\n      description: message('Type of the tag'),\n      defaultOperator: FilterOperator.ne,\n      control: {\n        type: FilterControlType.Select,\n        defaultValue: types[0].name,\n        options: types.map(type => ({\n          key: type.name,\n          label: message(type.name),\n          value: type.name,\n        })),\n      },\n    },\n    createdAtFilter({\n      description: message('Date tag was created'),\n    }),\n    updatedAtFilter({\n      description: message('Date tag was last updated'),\n    }),\n  ];\n};\n","export default \"__VITE_ASSET__8de61ea9__\"","import {Tag} from '../../tags/tag';\nimport {UseFormReturn} from 'react-hook-form';\nimport {Form} from '@ui/forms/form';\nimport {FormTextField} from '@ui/forms/input-field/text-field/text-field';\nimport {FormSelect} from '@ui/forms/select/select';\nimport {Trans} from '@ui/i18n/trans';\nimport {Item} from '@ui/forms/listbox/item';\nimport {useContext} from 'react';\nimport {SiteConfigContext} from '../../core/settings/site-config-context';\n\ninterface CrupdateTagFormProps {\n  onSubmit: (values: Partial<Tag>) => void;\n  formId: string;\n  form: UseFormReturn<Partial<Tag>>;\n}\nexport function CrupdateTagForm({\n  form,\n  onSubmit,\n  formId,\n}: CrupdateTagFormProps) {\n  const {\n    tags: {types},\n  } = useContext(SiteConfigContext);\n  const watchedType = form.watch('type');\n  const isSystem = !!types.find(t => t.name === watchedType && t.system);\n\n  return (\n    <Form id={formId} form={form} onSubmit={onSubmit}>\n      <FormTextField\n        name=\"name\"\n        label={<Trans message=\"Name\" />}\n        description={<Trans message=\"Unique tag identifier.\" />}\n        className=\"mb-20\"\n        required\n        autoFocus\n      />\n      <FormTextField\n        name=\"display_name\"\n        label={<Trans message=\"Display name\" />}\n        description={<Trans message=\"User friendly tag name.\" />}\n        className=\"mb-20\"\n      />\n      <FormSelect\n        label={<Trans message=\"Type\" />}\n        name=\"type\"\n        selectionMode=\"single\"\n        disabled={isSystem}\n      >\n        {types\n          .filter(t => !t.system)\n          .map(type => (\n            <Item key={type.name} value={type.name}>\n              <Trans message={type.name} />\n            </Item>\n          ))}\n      </FormSelect>\n    </Form>\n  );\n}\n","\n;(function (name, root, factory) {\n  if (typeof exports === 'object') {\n    module.exports = factory()\n    module.exports['default'] = factory()\n  }\n  /* istanbul ignore next */\n  else if (typeof define === 'function' && define.amd) {\n    define(factory)\n  }\n  else {\n    root[name] = factory()\n  }\n}('slugify', this, function () {\n  var charMap = JSON.parse('{\"$\":\"dollar\",\"%\":\"percent\",\"&\":\"and\",\"<\":\"less\",\">\":\"greater\",\"|\":\"or\",\"¢\":\"cent\",\"£\":\"pound\",\"¤\":\"currency\",\"¥\":\"yen\",\"©\":\"(c)\",\"ª\":\"a\",\"®\":\"(r)\",\"º\":\"o\",\"À\":\"A\",\"Á\":\"A\",\"Â\":\"A\",\"Ã\":\"A\",\"Ä\":\"A\",\"Å\":\"A\",\"Æ\":\"AE\",\"Ç\":\"C\",\"È\":\"E\",\"É\":\"E\",\"Ê\":\"E\",\"Ë\":\"E\",\"Ì\":\"I\",\"Í\":\"I\",\"Î\":\"I\",\"Ï\":\"I\",\"Ð\":\"D\",\"Ñ\":\"N\",\"Ò\":\"O\",\"Ó\":\"O\",\"Ô\":\"O\",\"Õ\":\"O\",\"Ö\":\"O\",\"Ø\":\"O\",\"Ù\":\"U\",\"Ú\":\"U\",\"Û\":\"U\",\"Ü\":\"U\",\"Ý\":\"Y\",\"Þ\":\"TH\",\"ß\":\"ss\",\"à\":\"a\",\"á\":\"a\",\"â\":\"a\",\"ã\":\"a\",\"ä\":\"a\",\"å\":\"a\",\"æ\":\"ae\",\"ç\":\"c\",\"è\":\"e\",\"é\":\"e\",\"ê\":\"e\",\"ë\":\"e\",\"ì\":\"i\",\"í\":\"i\",\"î\":\"i\",\"ï\":\"i\",\"ð\":\"d\",\"ñ\":\"n\",\"ò\":\"o\",\"ó\":\"o\",\"ô\":\"o\",\"õ\":\"o\",\"ö\":\"o\",\"ø\":\"o\",\"ù\":\"u\",\"ú\":\"u\",\"û\":\"u\",\"ü\":\"u\",\"ý\":\"y\",\"þ\":\"th\",\"ÿ\":\"y\",\"Ā\":\"A\",\"ā\":\"a\",\"Ă\":\"A\",\"ă\":\"a\",\"Ą\":\"A\",\"ą\":\"a\",\"Ć\":\"C\",\"ć\":\"c\",\"Č\":\"C\",\"č\":\"c\",\"Ď\":\"D\",\"ď\":\"d\",\"Đ\":\"DJ\",\"đ\":\"dj\",\"Ē\":\"E\",\"ē\":\"e\",\"Ė\":\"E\",\"ė\":\"e\",\"Ę\":\"e\",\"ę\":\"e\",\"Ě\":\"E\",\"ě\":\"e\",\"Ğ\":\"G\",\"ğ\":\"g\",\"Ģ\":\"G\",\"ģ\":\"g\",\"Ĩ\":\"I\",\"ĩ\":\"i\",\"Ī\":\"i\",\"ī\":\"i\",\"Į\":\"I\",\"į\":\"i\",\"İ\":\"I\",\"ı\":\"i\",\"Ķ\":\"k\",\"ķ\":\"k\",\"Ļ\":\"L\",\"ļ\":\"l\",\"Ľ\":\"L\",\"ľ\":\"l\",\"Ł\":\"L\",\"ł\":\"l\",\"Ń\":\"N\",\"ń\":\"n\",\"Ņ\":\"N\",\"ņ\":\"n\",\"Ň\":\"N\",\"ň\":\"n\",\"Ō\":\"O\",\"ō\":\"o\",\"Ő\":\"O\",\"ő\":\"o\",\"Œ\":\"OE\",\"œ\":\"oe\",\"Ŕ\":\"R\",\"ŕ\":\"r\",\"Ř\":\"R\",\"ř\":\"r\",\"Ś\":\"S\",\"ś\":\"s\",\"Ş\":\"S\",\"ş\":\"s\",\"Š\":\"S\",\"š\":\"s\",\"Ţ\":\"T\",\"ţ\":\"t\",\"Ť\":\"T\",\"ť\":\"t\",\"Ũ\":\"U\",\"ũ\":\"u\",\"Ū\":\"u\",\"ū\":\"u\",\"Ů\":\"U\",\"ů\":\"u\",\"Ű\":\"U\",\"ű\":\"u\",\"Ų\":\"U\",\"ų\":\"u\",\"Ŵ\":\"W\",\"ŵ\":\"w\",\"Ŷ\":\"Y\",\"ŷ\":\"y\",\"Ÿ\":\"Y\",\"Ź\":\"Z\",\"ź\":\"z\",\"Ż\":\"Z\",\"ż\":\"z\",\"Ž\":\"Z\",\"ž\":\"z\",\"Ə\":\"E\",\"ƒ\":\"f\",\"Ơ\":\"O\",\"ơ\":\"o\",\"Ư\":\"U\",\"ư\":\"u\",\"ǈ\":\"LJ\",\"ǉ\":\"lj\",\"ǋ\":\"NJ\",\"ǌ\":\"nj\",\"Ș\":\"S\",\"ș\":\"s\",\"Ț\":\"T\",\"ț\":\"t\",\"ə\":\"e\",\"˚\":\"o\",\"Ά\":\"A\",\"Έ\":\"E\",\"Ή\":\"H\",\"Ί\":\"I\",\"Ό\":\"O\",\"Ύ\":\"Y\",\"Ώ\":\"W\",\"ΐ\":\"i\",\"Α\":\"A\",\"Β\":\"B\",\"Γ\":\"G\",\"Δ\":\"D\",\"Ε\":\"E\",\"Ζ\":\"Z\",\"Η\":\"H\",\"Θ\":\"8\",\"Ι\":\"I\",\"Κ\":\"K\",\"Λ\":\"L\",\"Μ\":\"M\",\"Ν\":\"N\",\"Ξ\":\"3\",\"Ο\":\"O\",\"Π\":\"P\",\"Ρ\":\"R\",\"Σ\":\"S\",\"Τ\":\"T\",\"Υ\":\"Y\",\"Φ\":\"F\",\"Χ\":\"X\",\"Ψ\":\"PS\",\"Ω\":\"W\",\"Ϊ\":\"I\",\"Ϋ\":\"Y\",\"ά\":\"a\",\"έ\":\"e\",\"ή\":\"h\",\"ί\":\"i\",\"ΰ\":\"y\",\"α\":\"a\",\"β\":\"b\",\"γ\":\"g\",\"δ\":\"d\",\"ε\":\"e\",\"ζ\":\"z\",\"η\":\"h\",\"θ\":\"8\",\"ι\":\"i\",\"κ\":\"k\",\"λ\":\"l\",\"μ\":\"m\",\"ν\":\"n\",\"ξ\":\"3\",\"ο\":\"o\",\"π\":\"p\",\"ρ\":\"r\",\"ς\":\"s\",\"σ\":\"s\",\"τ\":\"t\",\"υ\":\"y\",\"φ\":\"f\",\"χ\":\"x\",\"ψ\":\"ps\",\"ω\":\"w\",\"ϊ\":\"i\",\"ϋ\":\"y\",\"ό\":\"o\",\"ύ\":\"y\",\"ώ\":\"w\",\"Ё\":\"Yo\",\"Ђ\":\"DJ\",\"Є\":\"Ye\",\"І\":\"I\",\"Ї\":\"Yi\",\"Ј\":\"J\",\"Љ\":\"LJ\",\"Њ\":\"NJ\",\"Ћ\":\"C\",\"Џ\":\"DZ\",\"А\":\"A\",\"Б\":\"B\",\"В\":\"V\",\"Г\":\"G\",\"Д\":\"D\",\"Е\":\"E\",\"Ж\":\"Zh\",\"З\":\"Z\",\"И\":\"I\",\"Й\":\"J\",\"К\":\"K\",\"Л\":\"L\",\"М\":\"M\",\"Н\":\"N\",\"О\":\"O\",\"П\":\"P\",\"Р\":\"R\",\"С\":\"S\",\"Т\":\"T\",\"У\":\"U\",\"Ф\":\"F\",\"Х\":\"H\",\"Ц\":\"C\",\"Ч\":\"Ch\",\"Ш\":\"Sh\",\"Щ\":\"Sh\",\"Ъ\":\"U\",\"Ы\":\"Y\",\"Ь\":\"\",\"Э\":\"E\",\"Ю\":\"Yu\",\"Я\":\"Ya\",\"а\":\"a\",\"б\":\"b\",\"в\":\"v\",\"г\":\"g\",\"д\":\"d\",\"е\":\"e\",\"ж\":\"zh\",\"з\":\"z\",\"и\":\"i\",\"й\":\"j\",\"к\":\"k\",\"л\":\"l\",\"м\":\"m\",\"н\":\"n\",\"о\":\"o\",\"п\":\"p\",\"р\":\"r\",\"с\":\"s\",\"т\":\"t\",\"у\":\"u\",\"ф\":\"f\",\"х\":\"h\",\"ц\":\"c\",\"ч\":\"ch\",\"ш\":\"sh\",\"щ\":\"sh\",\"ъ\":\"u\",\"ы\":\"y\",\"ь\":\"\",\"э\":\"e\",\"ю\":\"yu\",\"я\":\"ya\",\"ё\":\"yo\",\"ђ\":\"dj\",\"є\":\"ye\",\"і\":\"i\",\"ї\":\"yi\",\"ј\":\"j\",\"љ\":\"lj\",\"њ\":\"nj\",\"ћ\":\"c\",\"ѝ\":\"u\",\"џ\":\"dz\",\"Ґ\":\"G\",\"ґ\":\"g\",\"Ғ\":\"GH\",\"ғ\":\"gh\",\"Қ\":\"KH\",\"қ\":\"kh\",\"Ң\":\"NG\",\"ң\":\"ng\",\"Ү\":\"UE\",\"ү\":\"ue\",\"Ұ\":\"U\",\"ұ\":\"u\",\"Һ\":\"H\",\"һ\":\"h\",\"Ә\":\"AE\",\"ә\":\"ae\",\"Ө\":\"OE\",\"ө\":\"oe\",\"Ա\":\"A\",\"Բ\":\"B\",\"Գ\":\"G\",\"Դ\":\"D\",\"Ե\":\"E\",\"Զ\":\"Z\",\"Է\":\"E\\'\",\"Ը\":\"Y\\'\",\"Թ\":\"T\\'\",\"Ժ\":\"JH\",\"Ի\":\"I\",\"Լ\":\"L\",\"Խ\":\"X\",\"Ծ\":\"C\\'\",\"Կ\":\"K\",\"Հ\":\"H\",\"Ձ\":\"D\\'\",\"Ղ\":\"GH\",\"Ճ\":\"TW\",\"Մ\":\"M\",\"Յ\":\"Y\",\"Ն\":\"N\",\"Շ\":\"SH\",\"Չ\":\"CH\",\"Պ\":\"P\",\"Ջ\":\"J\",\"Ռ\":\"R\\'\",\"Ս\":\"S\",\"Վ\":\"V\",\"Տ\":\"T\",\"Ր\":\"R\",\"Ց\":\"C\",\"Փ\":\"P\\'\",\"Ք\":\"Q\\'\",\"Օ\":\"O\\'\\'\",\"Ֆ\":\"F\",\"և\":\"EV\",\"ء\":\"a\",\"آ\":\"aa\",\"أ\":\"a\",\"ؤ\":\"u\",\"إ\":\"i\",\"ئ\":\"e\",\"ا\":\"a\",\"ب\":\"b\",\"ة\":\"h\",\"ت\":\"t\",\"ث\":\"th\",\"ج\":\"j\",\"ح\":\"h\",\"خ\":\"kh\",\"د\":\"d\",\"ذ\":\"th\",\"ر\":\"r\",\"ز\":\"z\",\"س\":\"s\",\"ش\":\"sh\",\"ص\":\"s\",\"ض\":\"dh\",\"ط\":\"t\",\"ظ\":\"z\",\"ع\":\"a\",\"غ\":\"gh\",\"ف\":\"f\",\"ق\":\"q\",\"ك\":\"k\",\"ل\":\"l\",\"م\":\"m\",\"ن\":\"n\",\"ه\":\"h\",\"و\":\"w\",\"ى\":\"a\",\"ي\":\"y\",\"ً\":\"an\",\"ٌ\":\"on\",\"ٍ\":\"en\",\"َ\":\"a\",\"ُ\":\"u\",\"ِ\":\"e\",\"ْ\":\"\",\"٠\":\"0\",\"١\":\"1\",\"٢\":\"2\",\"٣\":\"3\",\"٤\":\"4\",\"٥\":\"5\",\"٦\":\"6\",\"٧\":\"7\",\"٨\":\"8\",\"٩\":\"9\",\"پ\":\"p\",\"چ\":\"ch\",\"ژ\":\"zh\",\"ک\":\"k\",\"گ\":\"g\",\"ی\":\"y\",\"۰\":\"0\",\"۱\":\"1\",\"۲\":\"2\",\"۳\":\"3\",\"۴\":\"4\",\"۵\":\"5\",\"۶\":\"6\",\"۷\":\"7\",\"۸\":\"8\",\"۹\":\"9\",\"฿\":\"baht\",\"ა\":\"a\",\"ბ\":\"b\",\"გ\":\"g\",\"დ\":\"d\",\"ე\":\"e\",\"ვ\":\"v\",\"ზ\":\"z\",\"თ\":\"t\",\"ი\":\"i\",\"კ\":\"k\",\"ლ\":\"l\",\"მ\":\"m\",\"ნ\":\"n\",\"ო\":\"o\",\"პ\":\"p\",\"ჟ\":\"zh\",\"რ\":\"r\",\"ს\":\"s\",\"ტ\":\"t\",\"უ\":\"u\",\"ფ\":\"f\",\"ქ\":\"k\",\"ღ\":\"gh\",\"ყ\":\"q\",\"შ\":\"sh\",\"ჩ\":\"ch\",\"ც\":\"ts\",\"ძ\":\"dz\",\"წ\":\"ts\",\"ჭ\":\"ch\",\"ხ\":\"kh\",\"ჯ\":\"j\",\"ჰ\":\"h\",\"Ṣ\":\"S\",\"ṣ\":\"s\",\"Ẁ\":\"W\",\"ẁ\":\"w\",\"Ẃ\":\"W\",\"ẃ\":\"w\",\"Ẅ\":\"W\",\"ẅ\":\"w\",\"ẞ\":\"SS\",\"Ạ\":\"A\",\"ạ\":\"a\",\"Ả\":\"A\",\"ả\":\"a\",\"Ấ\":\"A\",\"ấ\":\"a\",\"Ầ\":\"A\",\"ầ\":\"a\",\"Ẩ\":\"A\",\"ẩ\":\"a\",\"Ẫ\":\"A\",\"ẫ\":\"a\",\"Ậ\":\"A\",\"ậ\":\"a\",\"Ắ\":\"A\",\"ắ\":\"a\",\"Ằ\":\"A\",\"ằ\":\"a\",\"Ẳ\":\"A\",\"ẳ\":\"a\",\"Ẵ\":\"A\",\"ẵ\":\"a\",\"Ặ\":\"A\",\"ặ\":\"a\",\"Ẹ\":\"E\",\"ẹ\":\"e\",\"Ẻ\":\"E\",\"ẻ\":\"e\",\"Ẽ\":\"E\",\"ẽ\":\"e\",\"Ế\":\"E\",\"ế\":\"e\",\"Ề\":\"E\",\"ề\":\"e\",\"Ể\":\"E\",\"ể\":\"e\",\"Ễ\":\"E\",\"ễ\":\"e\",\"Ệ\":\"E\",\"ệ\":\"e\",\"Ỉ\":\"I\",\"ỉ\":\"i\",\"Ị\":\"I\",\"ị\":\"i\",\"Ọ\":\"O\",\"ọ\":\"o\",\"Ỏ\":\"O\",\"ỏ\":\"o\",\"Ố\":\"O\",\"ố\":\"o\",\"Ồ\":\"O\",\"ồ\":\"o\",\"Ổ\":\"O\",\"ổ\":\"o\",\"Ỗ\":\"O\",\"ỗ\":\"o\",\"Ộ\":\"O\",\"ộ\":\"o\",\"Ớ\":\"O\",\"ớ\":\"o\",\"Ờ\":\"O\",\"ờ\":\"o\",\"Ở\":\"O\",\"ở\":\"o\",\"Ỡ\":\"O\",\"ỡ\":\"o\",\"Ợ\":\"O\",\"ợ\":\"o\",\"Ụ\":\"U\",\"ụ\":\"u\",\"Ủ\":\"U\",\"ủ\":\"u\",\"Ứ\":\"U\",\"ứ\":\"u\",\"Ừ\":\"U\",\"ừ\":\"u\",\"Ử\":\"U\",\"ử\":\"u\",\"Ữ\":\"U\",\"ữ\":\"u\",\"Ự\":\"U\",\"ự\":\"u\",\"Ỳ\":\"Y\",\"ỳ\":\"y\",\"Ỵ\":\"Y\",\"ỵ\":\"y\",\"Ỷ\":\"Y\",\"ỷ\":\"y\",\"Ỹ\":\"Y\",\"ỹ\":\"y\",\"–\":\"-\",\"‘\":\"\\'\",\"’\":\"\\'\",\"“\":\"\\\\\\\"\",\"”\":\"\\\\\\\"\",\"„\":\"\\\\\\\"\",\"†\":\"+\",\"•\":\"*\",\"…\":\"...\",\"₠\":\"ecu\",\"₢\":\"cruzeiro\",\"₣\":\"french franc\",\"₤\":\"lira\",\"₥\":\"mill\",\"₦\":\"naira\",\"₧\":\"peseta\",\"₨\":\"rupee\",\"₩\":\"won\",\"₪\":\"new shequel\",\"₫\":\"dong\",\"€\":\"euro\",\"₭\":\"kip\",\"₮\":\"tugrik\",\"₯\":\"drachma\",\"₰\":\"penny\",\"₱\":\"peso\",\"₲\":\"guarani\",\"₳\":\"austral\",\"₴\":\"hryvnia\",\"₵\":\"cedi\",\"₸\":\"kazakhstani tenge\",\"₹\":\"indian rupee\",\"₺\":\"turkish lira\",\"₽\":\"russian ruble\",\"₿\":\"bitcoin\",\"℠\":\"sm\",\"™\":\"tm\",\"∂\":\"d\",\"∆\":\"delta\",\"∑\":\"sum\",\"∞\":\"infinity\",\"♥\":\"love\",\"元\":\"yuan\",\"円\":\"yen\",\"﷼\":\"rial\",\"ﻵ\":\"laa\",\"ﻷ\":\"laa\",\"ﻹ\":\"lai\",\"ﻻ\":\"la\"}')\n  var locales = JSON.parse('{\"bg\":{\"Й\":\"Y\",\"Ц\":\"Ts\",\"Щ\":\"Sht\",\"Ъ\":\"A\",\"Ь\":\"Y\",\"й\":\"y\",\"ц\":\"ts\",\"щ\":\"sht\",\"ъ\":\"a\",\"ь\":\"y\"},\"de\":{\"Ä\":\"AE\",\"ä\":\"ae\",\"Ö\":\"OE\",\"ö\":\"oe\",\"Ü\":\"UE\",\"ü\":\"ue\",\"ß\":\"ss\",\"%\":\"prozent\",\"&\":\"und\",\"|\":\"oder\",\"∑\":\"summe\",\"∞\":\"unendlich\",\"♥\":\"liebe\"},\"es\":{\"%\":\"por ciento\",\"&\":\"y\",\"<\":\"menor que\",\">\":\"mayor que\",\"|\":\"o\",\"¢\":\"centavos\",\"£\":\"libras\",\"¤\":\"moneda\",\"₣\":\"francos\",\"∑\":\"suma\",\"∞\":\"infinito\",\"♥\":\"amor\"},\"fr\":{\"%\":\"pourcent\",\"&\":\"et\",\"<\":\"plus petit\",\">\":\"plus grand\",\"|\":\"ou\",\"¢\":\"centime\",\"£\":\"livre\",\"¤\":\"devise\",\"₣\":\"franc\",\"∑\":\"somme\",\"∞\":\"infini\",\"♥\":\"amour\"},\"pt\":{\"%\":\"porcento\",\"&\":\"e\",\"<\":\"menor\",\">\":\"maior\",\"|\":\"ou\",\"¢\":\"centavo\",\"∑\":\"soma\",\"£\":\"libra\",\"∞\":\"infinito\",\"♥\":\"amor\"},\"uk\":{\"И\":\"Y\",\"и\":\"y\",\"Й\":\"Y\",\"й\":\"y\",\"Ц\":\"Ts\",\"ц\":\"ts\",\"Х\":\"Kh\",\"х\":\"kh\",\"Щ\":\"Shch\",\"щ\":\"shch\",\"Г\":\"H\",\"г\":\"h\"},\"vi\":{\"Đ\":\"D\",\"đ\":\"d\"},\"da\":{\"Ø\":\"OE\",\"ø\":\"oe\",\"Å\":\"AA\",\"å\":\"aa\",\"%\":\"procent\",\"&\":\"og\",\"|\":\"eller\",\"$\":\"dollar\",\"<\":\"mindre end\",\">\":\"større end\"},\"nb\":{\"&\":\"og\",\"Å\":\"AA\",\"Æ\":\"AE\",\"Ø\":\"OE\",\"å\":\"aa\",\"æ\":\"ae\",\"ø\":\"oe\"},\"it\":{\"&\":\"e\"},\"nl\":{\"&\":\"en\"},\"sv\":{\"&\":\"och\",\"Å\":\"AA\",\"Ä\":\"AE\",\"Ö\":\"OE\",\"å\":\"aa\",\"ä\":\"ae\",\"ö\":\"oe\"}}')\n\n  function replace (string, options) {\n    if (typeof string !== 'string') {\n      throw new Error('slugify: string argument expected')\n    }\n\n    options = (typeof options === 'string')\n      ? {replacement: options}\n      : options || {}\n\n    var locale = locales[options.locale] || {}\n\n    var replacement = options.replacement === undefined ? '-' : options.replacement\n\n    var trim = options.trim === undefined ? true : options.trim\n\n    var slug = string.normalize().split('')\n      // replace characters based on charMap\n      .reduce(function (result, ch) {\n        var appendChar = locale[ch];\n        if (appendChar === undefined) appendChar = charMap[ch];\n        if (appendChar === undefined) appendChar = ch;\n        if (appendChar === replacement) appendChar = ' ';\n        return result + appendChar\n          // remove not allowed characters\n          .replace(options.remove || /[^\\w\\s$*_+~.()'\"!\\-:@]+/g, '')\n      }, '');\n\n    if (options.strict) {\n      slug = slug.replace(/[^A-Za-z0-9\\s]/g, '');\n    }\n\n    if (trim) {\n      slug = slug.trim()\n    }\n\n    // Replace spaces with replacement character, treating multiple consecutive\n    // spaces as a single space.\n    slug = slug.replace(/\\s+/g, replacement);\n\n    if (options.lower) {\n      slug = slug.toLowerCase()\n    }\n\n    return slug\n  }\n\n  replace.extend = function (customMap) {\n    Object.assign(charMap, customMap)\n  }\n\n  return replace\n}))\n","import slugify from 'slugify';\n\nexport function slugifyString(\n  text: string,\n  replacement = '-',\n  strict = false,\n): string {\n  if (!text) return text;\n  let slugified = slugify(text, {\n    lower: true,\n    replacement,\n    strict,\n    remove: /[*+~.()'\"!:@?\\|/\\\\#]/g,\n  });\n  // some chinese text might not get slugified properly,\n  // just replace whitespace with dash in that case\n  if (!slugified) {\n    slugified = text.replace(/\\s+/g, '-').toLowerCase();\n  }\n  return slugified;\n}\n","import {useMutation} from '@tanstack/react-query';\nimport {apiClient, queryClient} from '@common/http/query-client';\nimport {useTrans} from '@ui/i18n/use-trans';\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\nimport {toast} from '@ui/toast/toast';\nimport {message} from '@ui/i18n/message';\nimport {Tag} from '@common/tags/tag';\nimport {DatatableDataQueryKey} from '@common/datatable/requests/paginated-resources';\nimport {onFormQueryError} from '@common/errors/on-form-query-error';\nimport {UseFormReturn} from 'react-hook-form';\nimport {slugifyString} from '@ui/utils/string/slugify-string';\n\ninterface Response extends BackendResponse {\n  tag: Tag;\n}\n\ninterface Payload extends Partial<Tag> {}\n\nexport function useCreateNewTag(form: UseFormReturn<Payload>) {\n  const {trans} = useTrans();\n  return useMutation({\n    mutationFn: (props: Payload) => createNewTag(props),\n    onSuccess: () => {\n      toast(trans(message('Tag created')));\n      queryClient.invalidateQueries({queryKey: DatatableDataQueryKey('tags')});\n    },\n    onError: err => onFormQueryError(err, form),\n  });\n}\n\nfunction createNewTag(payload: Payload): Promise<Response> {\n  payload.name = slugifyString(payload.name!);\n  return apiClient.post('tags', payload).then(r => r.data);\n}\n","import {Dialog} from '@ui/overlays/dialog/dialog';\nimport {DialogHeader} from '@ui/overlays/dialog/dialog-header';\nimport {Trans} from '@ui/i18n/trans';\nimport {DialogBody} from '@ui/overlays/dialog/dialog-body';\nimport {CrupdateTagForm} from './crupdate-tag-form';\nimport {DialogFooter} from '@ui/overlays/dialog/dialog-footer';\nimport {Button} from '@ui/buttons/button';\nimport {useDialogContext} from '@ui/overlays/dialog/dialog-context';\nimport {useCreateNewTag} from './requests/use-create-new-tag';\nimport {useContext} from 'react';\nimport {SiteConfigContext} from '../../core/settings/site-config-context';\nimport {useForm} from 'react-hook-form';\nimport {Tag} from '../../tags/tag';\n\nexport function CreateTagDialog() {\n  const {close, formId} = useDialogContext();\n  const {\n    tags: {types},\n  } = useContext(SiteConfigContext);\n  const form = useForm<Partial<Tag>>({\n    defaultValues: {\n      type: types[0].name,\n    },\n  });\n  const createNewTag = useCreateNewTag(form);\n\n  return (\n    <Dialog>\n      <DialogHeader>\n        <Trans message=\"Add new tag\" />\n      </DialogHeader>\n      <DialogBody>\n        <CrupdateTagForm\n          formId={formId}\n          form={form}\n          onSubmit={values => {\n            createNewTag.mutate(values, {\n              onSuccess: () => {\n                close();\n              },\n            });\n          }}\n        />\n      </DialogBody>\n      <DialogFooter>\n        <Button\n          onClick={() => {\n            close();\n          }}\n        >\n          <Trans message=\"Cancel\" />\n        </Button>\n        <Button\n          form={formId}\n          disabled={createNewTag.isPending}\n          variant=\"flat\"\n          color=\"primary\"\n          type=\"submit\"\n        >\n          <Trans message=\"Save\" />\n        </Button>\n      </DialogFooter>\n    </Dialog>\n  );\n}\n","import {useMutation} from '@tanstack/react-query';\nimport {apiClient, queryClient} from '@common/http/query-client';\nimport {useTrans} from '@ui/i18n/use-trans';\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\nimport {toast} from '@ui/toast/toast';\nimport {message} from '@ui/i18n/message';\nimport {Tag} from '@common/tags/tag';\nimport {DatatableDataQueryKey} from '@common/datatable/requests/paginated-resources';\nimport {onFormQueryError} from '@common/errors/on-form-query-error';\nimport {UseFormReturn} from 'react-hook-form';\nimport {slugifyString} from '@ui/utils/string/slugify-string';\n\ninterface Response extends BackendResponse {\n  tag: Tag;\n}\n\nexport interface UpdateTagPayload extends Partial<Tag> {\n  id: number;\n}\n\nexport function useUpdateTag(form: UseFormReturn<UpdateTagPayload>) {\n  const {trans} = useTrans();\n  return useMutation({\n    mutationFn: (props: UpdateTagPayload) => updateTag(props),\n    onSuccess: () => {\n      toast(trans(message('Tag updated')));\n      queryClient.invalidateQueries({queryKey: DatatableDataQueryKey('tags')});\n    },\n    onError: err => onFormQueryError(err, form),\n  });\n}\n\nfunction updateTag({id, ...payload}: UpdateTagPayload): Promise<Response> {\n  if (payload.name) {\n    payload.name = slugifyString(payload.name!);\n  }\n  return apiClient.put(`tags/${id}`, payload).then(r => r.data);\n}\n","import {Dialog} from '@ui/overlays/dialog/dialog';\nimport {DialogHeader} from '@ui/overlays/dialog/dialog-header';\nimport {Trans} from '@ui/i18n/trans';\nimport {DialogBody} from '@ui/overlays/dialog/dialog-body';\nimport {CrupdateTagForm} from './crupdate-tag-form';\nimport {DialogFooter} from '@ui/overlays/dialog/dialog-footer';\nimport {Button} from '@ui/buttons/button';\nimport {useDialogContext} from '@ui/overlays/dialog/dialog-context';\nimport {useForm} from 'react-hook-form';\nimport {Tag} from '../../tags/tag';\nimport {UpdateTagPayload, useUpdateTag} from './requests/use-update-tag';\n\ninterface UpdateTagDialogProps {\n  tag: Tag;\n}\nexport function UpdateTagDialog({tag}: UpdateTagDialogProps) {\n  const {close, formId} = useDialogContext();\n  const form = useForm<UpdateTagPayload>({\n    defaultValues: {\n      id: tag.id,\n      name: tag.name,\n      display_name: tag.display_name,\n      type: tag.type,\n    },\n  });\n  const updateTag = useUpdateTag(form);\n\n  return (\n    <Dialog>\n      <DialogHeader>\n        <Trans message=\"Update “:name“ tag\" values={{name: tag.name}} />\n      </DialogHeader>\n      <DialogBody>\n        <CrupdateTagForm\n          formId={formId}\n          form={form as any}\n          onSubmit={values => {\n            updateTag.mutate(values as UpdateTagPayload, {\n              onSuccess: () => {\n                close();\n              },\n            });\n          }}\n        />\n      </DialogBody>\n      <DialogFooter>\n        <Button\n          onClick={() => {\n            close();\n          }}\n        >\n          <Trans message=\"Cancel\" />\n        </Button>\n        <Button\n          form={formId}\n          disabled={updateTag.isPending}\n          variant=\"flat\"\n          color=\"primary\"\n          type=\"submit\"\n        >\n          <Trans message=\"Save\" />\n        </Button>\n      </DialogFooter>\n    </Dialog>\n  );\n}\n","import React, {useContext, useMemo} from 'react';\nimport {DataTablePage} from '../../datatable/page/data-table-page';\nimport {IconButton} from '@ui/buttons/icon-button';\nimport {EditIcon} from '@ui/icons/material/Edit';\nimport {FormattedDate} from '@ui/i18n/formatted-date';\nimport {ColumnConfig} from '../../datatable/column-config';\nimport {Trans} from '@ui/i18n/trans';\nimport {DeleteSelectedItemsAction} from '../../datatable/page/delete-selected-items-action';\nimport {DataTableEmptyStateMessage} from '../../datatable/page/data-table-emty-state-message';\nimport {Tag} from '../../tags/tag';\nimport {SiteConfigContext} from '../../core/settings/site-config-context';\nimport {TagIndexPageFilters} from './tag-index-page-filters';\nimport softwareEngineerSvg from './software-engineer.svg';\nimport {DialogTrigger} from '@ui/overlays/dialog/dialog-trigger';\nimport {CreateTagDialog} from './create-tag-dialog';\nimport {UpdateTagDialog} from './update-tag-dialog';\nimport {DataTableAddItemButton} from '../../datatable/data-table-add-item-button';\n\nconst columnConfig: ColumnConfig<Tag>[] = [\n  {\n    key: 'name',\n    allowsSorting: true,\n    visibleInMode: 'all',\n    width: 'flex-3 min-w-200',\n    header: () => <Trans message=\"Name\" />,\n    body: tag => tag.name,\n  },\n  {\n    key: 'type',\n    allowsSorting: true,\n    header: () => <Trans message=\"Type\" />,\n    body: tag => tag.type,\n  },\n  {\n    key: 'display_name',\n    allowsSorting: true,\n    header: () => <Trans message=\"Display name\" />,\n    body: tag => tag.display_name,\n  },\n  {\n    key: 'updated_at',\n    allowsSorting: true,\n    width: 'w-100',\n    header: () => <Trans message=\"Last updated\" />,\n    body: tag => <FormattedDate date={tag.updated_at} />,\n  },\n  {\n    key: 'actions',\n    header: () => <Trans message=\"Actions\" />,\n    hideHeader: true,\n    align: 'end',\n    width: 'w-42 flex-shrink-0',\n    visibleInMode: 'all',\n    body: tag => {\n      return (\n        <DialogTrigger type=\"modal\">\n          <IconButton size=\"md\" className=\"text-muted\">\n            <EditIcon />\n          </IconButton>\n          <UpdateTagDialog tag={tag} />\n        </DialogTrigger>\n      );\n    },\n  },\n];\n\nexport function TagIndexPage() {\n  const {tags} = useContext(SiteConfigContext);\n  const filters = useMemo(() => {\n    return TagIndexPageFilters(tags.types);\n  }, [tags.types]);\n\n  return (\n    <DataTablePage\n      endpoint=\"tags\"\n      title={<Trans message=\"Tags\" />}\n      columns={columnConfig}\n      filters={filters}\n      actions={<Actions />}\n      selectedActions={<DeleteSelectedItemsAction />}\n      emptyStateMessage={\n        <DataTableEmptyStateMessage\n          image={softwareEngineerSvg}\n          title={<Trans message=\"No tags have been created yet\" />}\n          filteringTitle={<Trans message=\"No matching tags\" />}\n        />\n      }\n    />\n  );\n}\n\nfunction Actions() {\n  return (\n    <>\n      <DialogTrigger type=\"modal\">\n        <DataTableAddItemButton>\n          <Trans message=\"Add new tag\" />\n        </DataTableAddItemButton>\n        <CreateTagDialog />\n      </DialogTrigger>\n    </>\n  );\n}\n","import {createSvgIcon} from '../create-svg-icon';\n\nexport const VisibilityIcon = createSvgIcon(\n  <path d=\"M12 6c3.79 0 7.17 2.13 8.82 5.5C19.17 14.87 15.79 17 12 17s-7.17-2.13-8.82-5.5C4.83 8.13 8.21 6 12 6m0-2C7 4 2.73 7.11 1 11.5 2.73 15.89 7 19 12 19s9.27-3.11 11-7.5C21.27 7.11 17 4 12 4zm0 5c1.38 0 2.5 1.12 2.5 2.5S13.38 14 12 14s-2.5-1.12-2.5-2.5S10.62 9 12 9m0-2c-2.48 0-4.5 2.02-4.5 4.5S9.52 16 12 16s4.5-2.02 4.5-4.5S14.48 7 12 7z\" />\n, 'VisibilityOutlined');\n","export default \"__VITE_ASSET__31048831__\"","import {\n  BackendFilter,\n  FilterControlType,\n  FilterOperator,\n  FilterSelectControl,\n} from '../../datatable/filters/backend-filter';\nimport {message} from '@ui/i18n/message';\nimport {USER_MODEL} from '@ui/types/user';\nimport {\n  createdAtFilter,\n  updatedAtFilter,\n} from '@common/datatable/filters/timestamp-filters';\n\nexport const FILE_ENTRY_TYPE_FILTER: BackendFilter<FilterSelectControl> = {\n  key: 'type',\n  label: message('Type'),\n  description: message('Type of the file'),\n  defaultOperator: FilterOperator.eq,\n  control: {\n    type: FilterControlType.Select,\n    defaultValue: '05',\n    options: [\n      {key: '02', label: message('Text'), value: 'text'},\n      {\n        key: '03',\n        label: message('Audio'),\n        value: 'audio',\n      },\n      {\n        key: '04',\n        label: message('Video'),\n        value: 'video',\n      },\n      {\n        key: '05',\n        label: message('Image'),\n        value: 'image',\n      },\n      {key: '06', label: message('PDF'), value: 'pdf'},\n      {\n        key: '07',\n        label: message('Spreadsheet'),\n        value: 'spreadsheet',\n      },\n      {\n        key: '08',\n        label: message('Word Document'),\n        value: 'word',\n      },\n      {\n        key: '09',\n        label: message('Photoshop'),\n        value: 'photoshop',\n      },\n      {\n        key: '10',\n        label: message('Archive'),\n        value: 'archive',\n      },\n      {\n        key: '11',\n        label: message('Folder'),\n        value: 'folder',\n      },\n    ],\n  },\n};\n\nexport const FILE_ENTRY_INDEX_FILTERS: BackendFilter[] = [\n  FILE_ENTRY_TYPE_FILTER,\n  {\n    key: 'public',\n    label: message('Visibility'),\n    description: message('Whether file is publicly accessible'),\n    defaultOperator: FilterOperator.eq,\n    control: {\n      type: FilterControlType.Select,\n      defaultValue: '01',\n      options: [\n        {key: '01', label: message('Private'), value: false},\n        {key: '02', label: message('Public'), value: true},\n      ],\n    },\n  },\n  createdAtFilter({\n    description: message('Date file was uploaded'),\n  }),\n  updatedAtFilter({\n    description: message('Date file was last changed'),\n  }),\n  {\n    key: 'owner_id',\n    label: message('Uploader'),\n    description: message('User that this file was uploaded by'),\n    defaultOperator: FilterOperator.eq,\n    control: {\n      type: FilterControlType.SelectModel,\n      model: USER_MODEL,\n    },\n  },\n];\n","import React, {Fragment} from 'react';\nimport {DataTablePage} from '../../datatable/page/data-table-page';\nimport {IconButton} from '@ui/buttons/icon-button';\nimport {FormattedDate} from '@ui/i18n/formatted-date';\nimport {ColumnConfig} from '../../datatable/column-config';\nimport {Trans} from '@ui/i18n/trans';\nimport {DeleteSelectedItemsAction} from '../../datatable/page/delete-selected-items-action';\nimport {DataTableEmptyStateMessage} from '../../datatable/page/data-table-emty-state-message';\nimport {DialogTrigger} from '@ui/overlays/dialog/dialog-trigger';\nimport {FileEntry} from '../../uploads/file-entry';\nimport {NameWithAvatar} from '../../datatable/column-templates/name-with-avatar';\nimport {CheckIcon} from '@ui/icons/material/Check';\nimport {CloseIcon} from '@ui/icons/material/Close';\nimport {FormattedBytes} from '@ui/i18n/formatted-bytes';\nimport {VisibilityIcon} from '@ui/icons/material/Visibility';\nimport uploadSvg from './upload.svg';\nimport {FilePreviewDialog} from '@common/uploads/components/file-preview/file-preview-dialog';\nimport {FILE_ENTRY_INDEX_FILTERS} from './file-entry-index-filters';\nimport {FileTypeIcon} from '@common/uploads/components/file-type-icon/file-type-icon';\nimport {User} from '@ui/types/user';\n\nconst columnConfig: ColumnConfig<FileEntry>[] = [\n  {\n    key: 'name',\n    allowsSorting: true,\n    visibleInMode: 'all',\n    width: 'flex-3 min-w-200',\n    header: () => <Trans message=\"Name\" />,\n    body: entry => (\n      <Fragment>\n        <div className=\"overflow-x-hidden overflow-ellipsis\">{entry.name}</div>\n        <div className=\"overflow-x-hidden overflow-ellipsis text-xs text-muted\">\n          {entry.file_name}\n        </div>\n      </Fragment>\n    ),\n  },\n  {\n    key: 'owner_id',\n    allowsSorting: true,\n    width: 'flex-3 min-w-200',\n    header: () => <Trans message=\"Uploader\" />,\n    body: entry => {\n      const owner =\n        entry.users?.find(user => user.owns_entry) ?? entry.users?.[0];\n      if (!owner) return null;\n      return (\n        <NameWithAvatar\n          image={(owner as User).image}\n          label={(owner as User).name}\n          description={owner.email}\n        />\n      );\n    },\n  },\n  {\n    key: 'type',\n    width: 'w-100 flex-shrink-0',\n    allowsSorting: true,\n    header: () => <Trans message=\"Type\" />,\n    body: entry => (\n      <div className=\"flex items-center gap-12\">\n        <FileTypeIcon type={entry.type} className=\"h-24 w-24 overflow-hidden\" />\n        <div className=\"capitalize\">{entry.type}</div>\n      </div>\n    ),\n  },\n  {\n    key: 'public',\n    allowsSorting: true,\n    width: 'w-60 flex-shrink-0',\n    header: () => <Trans message=\"Public\" />,\n    body: entry =>\n      entry.public ? (\n        <CheckIcon className=\"text-positive icon-md\" />\n      ) : (\n        <CloseIcon className=\"text-danger icon-md\" />\n      ),\n  },\n  {\n    key: 'file_size',\n    allowsSorting: true,\n    maxWidth: 'max-w-100',\n    header: () => <Trans message=\"File size\" />,\n    body: entry => <FormattedBytes bytes={entry.file_size} />,\n  },\n  {\n    key: 'updated_at',\n    allowsSorting: true,\n    width: 'w-100',\n    header: () => <Trans message=\"Last updated\" />,\n    body: entry => <FormattedDate date={entry.updated_at} />,\n  },\n  {\n    key: 'actions',\n    header: () => <Trans message=\"Actions\" />,\n    hideHeader: true,\n    align: 'end',\n    width: 'w-42 flex-shrink-0',\n    visibleInMode: 'all',\n    body: entry => {\n      return (\n        <DialogTrigger type=\"modal\">\n          <IconButton size=\"md\" className=\"text-muted\">\n            <VisibilityIcon />\n          </IconButton>\n          <FilePreviewDialog entries={[entry]} />\n        </DialogTrigger>\n      );\n    },\n  },\n];\n\nexport function FileEntryIndexPage() {\n  return (\n    <DataTablePage\n      endpoint=\"file-entries\"\n      title={<Trans message=\"Uploaded files and folders\" />}\n      columns={columnConfig}\n      filters={FILE_ENTRY_INDEX_FILTERS}\n      selectedActions={<DeleteSelectedItemsAction />}\n      emptyStateMessage={\n        <DataTableEmptyStateMessage\n          image={uploadSvg}\n          title={<Trans message=\"Nothing has been uploaded yet\" />}\n          filteringTitle={<Trans message=\"No matching files or folders\" />}\n        />\n      }\n    />\n  );\n}\n","import {\n  BackendFilter,\n  FilterControlType,\n  FilterOperator,\n} from '../../datatable/filters/backend-filter';\nimport {message} from '@ui/i18n/message';\nimport {\n  createdAtFilter,\n  timestampFilter,\n  updatedAtFilter,\n} from '../../datatable/filters/timestamp-filters';\n\nexport const SubscriptionIndexPageFilters: BackendFilter[] = [\n  {\n    key: 'ends_at',\n    label: message('Status'),\n    description: message('Whether subscription is active or cancelled'),\n    defaultOperator: FilterOperator.eq,\n    control: {\n      type: FilterControlType.Select,\n      defaultValue: 'active',\n      options: [\n        {\n          key: 'active',\n          label: message('Active'),\n          value: {value: null, operator: FilterOperator.eq},\n        },\n        {\n          key: 'cancelled',\n          label: message('Cancelled'),\n          value: {value: null, operator: FilterOperator.ne},\n        },\n      ],\n    },\n  },\n  {\n    control: {\n      type: FilterControlType.Select,\n      defaultValue: 'stripe',\n      options: [\n        {\n          key: 'stripe',\n          label: message('Stripe'),\n          value: 'stripe',\n        },\n        {\n          key: 'paypal',\n          label: message('PayPal'),\n          value: 'paypal',\n        },\n        {\n          key: 'none',\n          label: message('None'),\n          value: 'none',\n        },\n      ],\n    },\n    key: 'gateway_name',\n    label: message('Gateway'),\n    description: message(\n      'With which payment provider was subscription created',\n    ),\n    defaultOperator: FilterOperator.eq,\n  },\n  timestampFilter({\n    key: 'renews_at',\n    label: message('Renew date'),\n    description: message('Date subscription will renew'),\n  }),\n  createdAtFilter({\n    description: message('Date subscription was created'),\n  }),\n  updatedAtFilter({\n    description: message('Date subscription was last updated'),\n  }),\n];\n","export default \"__VITE_ASSET__2e46d67b__\"","import {useMutation} from '@tanstack/react-query';\nimport {apiClient, queryClient} from '@common/http/query-client';\nimport {useTrans} from '@ui/i18n/use-trans';\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\nimport {toast} from '@ui/toast/toast';\nimport {message} from '@ui/i18n/message';\nimport {DatatableDataQueryKey} from '@common/datatable/requests/paginated-resources';\nimport {onFormQueryError} from '@common/errors/on-form-query-error';\nimport {UseFormReturn} from 'react-hook-form';\nimport {Subscription} from '@common/billing/subscription';\n\ninterface Response extends BackendResponse {\n  subscription: Subscription;\n}\n\nexport interface UpdateSubscriptionPayload extends Partial<Subscription> {\n  id: number;\n}\n\nexport function useUpdateSubscription(\n  form: UseFormReturn<UpdateSubscriptionPayload>,\n) {\n  const {trans} = useTrans();\n  return useMutation({\n    mutationFn: (props: UpdateSubscriptionPayload) => updateSubscription(props),\n    onSuccess: () => {\n      toast(trans(message('Subscription updated')));\n      queryClient.invalidateQueries({\n        queryKey: DatatableDataQueryKey('billing/subscriptions'),\n      });\n    },\n    onError: err => onFormQueryError(err, form),\n  });\n}\n\nfunction updateSubscription({\n  id,\n  ...payload\n}: UpdateSubscriptionPayload): Promise<Response> {\n  return apiClient\n    .put(`billing/subscriptions/${id}`, payload)\n    .then(r => r.data);\n}\n","import {UseFormReturn} from 'react-hook-form';\nimport {Form} from '@ui/forms/form';\nimport {FormTextField} from '@ui/forms/input-field/text-field/text-field';\nimport {FormSelect} from '@ui/forms/select/select';\nimport {Trans} from '@ui/i18n/trans';\nimport {Item} from '@ui/forms/listbox/item';\nimport {Subscription} from '../../billing/subscription';\nimport {FormDatePicker} from '@ui/forms/input-field/date/date-picker/date-picker';\nimport {useProducts} from '../../billing/pricing-table/use-products';\nimport {FormattedPrice} from '../../billing/formatted-price';\nimport {FormNormalizedModelField} from '../../ui/normalized-model/normalized-model-field';\n\ninterface CrupdateSubscriptionForm {\n  onSubmit: (values: Partial<Subscription>) => void;\n  formId: string;\n  form: UseFormReturn<Partial<Subscription>>;\n}\nexport function CrupdateSubscriptionForm({\n  form,\n  onSubmit,\n  formId,\n}: CrupdateSubscriptionForm) {\n  const query = useProducts();\n  // @ts-ignore\n  const watchedProductId = form.watch('product_id');\n  const selectedProduct = query.data?.products.find(\n    p => p.id === watchedProductId,\n  );\n\n  return (\n    <Form id={formId} form={form} onSubmit={onSubmit}>\n      <FormNormalizedModelField\n        name=\"user_id\"\n        className=\"mb-20\"\n        endpoint=\"normalized-models/user\"\n        label={<Trans message=\"User\" />}\n      />\n      <FormSelect\n        name=\"product_id\"\n        selectionMode=\"single\"\n        className=\"mb-20\"\n        label={<Trans message=\"Plan\" />}\n      >\n        {query.data?.products\n          .filter(p => !p.free)\n          .map(product => (\n            <Item key={product.id} value={product.id}>\n              <Trans message={product.name} />\n            </Item>\n          ))}\n      </FormSelect>\n      {!selectedProduct?.free && (\n        <FormSelect\n          name=\"price_id\"\n          selectionMode=\"single\"\n          className=\"mb-20\"\n          label={<Trans message=\"Price\" />}\n        >\n          {selectedProduct?.prices.map(price => (\n            <Item key={price.id} value={price.id}>\n              <FormattedPrice price={price} />\n            </Item>\n          ))}\n        </FormSelect>\n      )}\n      <FormTextField\n        inputElementType=\"textarea\"\n        rows={3}\n        name=\"description\"\n        label={<Trans message=\"Description\" />}\n        className=\"mb-20\"\n      />\n      <FormDatePicker\n        className=\"mb-20\"\n        name=\"renews_at\"\n        granularity=\"day\"\n        label={<Trans message=\"Renews at\" />}\n        description={\n          <Trans message=\"This will only change local records. User will continue to be billed on their original cycle on the payment gateway.\" />\n        }\n      />\n      <FormDatePicker\n        className=\"mb-20\"\n        name=\"ends_at\"\n        granularity=\"day\"\n        label={<Trans message=\"Ends at\" />}\n        description={\n          <Trans message=\"This will only change local records. User will continue to be billed on their original cycle on the payment gateway.\" />\n        }\n      />\n    </Form>\n  );\n}\n","import {Dialog} from '@ui/overlays/dialog/dialog';\nimport {DialogHeader} from '@ui/overlays/dialog/dialog-header';\nimport {Trans} from '@ui/i18n/trans';\nimport {DialogBody} from '@ui/overlays/dialog/dialog-body';\nimport {DialogFooter} from '@ui/overlays/dialog/dialog-footer';\nimport {Button} from '@ui/buttons/button';\nimport {useDialogContext} from '@ui/overlays/dialog/dialog-context';\nimport {useForm} from 'react-hook-form';\nimport {Subscription} from '../../billing/subscription';\nimport {\n  UpdateSubscriptionPayload,\n  useUpdateSubscription,\n} from './requests/use-update-subscription';\nimport {CrupdateSubscriptionForm} from './crupdate-subscription-form';\n\ninterface UpdateSubscriptionDialogProps {\n  subscription: Subscription;\n}\nexport function UpdateSubscriptionDialog({\n  subscription,\n}: UpdateSubscriptionDialogProps) {\n  const {close, formId} = useDialogContext();\n  const form = useForm<UpdateSubscriptionPayload>({\n    defaultValues: {\n      id: subscription.id,\n      product_id: subscription.product_id,\n      price_id: subscription.price_id,\n      description: subscription.description,\n      renews_at: subscription.renews_at,\n      ends_at: subscription.ends_at,\n      user_id: subscription.user_id,\n    },\n  });\n  const updateSubscription = useUpdateSubscription(form);\n\n  return (\n    <Dialog size=\"md\">\n      <DialogHeader>\n        <Trans message=\"Update subscription\" />\n      </DialogHeader>\n      <DialogBody>\n        <CrupdateSubscriptionForm\n          formId={formId}\n          form={form as any}\n          onSubmit={values => {\n            updateSubscription.mutate(values as UpdateSubscriptionPayload, {\n              onSuccess: () => {\n                close();\n              },\n            });\n          }}\n        />\n      </DialogBody>\n      <DialogFooter>\n        <Button\n          onClick={() => {\n            close();\n          }}\n        >\n          <Trans message=\"Cancel\" />\n        </Button>\n        <Button\n          form={formId}\n          disabled={updateSubscription.isPending}\n          variant=\"flat\"\n          color=\"primary\"\n          type=\"submit\"\n        >\n          <Trans message=\"Save\" />\n        </Button>\n      </DialogFooter>\n    </Dialog>\n  );\n}\n","import {useMutation} from '@tanstack/react-query';\nimport {apiClient, queryClient} from '@common/http/query-client';\nimport {useTrans} from '@ui/i18n/use-trans';\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\nimport {toast} from '@ui/toast/toast';\nimport {message} from '@ui/i18n/message';\nimport {Tag} from '@common/tags/tag';\nimport {DatatableDataQueryKey} from '@common/datatable/requests/paginated-resources';\nimport {onFormQueryError} from '@common/errors/on-form-query-error';\nimport {UseFormReturn} from 'react-hook-form';\nimport {Subscription} from '@common/billing/subscription';\n\nconst endpoint = 'billing/subscriptions';\n\ninterface Response extends BackendResponse {\n  tag: Tag;\n}\n\ninterface Payload extends Partial<Subscription> {}\n\nexport function useCreateSubscription(form: UseFormReturn<Payload>) {\n  const {trans} = useTrans();\n  return useMutation({\n    mutationFn: (props: Payload) => createNewSubscription(props),\n    onSuccess: () => {\n      toast(trans(message('Subscription created')));\n      queryClient.invalidateQueries({\n        queryKey: DatatableDataQueryKey(endpoint),\n      });\n    },\n    onError: err => onFormQueryError(err, form),\n  });\n}\n\nfunction createNewSubscription(payload: Payload): Promise<Response> {\n  return apiClient.post(endpoint, payload).then(r => r.data);\n}\n","import {Dialog} from '@ui/overlays/dialog/dialog';\nimport {DialogHeader} from '@ui/overlays/dialog/dialog-header';\nimport {Trans} from '@ui/i18n/trans';\nimport {DialogBody} from '@ui/overlays/dialog/dialog-body';\nimport {DialogFooter} from '@ui/overlays/dialog/dialog-footer';\nimport {Button} from '@ui/buttons/button';\nimport {useDialogContext} from '@ui/overlays/dialog/dialog-context';\nimport {useForm} from 'react-hook-form';\nimport {useCreateSubscription} from './requests/use-create-subscription';\nimport {Subscription} from '../../billing/subscription';\nimport {CrupdateSubscriptionForm} from './crupdate-subscription-form';\n\nexport function CreateSubscriptionDialog() {\n  const {close, formId} = useDialogContext();\n  const form = useForm<Partial<Subscription>>({});\n  const createSubscription = useCreateSubscription(form);\n\n  return (\n    <Dialog>\n      <DialogHeader>\n        <Trans message=\"Add new subscription\" />\n      </DialogHeader>\n      <DialogBody>\n        <CrupdateSubscriptionForm\n          formId={formId}\n          form={form}\n          onSubmit={values => {\n            createSubscription.mutate(values, {\n              onSuccess: () => {\n                close();\n              },\n            });\n          }}\n        />\n      </DialogBody>\n      <DialogFooter>\n        <Button\n          onClick={() => {\n            close();\n          }}\n        >\n          <Trans message=\"Cancel\" />\n        </Button>\n        <Button\n          form={formId}\n          disabled={createSubscription.isPending}\n          variant=\"flat\"\n          color=\"primary\"\n          type=\"submit\"\n        >\n          <Trans message=\"Save\" />\n        </Button>\n      </DialogFooter>\n    </Dialog>\n  );\n}\n","import {createSvgIcon} from '../create-svg-icon';\n\nexport const PauseIcon = createSvgIcon(\n  <path d=\"M6 19h4V5H6v14zm8-14v14h4V5h-4z\" />\n, 'PauseOutlined');\n","import {createSvgIcon} from '../create-svg-icon';\n\nexport const PlayArrowIcon = createSvgIcon(\n  <path d=\"M10 8.64 15.27 12 10 15.36V8.64M8 5v14l11-7L8 5z\" />\n, 'PlayArrowOutlined');\n","import React, {Fragment} from 'react';\nimport {DataTablePage} from '../../datatable/page/data-table-page';\nimport {IconButton} from '@ui/buttons/icon-button';\nimport {EditIcon} from '@ui/icons/material/Edit';\nimport {ColumnConfig} from '../../datatable/column-config';\nimport {Trans} from '@ui/i18n/trans';\nimport {DeleteSelectedItemsAction} from '../../datatable/page/delete-selected-items-action';\nimport {DataTableEmptyStateMessage} from '../../datatable/page/data-table-emty-state-message';\nimport {SubscriptionIndexPageFilters} from './subscription-index-page-filters';\nimport {DialogTrigger} from '@ui/overlays/dialog/dialog-trigger';\nimport {DataTableAddItemButton} from '../../datatable/data-table-add-item-button';\nimport subscriptionsSvg from './subscriptions.svg';\nimport {NameWithAvatar} from '../../datatable/column-templates/name-with-avatar';\nimport {Subscription} from '../../billing/subscription';\nimport {CloseIcon} from '@ui/icons/material/Close';\nimport {FormattedDate} from '@ui/i18n/formatted-date';\nimport {UpdateSubscriptionDialog} from './update-subscription-dialog';\nimport {CreateSubscriptionDialog} from './create-subscription-dialog';\nimport {useCancelSubscription} from '../../billing/billing-page/requests/use-cancel-subscription';\nimport {PauseIcon} from '@ui/icons/material/Pause';\nimport {queryClient} from '../../http/query-client';\nimport {DatatableDataQueryKey} from '../../datatable/requests/paginated-resources';\nimport {Tooltip} from '@ui/tooltip/tooltip';\nimport {useResumeSubscription} from '../../billing/billing-page/requests/use-resume-subscription';\nimport {PlayArrowIcon} from '@ui/icons/material/PlayArrow';\nimport {ConfirmationDialog} from '@ui/overlays/dialog/confirmation-dialog';\nimport {Chip} from '@ui/forms/input-field/chip-field/chip';\n\nconst endpoint = 'billing/subscriptions';\n\nconst columnConfig: ColumnConfig<Subscription>[] = [\n  {\n    key: 'user_id',\n    allowsSorting: true,\n    width: 'flex-3 min-w-200',\n    visibleInMode: 'all',\n    header: () => <Trans message=\"Customer\" />,\n    body: subscription =>\n      subscription.user && (\n        <NameWithAvatar\n          image={subscription.user.image}\n          label={subscription.user.name}\n          description={subscription.user.email}\n        />\n      ),\n  },\n  {\n    key: 'status',\n    width: 'w-100 flex-shrink-0',\n    header: () => <Trans message=\"Status\" />,\n    body: subscription => (\n      <Chip\n        size=\"xs\"\n        color={subscription.valid ? 'positive' : 'danger'}\n        radius=\"rounded\"\n        className=\"w-max\"\n      >\n        {subscription.gateway_status}\n      </Chip>\n    ),\n  },\n  {\n    key: 'product_id',\n    allowsSorting: true,\n    header: () => <Trans message=\"Plan\" />,\n    body: subscription => subscription.product?.name,\n  },\n  {\n    key: 'gateway_name',\n    allowsSorting: true,\n    header: () => <Trans message=\"Gateway\" />,\n    body: subscription => (\n      <span className=\"capitalize\">{subscription.gateway_name}</span>\n    ),\n  },\n  {\n    key: 'renews_at',\n    allowsSorting: true,\n    header: () => <Trans message=\"Renews at\" />,\n    body: subscription => <FormattedDate date={subscription.renews_at} />,\n  },\n  {\n    key: 'ends_at',\n    allowsSorting: true,\n    header: () => <Trans message=\"Ends at\" />,\n    body: subscription => <FormattedDate date={subscription.ends_at} />,\n  },\n  {\n    key: 'created_at',\n    allowsSorting: true,\n    header: () => <Trans message=\"Created at\" />,\n    body: subscription => <FormattedDate date={subscription.created_at} />,\n  },\n  {\n    key: 'actions',\n    header: () => <Trans message=\"Actions\" />,\n    hideHeader: true,\n    align: 'end',\n    visibleInMode: 'all',\n    width: 'w-[168px] flex-shrink-0',\n    body: subscription => {\n      return <SubscriptionActions subscription={subscription} />;\n    },\n  },\n];\n\nexport function SubscriptionsIndexPage() {\n  return (\n    <DataTablePage\n      endpoint={endpoint}\n      title={<Trans message=\"Subscriptions\" />}\n      columns={columnConfig}\n      filters={SubscriptionIndexPageFilters}\n      actions={<PageActions />}\n      enableSelection={false}\n      selectedActions={<DeleteSelectedItemsAction />}\n      queryParams={{with: 'product'}}\n      emptyStateMessage={\n        <DataTableEmptyStateMessage\n          image={subscriptionsSvg}\n          title={<Trans message=\"No subscriptions have been created yet\" />}\n          filteringTitle={<Trans message=\"No matching subscriptions\" />}\n        />\n      }\n    />\n  );\n}\n\nfunction PageActions() {\n  return (\n    <>\n      <DialogTrigger type=\"modal\">\n        <DataTableAddItemButton>\n          <Trans message=\"Add new subscription\" />\n        </DataTableAddItemButton>\n        <CreateSubscriptionDialog />\n      </DialogTrigger>\n    </>\n  );\n}\n\ninterface SubscriptionActionsProps {\n  subscription: Subscription;\n}\nfunction SubscriptionActions({subscription}: SubscriptionActionsProps) {\n  return (\n    <Fragment>\n      <DialogTrigger type=\"modal\">\n        <IconButton size=\"md\" className=\"text-muted\">\n          <EditIcon />\n        </IconButton>\n        <UpdateSubscriptionDialog subscription={subscription} />\n      </DialogTrigger>\n      {subscription.cancelled && subscription.on_grace_period ? (\n        <ResumeSubscriptionButton subscription={subscription} />\n      ) : null}\n      {subscription.active ? (\n        <SuspendSubscriptionButton subscription={subscription} />\n      ) : null}\n      <CancelSubscriptionButton subscription={subscription} />\n    </Fragment>\n  );\n}\n\nfunction SuspendSubscriptionButton({subscription}: SubscriptionActionsProps) {\n  const cancelSubscription = useCancelSubscription();\n\n  const handleSuspendSubscription = () => {\n    cancelSubscription.mutate(\n      {subscriptionId: subscription.id},\n      {\n        onSuccess: () => {\n          queryClient.invalidateQueries({\n            queryKey: DatatableDataQueryKey(endpoint),\n          });\n        },\n      },\n    );\n  };\n\n  return (\n    <DialogTrigger\n      type=\"modal\"\n      onClose={confirmed => {\n        if (confirmed) {\n          handleSuspendSubscription();\n        }\n      }}\n    >\n      <Tooltip label={<Trans message=\"Cancel subscription\" />}>\n        <IconButton\n          size=\"md\"\n          className=\"text-muted\"\n          disabled={cancelSubscription.isPending}\n        >\n          <PauseIcon />\n        </IconButton>\n      </Tooltip>\n      <ConfirmationDialog\n        title={<Trans message=\"Cancel subscription\" />}\n        body={\n          <div>\n            <Trans message=\"Are you sure you want to cancel this subscription?\" />\n            <div className=\"mt-10 text-sm font-semibold\">\n              <Trans message=\"This will put user on grace period until their next scheduled renewal date. Subscription can be renewed until that date by user or from admin area.\" />\n            </div>\n          </div>\n        }\n        confirm={<Trans message=\"Confirm\" />}\n      />\n    </DialogTrigger>\n  );\n}\n\nfunction ResumeSubscriptionButton({subscription}: SubscriptionActionsProps) {\n  const resumeSubscription = useResumeSubscription();\n  const handleResumeSubscription = () => {\n    resumeSubscription.mutate(\n      {subscriptionId: subscription.id},\n      {\n        onSuccess: () => {\n          queryClient.invalidateQueries({\n            queryKey: DatatableDataQueryKey(endpoint),\n          });\n        },\n      },\n    );\n  };\n\n  return (\n    <DialogTrigger\n      type=\"modal\"\n      onClose={confirmed => {\n        if (confirmed) {\n          handleResumeSubscription();\n        }\n      }}\n    >\n      <Tooltip label={<Trans message=\"Renew subscription\" />}>\n        <IconButton\n          size=\"md\"\n          className=\"text-muted\"\n          onClick={handleResumeSubscription}\n          disabled={resumeSubscription.isPending}\n        >\n          <PlayArrowIcon />\n        </IconButton>\n      </Tooltip>\n      <ConfirmationDialog\n        title={<Trans message=\"Resume subscription\" />}\n        body={\n          <div>\n            <Trans message=\"Are you sure you want to resume this subscription?\" />\n            <div className=\"mt-10 text-sm font-semibold\">\n              <Trans message=\"This will put user on their original plan and billing cycle.\" />\n            </div>\n          </div>\n        }\n        confirm={<Trans message=\"Confirm\" />}\n      />\n    </DialogTrigger>\n  );\n}\n\nfunction CancelSubscriptionButton({subscription}: SubscriptionActionsProps) {\n  const cancelSubscription = useCancelSubscription();\n\n  const handleDeleteSubscription = () => {\n    cancelSubscription.mutate(\n      {subscriptionId: subscription.id, delete: true},\n      {\n        onSuccess: () => {\n          queryClient.invalidateQueries({\n            queryKey: DatatableDataQueryKey(endpoint),\n          });\n        },\n      },\n    );\n  };\n\n  return (\n    <DialogTrigger\n      type=\"modal\"\n      onClose={confirmed => {\n        if (confirmed) {\n          handleDeleteSubscription();\n        }\n      }}\n    >\n      <Tooltip label={<Trans message=\"Delete subscription\" />}>\n        <IconButton\n          size=\"md\"\n          className=\"text-muted\"\n          disabled={cancelSubscription.isPending}\n        >\n          <CloseIcon />\n        </IconButton>\n      </Tooltip>\n      <ConfirmationDialog\n        isDanger\n        title={<Trans message=\"Delete subscription\" />}\n        body={\n          <div>\n            <Trans message=\"Are you sure you want to delete this subscription?\" />\n            <div className=\"mt-10 text-sm font-semibold\">\n              <Trans message=\"This will permanently delete the subscription and immediately cancel it on billing gateway. Subscription will not be renewable anymore.\" />\n            </div>\n          </div>\n        }\n        confirm={<Trans message=\"Confirm\" />}\n      />\n    </DialogTrigger>\n  );\n}\n","import {createSvgIcon} from '../create-svg-icon';\n\nexport const SyncIcon = createSvgIcon(\n  <path d=\"M12 4V1L8 5l4 4V6c3.31 0 6 2.69 6 6 0 1.01-.25 1.97-.7 2.8l1.46 1.46C19.54 15.03 20 13.57 20 12c0-4.42-3.58-8-8-8zm0 14c-3.31 0-6-2.69-6-6 0-1.01.25-1.97.7-2.8L5.24 7.74C4.46 8.97 4 10.43 4 12c0 4.42 3.58 8 8 8v3l4-4-4-4v3z\" />\n, 'SyncOutlined');\n","import {useMutation} from '@tanstack/react-query';\nimport {apiClient} from '@common/http/query-client';\nimport {useTrans} from '@ui/i18n/use-trans';\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\nimport {toast} from '@ui/toast/toast';\nimport {message} from '@ui/i18n/message';\nimport {showHttpErrorToast} from '@common/http/show-http-error-toast';\n\ninterface Response extends BackendResponse {}\n\nexport function useSyncProducts() {\n  const {trans} = useTrans();\n  return useMutation({\n    mutationFn: () => syncPlans(),\n    onSuccess: () => {\n      toast(trans(message('Plans synced')));\n    },\n    onError: err => showHttpErrorToast(err, message('Could not sync plans')),\n  });\n}\n\nfunction syncPlans(): Promise<Response> {\n  return apiClient.post('billing/products/sync').then(r => r.data);\n}\n","import {useMutation} from '@tanstack/react-query';\nimport {apiClient, queryClient} from '@common/http/query-client';\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\nimport {toast} from '@ui/toast/toast';\nimport {useTrans} from '@ui/i18n/use-trans';\nimport {message} from '@ui/i18n/message';\nimport {DatatableDataQueryKey} from '@common/datatable/requests/paginated-resources';\nimport {showHttpErrorToast} from '@common/http/show-http-error-toast';\n\nconst endpoint = (id: number) => `billing/products/${id}`;\n\ninterface Response extends BackendResponse {}\n\ninterface Payload {\n  productId: number;\n}\n\nexport function useDeleteProduct() {\n  const {trans} = useTrans();\n  return useMutation({\n    mutationFn: (payload: Payload) => updateProduct(payload),\n    onSuccess: () => {\n      toast(trans(message('Plan deleted')));\n      queryClient.invalidateQueries({\n        queryKey: DatatableDataQueryKey('billing/products'),\n      });\n    },\n    onError: err => showHttpErrorToast(err),\n  });\n}\n\nfunction updateProduct({productId}: Payload): Promise<Response> {\n  return apiClient.delete(endpoint(productId)).then(r => r.data);\n}\n","import {\n  BackendFilter,\n  FilterControlType,\n  FilterOperator,\n} from '../../datatable/filters/backend-filter';\nimport {message} from '@ui/i18n/message';\nimport {\n  createdAtFilter,\n  updatedAtFilter,\n} from '@common/datatable/filters/timestamp-filters';\n\nexport const PlansIndexPageFilters: BackendFilter[] = [\n  {\n    key: 'subscriptions',\n    label: message('Subscriptions'),\n    description: message('Whether plan has any active subscriptions'),\n    defaultOperator: FilterOperator.eq,\n    control: {\n      type: FilterControlType.Select,\n      defaultValue: '01',\n      options: [\n        {\n          key: '01',\n          label: message('Has active subscriptions'),\n          value: {value: '*', operator: FilterOperator.has},\n        },\n        {\n          key: '02',\n          label: message('Does not have active subscriptions'),\n          value: {value: '*', operator: FilterOperator.doesntHave},\n        },\n      ],\n    },\n  },\n  createdAtFilter({\n    description: message('Date plan was created'),\n  }),\n  updatedAtFilter({\n    description: message('Date plan was last updated'),\n  }),\n];\n","import React, {Fragment} from 'react';\nimport {DataTablePage} from '../../datatable/page/data-table-page';\nimport {IconButton} from '@ui/buttons/icon-button';\nimport {EditIcon} from '@ui/icons/material/Edit';\nimport {FormattedDate} from '@ui/i18n/formatted-date';\nimport {ColumnConfig} from '../../datatable/column-config';\nimport {Trans} from '@ui/i18n/trans';\nimport {DataTableEmptyStateMessage} from '../../datatable/page/data-table-emty-state-message';\nimport softwareEngineerSvg from './../tags/software-engineer.svg';\nimport {DataTableAddItemButton} from '../../datatable/data-table-add-item-button';\nimport {Product} from '../../billing/product';\nimport {NameWithAvatar} from '../../datatable/column-templates/name-with-avatar';\nimport {Link} from 'react-router';\nimport {FormattedPrice} from '../../billing/formatted-price';\nimport {SyncIcon} from '@ui/icons/material/Sync';\nimport {useSyncProducts} from './requests/use-sync-products';\nimport {Tooltip} from '@ui/tooltip/tooltip';\nimport {useDeleteProduct} from './requests/use-delete-product';\nimport {DeleteIcon} from '@ui/icons/material/Delete';\nimport {DialogTrigger} from '@ui/overlays/dialog/dialog-trigger';\nimport {ConfirmationDialog} from '@ui/overlays/dialog/confirmation-dialog';\nimport {useNavigate} from '../../ui/navigation/use-navigate';\nimport {PlansIndexPageFilters} from './plans-index-page-filters';\n\nconst columnConfig: ColumnConfig<Product>[] = [\n  {\n    key: 'name',\n    allowsSorting: true,\n    visibleInMode: 'all',\n    header: () => <Trans message=\"Name\" />,\n    body: product => {\n      const price = product.prices[0];\n      return (\n        <NameWithAvatar\n          label={product.name}\n          description={\n            product.free ? (\n              <Trans message=\"Free\" />\n            ) : (\n              <FormattedPrice price={price} />\n            )\n          }\n        />\n      );\n    },\n  },\n  {\n    key: 'created_at',\n    allowsSorting: true,\n    maxWidth: 'max-w-100',\n    header: () => <Trans message=\"Created\" />,\n    body: product => <FormattedDate date={product.created_at} />,\n  },\n  {\n    key: 'updated_at',\n    allowsSorting: true,\n    maxWidth: 'max-w-100',\n    header: () => <Trans message=\"Last updated\" />,\n    body: product => <FormattedDate date={product.updated_at} />,\n  },\n  {\n    key: 'actions',\n    header: () => <Trans message=\"Actions\" />,\n    visibleInMode: 'all',\n    hideHeader: true,\n    align: 'end',\n    maxWidth: 'max-w-84',\n    body: product => {\n      return (\n        <Fragment>\n          <IconButton\n            size=\"md\"\n            className=\"text-muted\"\n            elementType={Link}\n            to={`/admin/plans/${product.id}/edit`}\n          >\n            <EditIcon />\n          </IconButton>\n          <DeleteProductButton product={product} />\n        </Fragment>\n      );\n    },\n  },\n];\n\nexport function PlansIndexPage() {\n  const navigate = useNavigate();\n  return (\n    <DataTablePage\n      endpoint=\"billing/products\"\n      title={<Trans message=\"Subscription plans\" />}\n      columns={columnConfig}\n      actions={<Actions />}\n      enableSelection={false}\n      filters={PlansIndexPageFilters}\n      onRowAction={item => {\n        navigate(`/admin/plans/${item.id}/edit`);\n      }}\n      emptyStateMessage={\n        <DataTableEmptyStateMessage\n          image={softwareEngineerSvg}\n          title={<Trans message=\"No plans have been created yet\" />}\n          filteringTitle={<Trans message=\"No matching plans\" />}\n        />\n      }\n    />\n  );\n}\n\ninterface DeleteProductButtonProps {\n  product: Product;\n}\nfunction DeleteProductButton({product}: DeleteProductButtonProps) {\n  const deleteProduct = useDeleteProduct();\n  return (\n    <DialogTrigger\n      type=\"modal\"\n      onClose={confirmed => {\n        if (confirmed) {\n          deleteProduct.mutate({productId: product.id});\n        }\n      }}\n    >\n      <Tooltip label={<Trans message=\"Delete plan\" />}>\n        <IconButton\n          size=\"md\"\n          className=\"text-muted\"\n          disabled={deleteProduct.isPending}\n        >\n          <DeleteIcon />\n        </IconButton>\n      </Tooltip>\n      <ConfirmationDialog\n        title={<Trans message=\"Delete plan\" />}\n        body={<Trans message=\"Are you sure you want to delete this plan?\" />}\n        confirm={<Trans message=\"Delete\" />}\n      />\n    </DialogTrigger>\n  );\n}\n\nfunction Actions() {\n  const syncPlans = useSyncProducts();\n  return (\n    <Fragment>\n      <Tooltip label={<Trans message=\"Sync plans with Stripe & PayPal\" />}>\n        <IconButton\n          color=\"primary\"\n          variant=\"outline\"\n          size=\"sm\"\n          disabled={syncPlans.isPending}\n          onClick={() => {\n            syncPlans.mutate();\n          }}\n        >\n          <SyncIcon />\n        </IconButton>\n      </Tooltip>\n      <DataTableAddItemButton elementType={Link} to=\"/admin/plans/new\">\n        <Trans message=\"Add new plan\" />\n      </DataTableAddItemButton>\n    </Fragment>\n  );\n}\n","import {useQuery} from '@tanstack/react-query';\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\nimport {apiClient} from '@common/http/query-client';\nimport {useParams} from 'react-router';\nimport {Product} from '@common/billing/product';\n\nconst Endpoint = (id: number | string) => `billing/products/${id}`;\n\nexport interface FetchRoleResponse extends BackendResponse {\n  product: Product;\n}\n\nexport function useProduct() {\n  const {productId} = useParams();\n  return useQuery({\n    queryKey: [Endpoint(productId!)],\n    queryFn: () => fetchProduct(productId!),\n  });\n}\n\nfunction fetchProduct(productId: number | string): Promise<FetchRoleResponse> {\n  return apiClient.get(Endpoint(productId)).then(response => response.data);\n}\n","import {message} from '@ui/i18n/message';\n\nexport const BillingPeriodPresets = [\n  {\n    key: 'day1',\n    label: message('Daily'),\n    interval: 'day',\n    interval_count: 1,\n  },\n  {\n    key: 'week1',\n    label: message('Weekly'),\n    interval: 'week',\n    interval_count: 1,\n  },\n  {\n    key: 'month1',\n    label: message('Monthly'),\n    interval: 'month',\n    interval_count: 1,\n  },\n  {\n    key: 'month3',\n    label: message('Every 3 months'),\n    interval: 'month',\n    interval_count: 3,\n  },\n  {\n    key: 'month6',\n    label: message('Every 6 months'),\n    interval: 'month',\n    interval_count: 6,\n  },\n  {\n    key: 'year1',\n    label: message('Yearly'),\n    interval: 'year',\n    interval_count: 1,\n  },\n  {\n    key: 'custom',\n    label: message('Custom'),\n    interval: null,\n    interval_count: null,\n  },\n];\n","import {useFormContext} from 'react-hook-form';\nimport {Product} from '@common/billing/product';\nimport React, {Fragment, useMemo, useState} from 'react';\nimport {useValueLists} from '@common/http/value-lists';\nimport {FormTextField} from '@ui/forms/input-field/text-field/text-field';\nimport {Trans} from '@ui/i18n/trans';\nimport {Item} from '@ui/forms/listbox/item';\nimport {FormSelect, Select} from '@ui/forms/select/select';\nimport {Price} from '@common/billing/price';\nimport {BillingPeriodPresets} from '@common/admin/plans/crupdate-plan-page/billing-period-presets';\nimport {Button} from '@ui/buttons/button';\nimport {message} from '@ui/i18n/message';\nimport {useTrans} from '@ui/i18n/use-trans';\n\ninterface PriceFormProps {\n  index: number;\n  onRemovePrice: () => void;\n}\nexport function PriceForm({index, onRemovePrice}: PriceFormProps) {\n  const {trans} = useTrans();\n  const query = useValueLists(['currencies']);\n  const currencies = useMemo(() => {\n    return query.data?.currencies ? Object.values(query.data.currencies) : [];\n  }, [query.data]);\n  const {watch, getValues} = useFormContext<Product>();\n  const isNewProduct = !watch('id');\n  const isNewPrice = watch(`prices.${index}.id`) == null;\n  const subscriberCount = watch(`prices.${index}.subscriptions_count`) || 0;\n\n  // select billing period preset based on price \"interval\" and \"interval_count\"\n  const [billingPeriodPreset, setBillingPeriodPreset] = useState(() => {\n    const interval = getValues(`prices.${index}.interval`);\n    const intervalCount = getValues(`prices.${index}.interval_count`);\n    const preset = BillingPeriodPresets.find(\n      p => p.key === `${interval}${intervalCount}`,\n    );\n    return preset ? preset.key : 'custom';\n  });\n\n  const allowPriceChanges = isNewProduct || isNewPrice || !subscriberCount;\n\n  return (\n    <Fragment>\n      {!allowPriceChanges && (\n        <p className=\"mb-20 max-w-500 text-sm text-muted\">\n          <Trans\n            message=\"This price can't modified or deleted, because it has [one 1 subscriber|other :count subscribers]. You can instead add a new price.\"\n            values={{count: subscriberCount}}\n          />\n        </p>\n      )}\n\n      <FormTextField\n        required\n        disabled={!allowPriceChanges}\n        label={<Trans message=\"Amount\" />}\n        type=\"number\"\n        min={0.1}\n        step={0.01}\n        name={`prices.${index}.amount`}\n        className=\"mb-20\"\n      />\n      <FormSelect\n        required\n        disabled={!allowPriceChanges}\n        label={<Trans message=\"Currency\" />}\n        name={`prices.${index}.currency`}\n        items={currencies}\n        showSearchField\n        searchPlaceholder={trans(message('Search currencies'))}\n        selectionMode=\"single\"\n        className=\"mb-20\"\n      >\n        {item => (\n          <Item\n            value={item.code}\n            key={item.code}\n          >{`${item.code}: ${item.name}`}</Item>\n        )}\n      </FormSelect>\n      <BillingPeriodSelect\n        disabled={!allowPriceChanges}\n        index={index}\n        value={billingPeriodPreset}\n        onValueChange={setBillingPeriodPreset}\n      />\n      {billingPeriodPreset === 'custom' && (\n        <CustomBillingPeriodField disabled={!allowPriceChanges} index={index} />\n      )}\n      <div className=\"text-right\">\n        <Button\n          size=\"xs\"\n          variant=\"outline\"\n          color=\"danger\"\n          disabled={!allowPriceChanges}\n          onClick={() => {\n            onRemovePrice();\n          }}\n        >\n          <Trans message=\"Delete price\" />\n        </Button>\n      </div>\n    </Fragment>\n  );\n}\n\ninterface BillingPeriodSelectProps {\n  index: number;\n  value: string;\n  onValueChange: (value: string) => void;\n  disabled: boolean;\n}\nfunction BillingPeriodSelect({\n  index,\n  value,\n  onValueChange,\n  disabled,\n}: BillingPeriodSelectProps) {\n  const {setValue: setFormValue} = useFormContext<Product>();\n\n  return (\n    <Select\n      label={<Trans message=\"Billing period\" />}\n      disabled={disabled}\n      className=\"mb-20\"\n      selectionMode=\"single\"\n      selectedValue={value}\n      onSelectionChange={value => {\n        onValueChange(value as string);\n        if (value === 'custom') {\n        } else {\n          const preset = BillingPeriodPresets.find(p => p.key === value);\n          if (preset) {\n            setFormValue(\n              `prices.${index}.interval`,\n              preset.interval as Price['interval'],\n            );\n            setFormValue(\n              `prices.${index}.interval_count`,\n              preset.interval_count as number,\n            );\n          }\n        }\n      }}\n    >\n      {BillingPeriodPresets.map(preset => (\n        <Item key={preset.key} value={preset.key}>\n          <Trans {...preset.label} />\n        </Item>\n      ))}\n    </Select>\n  );\n}\n\ninterface CustomBillingPeriodFieldProps {\n  index: number;\n  disabled: boolean;\n}\nfunction CustomBillingPeriodField({\n  index,\n  disabled,\n}: CustomBillingPeriodFieldProps) {\n  const {watch} = useFormContext<Product>();\n  const interval = watch(`prices.${index}.interval`);\n  let maxIntervalCount: number;\n\n  if (interval === 'day') {\n    maxIntervalCount = 365;\n  } else if (interval === 'week') {\n    maxIntervalCount = 52;\n  } else {\n    maxIntervalCount = 12;\n  }\n\n  return (\n    <div className=\"flex w-min rounded border\">\n      <div className=\"flex items-center px-18 text-sm\">\n        <Trans message=\"Every\" />\n      </div>\n      <FormTextField\n        inputShadow=\"shadow-none\"\n        inputBorder=\"border-none\"\n        className=\"w-80 border-l border-r\"\n        name={`prices.${index}.interval_count`}\n        type=\"number\"\n        min={1}\n        max={maxIntervalCount}\n        disabled={disabled}\n        required\n      />\n      <FormSelect\n        inputShadow=\"shadow-none\"\n        inputBorder=\"border-none\"\n        name={`prices.${index}.interval`}\n        selectionMode=\"single\"\n        disabled={disabled}\n      >\n        <Item value=\"day\">\n          <Trans message=\"Days\" />\n        </Item>\n        <Item value=\"week\">\n          <Trans message=\"Weeks\" />\n        </Item>\n        <Item value=\"month\">\n          <Trans message=\"Months\" />\n        </Item>\n      </FormSelect>\n    </div>\n  );\n}\n","import {FormTextField} from '@ui/forms/input-field/text-field/text-field';\nimport {Trans} from '@ui/i18n/trans';\nimport React, {Fragment, ReactNode} from 'react';\nimport {useFieldArray, useFormContext} from 'react-hook-form';\nimport {Accordion, AccordionItem} from '@ui/accordion/accordion';\nimport {FormattedPrice} from '@common/billing/formatted-price';\nimport {FormPermissionSelector} from '@common/auth/ui/permission-selector';\nimport {PriceForm} from './price-form';\nimport {Button} from '@ui/buttons/button';\nimport {AddIcon} from '@ui/icons/material/Add';\nimport {IconButton} from '@ui/buttons/icon-button';\nimport {CloseIcon} from '@ui/icons/material/Close';\nimport {CreateProductPayload} from '../requests/use-create-product';\nimport {FormSwitch} from '@ui/forms/toggle/switch';\nimport {FormSelect} from '@ui/forms/select/select';\nimport {Item} from '@ui/forms/listbox/item';\nimport {FormFileSizeField} from '@common/uploads/components/file-size-field';\nimport {Link} from 'react-router';\nimport {LinkStyle} from '@ui/buttons/external-link';\n\nexport function CrupdatePlanForm() {\n  return (\n    <Fragment>\n      <FormTextField\n        name=\"name\"\n        label={<Trans message=\"Name\" />}\n        className=\"mb-20\"\n        required\n        autoFocus\n      />\n      <FormTextField\n        name=\"description\"\n        label={<Trans message=\"Description\" />}\n        className=\"mb-20\"\n        inputElementType=\"textarea\"\n        rows={4}\n      />\n      <FormSelect\n        name=\"position\"\n        selectionMode=\"single\"\n        label={<Trans message=\"Position in pricing table\" />}\n        className=\"mb-20\"\n      >\n        <Item value={0}>\n          <Trans message=\"First\" />\n        </Item>\n        <Item value={1}>\n          <Trans message=\"Second\" />\n        </Item>\n        <Item value={2}>\n          <Trans message=\"Third\" />\n        </Item>\n        <Item value={3}>\n          <Trans message=\"Fourth\" />\n        </Item>\n        <Item value={4}>\n          <Trans message=\"Fifth\" />\n        </Item>\n      </FormSelect>\n      <FormFileSizeField\n        className=\"mb-30\"\n        name=\"available_space\"\n        label={<Trans message=\"Allowed storage space\" />}\n        description={\n          <Trans\n            values={{\n              a: parts => (\n                <Link\n                  className={LinkStyle}\n                  target=\"_blank\"\n                  to=\"/admin/settings/uploading\"\n                >\n                  {parts}\n                </Link>\n              ),\n            }}\n            message=\"Total storage space all user uploads are allowed to take up.\"\n          />\n        }\n      />\n      <FormSwitch\n        name=\"recommended\"\n        className=\"mb-20\"\n        description={\n          <Trans message=\"Plan will be displayed more prominently on pricing page.\" />\n        }\n      >\n        <Trans message=\"Recommend\" />\n      </FormSwitch>\n      <FormSwitch\n        name=\"hidden\"\n        className=\"mb-20\"\n        description={\n          <Trans message=\"Plan will not be shown on pricing or upgrade pages.\" />\n        }\n      >\n        <Trans message=\"Hidden\" />\n      </FormSwitch>\n      <FormSwitch\n        name=\"free\"\n        className=\"mb-20\"\n        description={\n          <Trans message=\"Will be assigned to all users, if they are not subscribed already.\" />\n        }\n      >\n        <Trans message=\"Free\" />\n      </FormSwitch>\n      <Header>\n        <Trans message=\"Feature list\" />\n      </Header>\n      <FeatureListForm />\n      <PricingListForm />\n      <Header>\n        <Trans message=\"Permissions\" />\n      </Header>\n      <FormPermissionSelector name=\"permissions\" />\n    </Fragment>\n  );\n}\n\ninterface HeaderProps {\n  children: ReactNode;\n}\nfunction Header({children}: HeaderProps) {\n  return <h2 className=\"mb-20 mt-40 text-base font-semibold\">{children}</h2>;\n}\n\nfunction FeatureListForm() {\n  const {fields, append, remove} = useFieldArray<CreateProductPayload>({\n    name: 'feature_list',\n  });\n  return (\n    <div>\n      {fields.map((field, index) => {\n        return (\n          <div key={field.id} className=\"mb-10 flex gap-10\">\n            <FormTextField\n              name={`feature_list.${index}.value`}\n              size=\"sm\"\n              className=\"flex-auto\"\n            />\n            <IconButton\n              size=\"sm\"\n              color=\"primary\"\n              className=\"flex-shrink-0\"\n              onClick={() => {\n                remove(index);\n              }}\n            >\n              <CloseIcon />\n            </IconButton>\n          </div>\n        );\n      })}\n      <Button\n        variant=\"text\"\n        color=\"primary\"\n        startIcon={<AddIcon />}\n        size=\"xs\"\n        onClick={() => {\n          append({value: ''});\n        }}\n      >\n        <Trans message=\"Add another line\" />\n      </Button>\n    </div>\n  );\n}\n\nfunction PricingListForm() {\n  const {\n    watch,\n    formState: {errors},\n  } = useFormContext<CreateProductPayload>();\n  const {fields, append, remove} = useFieldArray<\n    CreateProductPayload,\n    'prices',\n    'key'\n  >({\n    name: 'prices',\n    keyName: 'key',\n  });\n\n  // if plan is marked as free, hide pricing form\n  if (watch('free')) {\n    return null;\n  }\n\n  return (\n    <Fragment>\n      <Header>\n        <Trans message=\"Pricing\" />\n      </Header>\n      {errors.prices?.message && (\n        <div className=\"mb-20 text-sm text-danger\">{errors.prices.message}</div>\n      )}\n      <Accordion variant=\"outline\" className=\"mb-10\">\n        {fields.map((field, index) => (\n          <AccordionItem\n            label={<FormattedPrice price={field} />}\n            key={field.key}\n          >\n            <PriceForm\n              index={index}\n              onRemovePrice={() => {\n                remove(index);\n              }}\n            />\n          </AccordionItem>\n        ))}\n      </Accordion>\n      <Button\n        variant=\"text\"\n        color=\"primary\"\n        startIcon={<AddIcon />}\n        size=\"xs\"\n        onClick={() => {\n          append({\n            currency: 'USD',\n            amount: 1,\n            interval_count: 1,\n            interval: 'month',\n          });\n        }}\n      >\n        <Trans message=\"Add another price\" />\n      </Button>\n    </Fragment>\n  );\n}\n","import {useMutation} from '@tanstack/react-query';\nimport {apiClient, queryClient} from '@common/http/query-client';\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\nimport {toast} from '@ui/toast/toast';\nimport {useTrans} from '@ui/i18n/use-trans';\nimport {message} from '@ui/i18n/message';\nimport {DatatableDataQueryKey} from '@common/datatable/requests/paginated-resources';\nimport {Product} from '@common/billing/product';\nimport {useNavigate} from '@common/ui/navigation/use-navigate';\nimport {CreateProductPayload} from './use-create-product';\nimport {UseFormReturn} from 'react-hook-form';\nimport {onFormQueryError} from '@common/errors/on-form-query-error';\n\ninterface Response extends BackendResponse {\n  product: Product;\n}\n\nexport interface UpdateProductPayload extends CreateProductPayload {\n  id: number;\n}\n\nconst Endpoint = (id: number) => `billing/products/${id}`;\n\nexport function useUpdateProduct(form: UseFormReturn<UpdateProductPayload>) {\n  const {trans} = useTrans();\n  const navigate = useNavigate();\n  return useMutation({\n    mutationFn: (payload: UpdateProductPayload) => updateProduct(payload),\n    onSuccess: response => {\n      toast(trans(message('Plan updated')));\n      queryClient.invalidateQueries({\n        queryKey: [Endpoint(response.product.id)],\n      });\n      queryClient.invalidateQueries({\n        queryKey: DatatableDataQueryKey('billing/products'),\n      });\n      navigate('/admin/plans');\n    },\n    onError: err => onFormQueryError(err, form),\n  });\n}\n\nfunction updateProduct({\n  id,\n  ...payload\n}: UpdateProductPayload): Promise<Response> {\n  const backendPayload = {\n    ...payload,\n    feature_list: payload.feature_list.map(feature => feature.value),\n  };\n  return apiClient.put(Endpoint(id), backendPayload).then(r => r.data);\n}\n","import {FullPageLoader} from '@ui/progress/full-page-loader';\nimport {Trans} from '@ui/i18n/trans';\nimport {useForm} from 'react-hook-form';\nimport {CrupdateResourceLayout} from '../../crupdate-resource-layout';\nimport {useProduct} from '../requests/use-product';\nimport {Product} from '@common/billing/product';\nimport {CrupdatePlanForm} from './crupdate-plan-form';\nimport {\n  UpdateProductPayload,\n  useUpdateProduct,\n} from '../requests/use-update-product';\n\nexport function EditPlanPage() {\n  const query = useProduct();\n\n  if (query.status !== 'success') {\n    return <FullPageLoader />;\n  }\n\n  return <PageContent product={query.data.product} />;\n}\n\ninterface PageContentProps {\n  product: Product;\n}\nfunction PageContent({product}: PageContentProps) {\n  const form = useForm<UpdateProductPayload>({\n    defaultValues: {\n      ...product,\n      feature_list: product.feature_list.map(f => ({value: f})),\n    },\n  });\n  const updateProduct = useUpdateProduct(form);\n\n  return (\n    <CrupdateResourceLayout\n      form={form}\n      onSubmit={values => {\n        updateProduct.mutate(values);\n      }}\n      title={\n        <Trans message=\"Edit “:name“ plan\" values={{name: product.name}} />\n      }\n      isLoading={updateProduct.isPending}\n    >\n      <CrupdatePlanForm />\n    </CrupdateResourceLayout>\n  );\n}\n","import {Product} from '@common/billing/product';\nimport {useTrans} from '@ui/i18n/use-trans';\nimport {useNavigate} from '@common/ui/navigation/use-navigate';\nimport {useMutation} from '@tanstack/react-query';\nimport {toast} from '@ui/toast/toast';\nimport {message} from '@ui/i18n/message';\nimport {apiClient, queryClient} from '@common/http/query-client';\nimport {DatatableDataQueryKey} from '@common/datatable/requests/paginated-resources';\nimport {Price} from '@common/billing/price';\nimport {onFormQueryError} from '@common/errors/on-form-query-error';\nimport {UseFormReturn} from 'react-hook-form';\n\nconst endpoint = 'billing/products';\n\nexport interface CreateProductPayload\n  extends Omit<Partial<Product>, 'feature_list' | 'prices'> {\n  feature_list: {value: string}[];\n  prices: Omit<Price, 'id'>[];\n}\n\nexport function useCreateProduct(form: UseFormReturn<CreateProductPayload>) {\n  const {trans} = useTrans();\n  const navigate = useNavigate();\n  return useMutation({\n    mutationFn: (payload: CreateProductPayload) => createProduct(payload),\n    onSuccess: () => {\n      toast(trans(message('Plan created')));\n      queryClient.invalidateQueries({queryKey: [endpoint]});\n      queryClient.invalidateQueries({\n        queryKey: DatatableDataQueryKey('billing/products'),\n      });\n      navigate('/admin/plans');\n    },\n    onError: err => onFormQueryError(err, form),\n  });\n}\n\nfunction createProduct(payload: CreateProductPayload): Promise<Response> {\n  const backendPayload = {\n    ...payload,\n    feature_list: payload.feature_list.map(feature => feature.value),\n  };\n  return apiClient.post(endpoint, backendPayload).then(r => r.data);\n}\n","import {useForm} from 'react-hook-form';\nimport {CrupdateResourceLayout} from '../../crupdate-resource-layout';\nimport {Trans} from '@ui/i18n/trans';\nimport {CrupdatePlanForm} from './crupdate-plan-form';\nimport {\n  CreateProductPayload,\n  useCreateProduct,\n} from '../requests/use-create-product';\n\nexport function CreatePlanPage() {\n  const form = useForm<CreateProductPayload>({\n    defaultValues: {\n      free: false,\n      recommended: false,\n    },\n  });\n  const createProduct = useCreateProduct(form);\n\n  return (\n    <CrupdateResourceLayout\n      form={form}\n      onSubmit={values => {\n        createProduct.mutate(values);\n      }}\n      title={<Trans message=\"Create new plan\" />}\n      isLoading={createProduct.isPending}\n    >\n      <CrupdatePlanForm />\n    </CrupdateResourceLayout>\n  );\n}\n","import {Trans} from '@ui/i18n/trans';\nimport {FormSwitch} from '@ui/forms/toggle/switch';\nimport {useFieldArray, useForm, useFormContext} from 'react-hook-form';\nimport {AdminSettings} from '../admin-settings';\nimport React, {Fragment} from 'react';\nimport {FormSelect} from '@ui/forms/select/select';\nimport {Item} from '@ui/forms/listbox/item';\nimport {MenuItemForm} from '../../menus/menu-item-form';\nimport {Button} from '@ui/buttons/button';\nimport {AddIcon} from '@ui/icons/material/Add';\nimport {DialogTrigger} from '@ui/overlays/dialog/dialog-trigger';\nimport {AddMenuItemDialog} from '../../appearance/sections/menus/add-menu-item-dialog';\nimport {Accordion, AccordionItem} from '@ui/accordion/accordion';\nimport {IconButton} from '@ui/buttons/icon-button';\nimport {CloseIcon} from '@ui/icons/material/Close';\nimport {\n  AdminSettingsForm,\n  AdminSettingsLayout,\n} from '@common/admin/settings/form/admin-settings-form';\nimport {SettingsSeparator} from '@common/admin/settings/form/settings-separator';\nimport {useValueLists} from '@common/http/value-lists';\n\nexport function GdprSettings() {\n  const optionQuery = useValueLists(['menuItemCategories']);\n\n  return (\n    <AdminSettingsLayout\n      title={<Trans message=\"GDPR\" />}\n      description={\n        <Trans message=\"Configure settings related to EU General Data Protection Regulation.\" />\n      }\n      isLoading={optionQuery.isLoading}\n    >\n      {data => <Form data={data} />}\n    </AdminSettingsLayout>\n  );\n}\n\ninterface FormProps {\n  data: AdminSettings;\n}\nfunction Form({data}: FormProps) {\n  const form = useForm<AdminSettings>({\n    defaultValues: {\n      client: {\n        cookie_notice: {\n          enable: data.client.cookie_notice?.enable ?? false,\n          button: data.client.cookie_notice?.button ?? {},\n          position: data.client.cookie_notice?.position ?? 'bottom',\n        },\n        registration: {\n          policies: data.client.registration?.policies ?? [],\n        },\n      },\n    },\n  });\n\n  return (\n    <AdminSettingsForm form={form}>\n      <CookieNoticeSection />\n      <SettingsSeparator />\n      <RegistrationPoliciesSection />\n    </AdminSettingsForm>\n  );\n}\n\nfunction CookieNoticeSection() {\n  const {watch} = useFormContext<AdminSettings>();\n  const noticeEnabled = watch('client.cookie_notice.enable');\n\n  return (\n    <div>\n      <FormSwitch\n        name=\"client.cookie_notice.enable\"\n        className=\"mb-20\"\n        description={\n          <Trans message=\"Whether cookie notice should be shown automatically to users from EU until it is accepted.\" />\n        }\n      >\n        <Trans message=\"Enable cookie notice\" />\n      </FormSwitch>\n      {noticeEnabled && (\n        <Fragment>\n          <div className=\"mb-20 border-b pb-6\">\n            <div className=\"mb-20 border-b pb-10 text-sm font-medium\">\n              <Trans message=\"Information button\" />\n            </div>\n            <div className=\"mb-20\">\n              <MenuItemForm\n                hideRoleAndPermissionFields\n                formPathPrefix=\"client.cookie_notice.button\"\n              />\n            </div>\n          </div>\n          <FormSelect\n            name=\"client.cookie_notice.position\"\n            selectionMode=\"single\"\n            label={<Trans message=\"Cookie notice position\" />}\n            className=\"mb-20\"\n          >\n            <Item value=\"top\">\n              <Trans message=\"Top\" />\n            </Item>\n            <Item value=\"bottom\">\n              <Trans message=\"Bottom\" />\n            </Item>\n          </FormSelect>\n        </Fragment>\n      )}\n    </div>\n  );\n}\n\nfunction RegistrationPoliciesSection() {\n  const {fields, append, remove} = useFieldArray<\n    AdminSettings,\n    'client.registration.policies'\n  >({\n    name: 'client.registration.policies',\n  });\n  const {watch} = useFormContext();\n\n  return (\n    <Fragment>\n      <div className=\"mb-6 text-sm\">\n        <Trans message=\"Registration policies\" />\n      </div>\n      <div className=\"text-xs text-muted\">\n        <Trans message=\"Create policies that will be shown on registration page. User will be required to accept them by toggling a checkbox.\" />\n      </div>\n      <Accordion className=\"mt-16\" variant=\"outline\">\n        {fields.map((field, index) => (\n          <AccordionItem\n            key={field.id}\n            label={field.label}\n            chevronPosition=\"left\"\n            endAppend={\n              <IconButton\n                variant=\"text\"\n                color=\"danger\"\n                size=\"sm\"\n                onClick={() => remove(index)}\n              >\n                <CloseIcon />\n              </IconButton>\n            }\n          >\n            <MenuItemForm\n              hideRoleAndPermissionFields\n              formPathPrefix={`client.registration.policies.${index}`}\n            />\n          </AccordionItem>\n        ))}\n      </Accordion>\n      <DialogTrigger\n        type=\"modal\"\n        onClose={value => {\n          if (value) {\n            append(value);\n          }\n        }}\n      >\n        <Button\n          className=\"mt-12\"\n          variant=\"link\"\n          color=\"primary\"\n          startIcon={<AddIcon />}\n          size=\"xs\"\n        >\n          <Trans message=\"Add another policy\" />\n        </Button>\n        <AddMenuItemDialog title={<Trans message=\"Add policy\" />} />\n      </DialogTrigger>\n    </Fragment>\n  );\n}\n","import {useMutation} from '@tanstack/react-query';\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\nimport {CustomPage} from '../custom-page';\nimport {apiClient, queryClient} from '@common/http/query-client';\nimport {showHttpErrorToast} from '@common/http/show-http-error-toast';\nimport {DatatableDataQueryKey} from '@common/datatable/requests/paginated-resources';\nimport {toast} from '@ui/toast/toast';\nimport {message} from '@ui/i18n/message';\nimport {useParams} from 'react-router';\nimport {CreateCustomPagePayload} from '@common/admin/custom-pages/requests/use-create-custom-page';\n\ninterface Response extends BackendResponse {\n  page: CustomPage;\n}\n\nexport function useUpdateCustomPage(endpoint?: string) {\n  const {pageId} = useParams();\n  const finalEndpoint = `${endpoint || 'custom-pages'}/${pageId}`;\n  return useMutation({\n    mutationFn: (payload: CreateCustomPagePayload) =>\n      updatePage(payload, finalEndpoint),\n    onError: err => showHttpErrorToast(err),\n    onSuccess: async () => {\n      await queryClient.invalidateQueries({queryKey: ['custom-pages']});\n      await queryClient.invalidateQueries({\n        queryKey: DatatableDataQueryKey(finalEndpoint),\n      });\n      toast(message('Page updated'));\n    },\n  });\n}\n\nfunction updatePage(\n  payload: CreateCustomPagePayload,\n  endpoint: string,\n): Promise<Response> {\n  return apiClient.put(`${endpoint}`, payload).then(r => r.data);\n}\n","import React, {useState} from 'react';\nimport {useTrans} from '@ui/i18n/use-trans';\nimport {useFormContext} from 'react-hook-form';\nimport {FormTextField} from '@ui/forms/input-field/text-field/text-field';\nimport clsx from 'clsx';\nimport {EditIcon} from '@ui/icons/material/Edit';\nimport {CreateCustomPagePayload} from '@common/admin/custom-pages/requests/use-create-custom-page';\n\nexport function ArticleEditorTitle() {\n  const [editingTitle, setEditingTitle] = useState(false);\n  const {trans} = useTrans();\n  const form = useFormContext<CreateCustomPagePayload>();\n  const watchedTitle = form.watch('title');\n\n  const titlePlaceholder = trans({message: 'Title'});\n\n  if (editingTitle) {\n    return (\n      <FormTextField\n        placeholder={titlePlaceholder}\n        autoFocus\n        className=\"mb-30\"\n        onBlur={() => {\n          setEditingTitle(false);\n        }}\n        name=\"title\"\n        required\n      />\n    );\n  }\n  return (\n    <h1\n      tabIndex={0}\n      onClick={() => {\n        setEditingTitle(true);\n      }}\n      onFocus={() => {\n        setEditingTitle(true);\n      }}\n      className={clsx(\n        'cursor-pointer rounded hover:bg-primary/focus',\n        !watchedTitle && 'text-muted',\n      )}\n    >\n      {watchedTitle || titlePlaceholder}\n      <EditIcon className=\"mx-8 mt-8 align-top text-muted icon-sm\" />\n    </h1>\n  );\n}\n","import React, {Fragment, useEffect, useState} from 'react';\nimport clsx from 'clsx';\nimport {RefCallBack} from 'react-hook-form';\nimport {Button} from '@ui/buttons/button';\nimport {LinkIcon} from '@ui/icons/material/Link';\nimport {Trans} from '@ui/i18n/trans';\nimport {useSettings} from '@ui/settings/use-settings';\nimport {slugifyString} from '@ui/utils/string/slugify-string';\nimport {TextField} from '@ui/forms/input-field/text-field/text-field';\n\nexport interface SlugEditorProps {\n  prefix?: string;\n  suffix?: string;\n  host?: string;\n  value?: string | null;\n  placeholder?: string;\n  onChange?: (value: string) => void;\n  className?: string;\n  inputRef?: RefCallBack;\n  onInputBlur?: () => void;\n  showLinkIcon?: boolean;\n  pattern?: string;\n  minLength?: number;\n  maxLength?: number;\n  hideButton?: boolean;\n}\nexport function SlugEditor({\n  host,\n  value: initialValue = '',\n  placeholder,\n  onChange,\n  className,\n  inputRef,\n  onInputBlur,\n  showLinkIcon = true,\n  pattern,\n  minLength,\n  maxLength,\n  hideButton,\n  ...props\n}: SlugEditorProps) {\n  const {base_url} = useSettings();\n  const prefix = props.prefix ? `/${props.prefix}` : '';\n  const suffix = props.suffix ? `/${props.suffix}` : '';\n  const [isEditing, setIsEditing] = useState(false);\n  const [value, setValue] = useState(initialValue);\n  host = host || base_url;\n\n  useEffect(() => {\n    setValue(initialValue);\n  }, [initialValue]);\n\n  const handleSubmit = () => {\n    if (!isEditing) {\n      setIsEditing(true);\n    } else {\n      setIsEditing(false);\n      if (value) {\n        onChange?.(value);\n      }\n    }\n  };\n\n  let preview: string = '';\n  if (value) {\n    preview = value;\n  } else if (placeholder) {\n    preview = slugifyString(placeholder);\n  }\n\n  return (\n    // can't use <form/> here as component might be used inside another form\n    <div className={clsx('flex items-center', className)}>\n      {showLinkIcon && <LinkIcon className=\"text-muted icon-md\" />}\n      <div className=\"ml-6 mr-14 text-primary\">\n        {host}\n        {prefix}\n        {!isEditing && preview && (\n          <Fragment>\n            <span>/</span>\n            <span className=\"font-medium\">{preview}</span>\n          </Fragment>\n        )}\n        {!isEditing ? suffix : null}\n      </div>\n      {isEditing && (\n        <TextField\n          pattern={pattern}\n          minLength={minLength}\n          maxLength={maxLength}\n          onKeyDown={e => {\n            if (e.key === 'Enter') {\n              handleSubmit();\n            }\n          }}\n          ref={inputRef}\n          aria-label=\"slug\"\n          autoFocus\n          className=\"mr-14\"\n          size=\"2xs\"\n          value={value as string}\n          onBlur={onInputBlur}\n          onChange={e => {\n            setValue(e.target.value);\n          }}\n        />\n      )}\n      {!hideButton && (\n        <Button\n          type=\"button\"\n          color=\"chip\"\n          variant=\"outline\"\n          size=\"2xs\"\n          onClick={() => {\n            handleSubmit();\n          }}\n        >\n          {isEditing ? <Trans message=\"Save\" /> : <Trans message=\"Edit\" />}\n        </Button>\n      )}\n    </div>\n  );\n}\n","import {createSvgIcon} from '../create-svg-icon';\n\nexport const UndoIcon = createSvgIcon(\n  <path d=\"M12.5 8c-2.65 0-5.05.99-6.9 2.6L2 7v9h9l-3.62-3.62c1.39-1.16 3.16-1.88 5.12-1.88 3.54 0 6.55 2.31 7.6 5.5l2.37-.78C21.08 11.03 17.15 8 12.5 8z\" />\n, 'UndoOutlined');\n","import {createSvgIcon} from '../create-svg-icon';\n\nexport const RedoIcon = createSvgIcon(\n  <path d=\"M18.4 10.6C16.55 8.99 14.15 8 11.5 8c-4.65 0-8.58 3.03-9.96 7.22L3.9 16c1.05-3.19 4.05-5.5 7.6-5.5 1.95 0 3.73.72 5.12 1.88L13 16h9V7l-3.6 3.6z\" />\n, 'RedoOutlined');\n","import React from 'react';\nimport {IconButton} from '@ui/buttons/icon-button';\nimport {UndoIcon} from '@ui/icons/material/Undo';\nimport {RedoIcon} from '@ui/icons/material/Redo';\nimport {MenubarButtonProps} from './menubar-button-props';\n\nexport function HistoryButtons({editor}: MenubarButtonProps) {\n  return (\n    <span>\n      <IconButton\n        size=\"md\"\n        disabled={!editor.can().undo()}\n        onClick={() => {\n          editor.commands.focus();\n          editor.commands.undo();\n        }}\n      >\n        <UndoIcon />\n      </IconButton>\n      <IconButton\n        size=\"md\"\n        disabled={!editor.can().redo()}\n        onClick={() => {\n          editor.commands.focus();\n          editor.commands.redo();\n        }}\n      >\n        <RedoIcon />\n      </IconButton>\n    </span>\n  );\n}\n","import {createSvgIcon} from '../create-svg-icon';\n\nexport const CodeIcon = createSvgIcon(\n  <path d=\"M9.4 16.6 4.8 12l4.6-4.6L8 6l-6 6 6 6 1.4-1.4zm5.2 0 4.6-4.6-4.6-4.6L16 6l6 6-6 6-1.4-1.4z\" />\n, 'CodeOutlined');\n","import {Button} from '@ui/buttons/button';\nimport {CodeIcon} from '@ui/icons/material/Code';\nimport {Trans} from '@ui/i18n/trans';\nimport {DialogTrigger} from '@ui/overlays/dialog/dialog-trigger';\nimport {AceDialog} from '../../ace-editor/ace-dialog';\nimport {Editor} from '@tiptap/react';\nimport React from 'react';\n\ninterface ModeButtonProps {\n  editor: Editor;\n}\nexport function ModeButton({editor}: ModeButtonProps) {\n  return (\n    <DialogTrigger\n      type=\"modal\"\n      onClose={newValue => {\n        if (newValue != null) {\n          editor?.commands.setContent(newValue);\n        }\n      }}\n    >\n      <Button variant=\"text\" startIcon={<CodeIcon />}>\n        <Trans message=\"Source\" />\n      </Button>\n      <AceDialog\n        title={<Trans message=\"Source code\" />}\n        defaultValue={editor.getHTML()}\n      />\n    </DialogTrigger>\n  );\n}\n","export function Divider() {\n  return <div className=\"self-stretch mx-4 w-1 bg-divider flex-shrink-0\" />;\n}\n","import {createSvgIcon} from '../create-svg-icon';\n\nexport const FormatBoldIcon = createSvgIcon(\n  <path d=\"M15.6 10.79c.97-.67 1.65-1.77 1.65-2.79 0-2.26-1.75-4-4-4H7v14h7.04c2.09 0 3.71-1.7 3.71-3.79 0-1.52-.86-2.82-2.15-3.42zM10 6.5h3c.83 0 1.5.67 1.5 1.5s-.67 1.5-1.5 1.5h-3v-3zm3.5 9H10v-3h3.5c.83 0 1.5.67 1.5 1.5s-.67 1.5-1.5 1.5z\" />\n, 'FormatBoldOutlined');\n","import {createSvgIcon} from '../create-svg-icon';\n\nexport const FormatItalicIcon = createSvgIcon(\n  <path d=\"M10 4v3h2.21l-3.42 8H6v3h8v-3h-2.21l3.42-8H18V4h-8z\" />\n, 'FormatItalicOutlined');\n","import {createSvgIcon} from '../create-svg-icon';\n\nexport const FormatUnderlinedIcon = createSvgIcon(\n  <path d=\"M12 17c3.31 0 6-2.69 6-6V3h-2.5v8c0 1.93-1.57 3.5-3.5 3.5S8.5 12.93 8.5 11V3H6v8c0 3.31 2.69 6 6 6zm-7 2v2h14v-2H5z\" />\n, 'FormatUnderlinedOutlined');\n","import React from 'react';\nimport clsx from 'clsx';\nimport {IconButton} from '@ui/buttons/icon-button';\nimport {FormatBoldIcon} from '@ui/icons/material/FormatBold';\nimport {FormatItalicIcon} from '@ui/icons/material/FormatItalic';\nimport {FormatUnderlinedIcon} from '@ui/icons/material/FormatUnderlined';\nimport {MenubarButtonProps} from './menubar-button-props';\nimport {Tooltip} from '@ui/tooltip/tooltip';\nimport {Trans} from '@ui/i18n/trans';\n\nexport function FontStyleButtons({editor, size}: MenubarButtonProps) {\n  return (\n    <span className={clsx('flex-shrink-0 whitespace-nowrap')}>\n      <Tooltip label={<Trans message=\"Bold\" />}>\n        <IconButton\n          size={size}\n          color={editor.isActive('bold') ? 'primary' : null}\n          onClick={() => {\n            editor.commands.focus();\n            editor.commands.toggleBold();\n          }}\n        >\n          <FormatBoldIcon />\n        </IconButton>\n      </Tooltip>\n      <Tooltip label={<Trans message=\"Italic\" />}>\n        <IconButton\n          size={size}\n          color={editor.isActive('italic') ? 'primary' : null}\n          onClick={() => {\n            editor.commands.focus();\n            editor.commands.toggleItalic();\n          }}\n        >\n          <FormatItalicIcon />\n        </IconButton>\n      </Tooltip>\n      <Tooltip label={<Trans message=\"Underline\" />}>\n        <IconButton\n          size={size}\n          color={editor.isActive('underline') ? 'primary' : null}\n          onClick={() => {\n            editor.commands.focus();\n            editor.commands.toggleUnderline();\n          }}\n        >\n          <FormatUnderlinedIcon />\n        </IconButton>\n      </Tooltip>\n    </span>\n  );\n}\n","import {createSvgIcon} from '../create-svg-icon';\n\nexport const FormatListBulletedIcon = createSvgIcon(\n  <path d=\"M4 10.5c-.83 0-1.5.67-1.5 1.5s.67 1.5 1.5 1.5 1.5-.67 1.5-1.5-.67-1.5-1.5-1.5zm0-6c-.83 0-1.5.67-1.5 1.5S3.17 7.5 4 7.5 5.5 6.83 5.5 6 4.83 4.5 4 4.5zm0 12c-.83 0-1.5.68-1.5 1.5s.68 1.5 1.5 1.5 1.5-.68 1.5-1.5-.67-1.5-1.5-1.5zM7 19h14v-2H7v2zm0-6h14v-2H7v2zm0-8v2h14V5H7z\" />\n, 'FormatListBulletedOutlined');\n","import {createSvgIcon} from '../create-svg-icon';\n\nexport const FormatListNumberedIcon = createSvgIcon(\n  <path d=\"M2 17h2v.5H3v1h1v.5H2v1h3v-4H2v1zm1-9h1V4H2v1h1v3zm-1 3h1.8L2 13.1v.9h3v-1H3.2L5 10.9V10H2v1zm5-6v2h14V5H7zm0 14h14v-2H7v2zm0-6h14v-2H7v2z\" />\n, 'FormatListNumberedOutlined');\n","import React from 'react';\nimport clsx from 'clsx';\nimport {IconButton} from '@ui/buttons/icon-button';\nimport {FormatListBulletedIcon} from '@ui/icons/material/FormatListBulleted';\nimport {FormatListNumberedIcon} from '@ui/icons/material/FormatListNumbered';\nimport {MenubarButtonProps} from './menubar-button-props';\nimport {Tooltip} from '@ui/tooltip/tooltip';\nimport {Trans} from '@ui/i18n/trans';\n\nexport function ListButtons({editor, size}: MenubarButtonProps) {\n  const bulletActive = editor.isActive('bulletList');\n  const orderedActive = editor.isActive('orderedList');\n  return (\n    <span className={clsx('flex-shrink-0', 'whitespace-nowrap')}>\n      <Tooltip label={<Trans message=\"Bulleted list\" />}>\n        <IconButton\n          size={size}\n          color={bulletActive ? 'primary' : null}\n          onClick={() => {\n            editor.commands.focus();\n            editor.commands.toggleBulletList();\n          }}\n        >\n          <FormatListBulletedIcon />\n        </IconButton>\n      </Tooltip>\n      <Tooltip label={<Trans message=\"Numbered list\" />}>\n        <IconButton\n          size={size}\n          color={orderedActive ? 'primary' : null}\n          onClick={() => {\n            editor.commands.focus();\n            editor.commands.toggleOrderedList();\n          }}\n        >\n          <FormatListNumberedIcon />\n        </IconButton>\n      </Tooltip>\n    </span>\n  );\n}\n","import {Editor} from '@tiptap/react';\n\ninterface Props {\n  href: string;\n  target?: string;\n  text?: string;\n}\n\nexport function insertLinkIntoTextEditor(\n  editor: Editor,\n  {text, target, href}: Props\n) {\n  // no selection, insert new link with specified text\n  if (editor.state.selection.empty && text) {\n    editor.commands.insertContent(\n      `<a href=\"${href}\" target=\"${target}\">${text}</a>`\n    );\n  } else if (!editor.state.selection.empty) {\n    // no href provided, remove link from selection\n    if (!href) {\n      editor.chain().focus().extendMarkRange('link').unsetLink().run();\n    } else {\n      // add link to selection\n      editor\n        .chain()\n        .focus()\n        .extendMarkRange('link')\n        .setLink({href: href, target})\n        .run();\n    }\n  }\n}\n","import {useForm} from 'react-hook-form';\nimport React from 'react';\nimport clsx from 'clsx';\nimport {Form} from '@ui/forms/form';\nimport {FormTextField} from '@ui/forms/input-field/text-field/text-field';\nimport {DialogFooter} from '@ui/overlays/dialog/dialog-footer';\nimport {Button} from '@ui/buttons/button';\nimport {IconButton} from '@ui/buttons/icon-button';\nimport {LinkIcon} from '@ui/icons/material/Link';\nimport {MenubarButtonProps} from './menubar-button-props';\nimport {DialogTrigger} from '@ui/overlays/dialog/dialog-trigger';\nimport {FormSelect, Option} from '@ui/forms/select/select';\nimport {useDialogContext} from '@ui/overlays/dialog/dialog-context';\nimport {Dialog} from '@ui/overlays/dialog/dialog';\nimport {DialogHeader} from '@ui/overlays/dialog/dialog-header';\nimport {DialogBody} from '@ui/overlays/dialog/dialog-body';\nimport {Trans} from '@ui/i18n/trans';\nimport {Tooltip} from '@ui/tooltip/tooltip';\nimport {insertLinkIntoTextEditor} from '@common/text-editor/insert-link-into-text-editor';\n\ninterface FormValue {\n  href: string;\n  target?: string;\n  text?: string;\n}\n\nexport function LinkButton({editor, size}: MenubarButtonProps) {\n  return (\n    <DialogTrigger type=\"modal\">\n      <Tooltip label={<Trans message=\"Insert link\" />}>\n        <IconButton size={size} className={clsx('flex-shrink-0')}>\n          <LinkIcon />\n        </IconButton>\n      </Tooltip>\n      <LinkDialog editor={editor} />\n    </DialogTrigger>\n  );\n}\n\nfunction LinkDialog({editor}: MenubarButtonProps) {\n  const previousUrl = editor.getAttributes('link').href;\n  const previousText = editor.state.doc.textBetween(\n    editor.state.selection.from,\n    editor.state.selection.to,\n    '',\n  );\n\n  const form = useForm<FormValue>({\n    defaultValues: {href: previousUrl, text: previousText, target: '_blank'},\n  });\n  const {formId, close} = useDialogContext();\n  return (\n    <Dialog>\n      <DialogHeader>\n        <Trans message=\"Insert link\" />\n      </DialogHeader>\n      <DialogBody>\n        <Form\n          form={form}\n          id={formId}\n          onSubmit={value => {\n            insertLinkIntoTextEditor(editor, value);\n            close();\n          }}\n        >\n          <FormTextField\n            name=\"href\"\n            label={<Trans message=\"URL\" />}\n            autoFocus\n            type=\"url\"\n            className=\"mb-20\"\n          />\n          <FormTextField\n            name=\"text\"\n            label={<Trans message=\"Text to display\" />}\n            className=\"mb-20\"\n          />\n          <FormSelect\n            selectionMode=\"single\"\n            name=\"target\"\n            label={<Trans message=\"Open link in...\" />}\n          >\n            <Option value=\"_self\">\n              <Trans message=\"Current window\" />\n            </Option>\n            <Option value=\"_blank\">\n              <Trans message=\"New window\" />\n            </Option>\n          </FormSelect>\n        </Form>\n      </DialogBody>\n      <DialogFooter>\n        <Button onClick={close} variant=\"text\">\n          <Trans message=\"Cancel\" />\n        </Button>\n        <Button type=\"submit\" form={formId} variant=\"flat\" color=\"primary\">\n          <Trans message=\"Save\" />\n        </Button>\n      </DialogFooter>\n    </Dialog>\n  );\n}\n","import {createSvgIcon} from '../create-svg-icon';\n\nexport const ImageIcon = createSvgIcon(\n  <path d=\"M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-4.86 8.86-3 3.87L9 13.14 6 17h12l-3.86-5.14z\" />\n, 'ImageOutlined');\n","import React from 'react';\nimport clsx from 'clsx';\nimport {IconButton} from '@ui/buttons/icon-button';\nimport {ImageIcon} from '@ui/icons/material/Image';\nimport {MenubarButtonProps} from './menubar-button-props';\nimport {useActiveUpload} from '../../uploads/uploader/use-active-upload';\nimport {Disk} from '../../uploads/uploader/backend-metadata';\nimport {Tooltip} from '@ui/tooltip/tooltip';\nimport {Trans} from '@ui/i18n/trans';\nimport {FileInputType} from '@ui/utils/files/file-input-config';\n\nconst TwoMB = 2097152;\n\ninterface Props extends MenubarButtonProps {\n  diskPrefix?: string;\n}\n\nexport function ImageButton({editor, size, diskPrefix = 'page_media'}: Props) {\n  const {selectAndUploadFile} = useActiveUpload();\n\n  const handleUpload = () => {\n    selectAndUploadFile({\n      showToastOnRestrictionFail: true,\n      restrictions: {\n        allowedFileTypes: [FileInputType.image],\n        maxFileSize: TwoMB,\n      },\n      metadata: {\n        diskPrefix: diskPrefix,\n        disk: Disk.public,\n      },\n      onSuccess: entry => {\n        editor.commands.focus();\n        editor.commands.setImage({\n          src: entry.url,\n        });\n      },\n    });\n  };\n\n  return (\n    <Tooltip label={<Trans message=\"Insert image\" />}>\n      <IconButton\n        size={size}\n        onClick={handleUpload}\n        className={clsx('flex-shrink-0')}\n      >\n        <ImageIcon />\n      </IconButton>\n    </Tooltip>\n  );\n}\n","import {createSvgIcon} from '../create-svg-icon';\n\nexport const FormatClearIcon = createSvgIcon(\n  <path d=\"M20 8V5H6.39l3 3h1.83l-.55 1.28 2.09 2.1L14.21 8zM3.41 4.86 2 6.27l6.97 6.97L6.5 19h3l1.57-3.66L16.73 21l1.41-1.41z\" />\n, 'FormatClearOutlined');\n","import React from 'react';\nimport clsx from 'clsx';\nimport {FormatClearIcon} from '@ui/icons/material/FormatClear';\nimport {IconButton} from '@ui/buttons/icon-button';\nimport {MenubarButtonProps} from './menubar-button-props';\nimport {Tooltip} from '@ui/tooltip/tooltip';\nimport {Trans} from '@ui/i18n/trans';\n\nexport function ClearFormatButton({editor, size}: MenubarButtonProps) {\n  return (\n    <Tooltip label={<Trans message=\"Clear formatting\" />}>\n      <IconButton\n        className={clsx('flex-shrink-0')}\n        size={size}\n        onClick={() => {\n          editor.chain().focus().clearNodes().unsetAllMarks().run();\n        }}\n      >\n        <FormatClearIcon />\n      </IconButton>\n    </Tooltip>\n  );\n}\n","import {createSvgIcon} from '../create-svg-icon';\n\nexport const HorizontalRuleIcon = createSvgIcon(\n  <path fillRule=\"evenodd\" d=\"M4 11h16v2H4z\" />\n, 'HorizontalRuleOutlined');\n","import {createSvgIcon} from '../create-svg-icon';\n\nexport const PriorityHighIcon = createSvgIcon(\n  [<circle cx=\"12\" cy=\"19\" r=\"2\" key=\"0\" />,<path d=\"M10 3h4v12h-4z\" key=\"1\" />,]\n, 'PriorityHighOutlined');\n","import {createSvgIcon} from '../create-svg-icon';\n\nexport const NoteIcon = createSvgIcon(\n  <path d=\"M16 4H4c-1.1 0-2 .9-2 2v12.01c0 1.1.9 1.99 2 1.99h16c1.1 0 2-.9 2-2v-8l-6-6zM4 18.01V6h11v5h5v7.01H4z\" />\n, 'NoteOutlined');\n","import {createSvgIcon} from '../create-svg-icon';\n\nexport const SmartDisplayIcon = createSvgIcon(\n  [<path d=\"M9.5 7.5v9l7-4.5z\" key=\"0\" />,<path d=\"M20 4H4c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2zm0 14.01H4V5.99h16v12.02z\" key=\"1\" />,]\n, 'SmartDisplayOutlined');\n","import React, {useState} from 'react';\nimport {useForm} from 'react-hook-form';\nimport clsx from 'clsx';\nimport {HorizontalRuleIcon} from '@ui/icons/material/HorizontalRule';\nimport {PriorityHighIcon} from '@ui/icons/material/PriorityHigh';\nimport {WarningIcon} from '@ui/icons/material/Warning';\nimport {NoteIcon} from '@ui/icons/material/Note';\nimport {MenubarButtonProps} from './menubar-button-props';\nimport {IconButton} from '@ui/buttons/icon-button';\nimport {MoreVertIcon} from '@ui/icons/material/MoreVert';\nimport {SmartDisplayIcon} from '@ui/icons/material/SmartDisplay';\nimport {Form} from '@ui/forms/form';\nimport {FormTextField} from '@ui/forms/input-field/text-field/text-field';\nimport {DialogFooter} from '@ui/overlays/dialog/dialog-footer';\nimport {Button} from '@ui/buttons/button';\nimport {Menu, MenuItem, MenuTrigger} from '@ui/menu/menu-trigger';\nimport {DialogTrigger} from '@ui/overlays/dialog/dialog-trigger';\nimport {useDialogContext} from '@ui/overlays/dialog/dialog-context';\nimport {Dialog} from '@ui/overlays/dialog/dialog';\nimport {DialogHeader} from '@ui/overlays/dialog/dialog-header';\nimport {DialogBody} from '@ui/overlays/dialog/dialog-body';\nimport {Trans} from '@ui/i18n/trans';\n\nexport function InsertMenuTrigger({editor, size}: MenubarButtonProps) {\n  const [dialog, setDialog] = useState<'embed' | false>(false);\n  return (\n    <>\n      <MenuTrigger\n        onItemSelected={key => {\n          if (key === 'hr') {\n            editor.commands.focus();\n            editor.commands.setHorizontalRule();\n          } else if (key === 'embed') {\n            setDialog('embed');\n          } else {\n            editor.commands.focus();\n            editor.commands.addInfo({type: key as any});\n          }\n        }}\n      >\n        <IconButton\n          variant=\"text\"\n          size={size}\n          className={clsx('flex-shrink-0')}\n        >\n          <MoreVertIcon />\n        </IconButton>\n        <Menu>\n          <MenuItem value=\"hr\" startIcon={<HorizontalRuleIcon />}>\n            <Trans message=\"Horizontal rule\" />\n          </MenuItem>\n          <MenuItem value=\"embed\" startIcon={<SmartDisplayIcon />}>\n            <Trans message=\"Embed\" />\n          </MenuItem>\n          <MenuItem value=\"important\" startIcon={<PriorityHighIcon />}>\n            <Trans message=\"Important\" />\n          </MenuItem>\n          <MenuItem value=\"warning\" startIcon={<WarningIcon />}>\n            <Trans message=\"Warning\" />\n          </MenuItem>\n          <MenuItem value=\"success\" startIcon={<NoteIcon />}>\n            <Trans message=\"Note\" />\n          </MenuItem>\n        </Menu>\n      </MenuTrigger>\n      <DialogTrigger\n        type=\"modal\"\n        isOpen={!!dialog}\n        onClose={() => {\n          setDialog(false);\n        }}\n      >\n        <EmbedDialog editor={editor} />\n      </DialogTrigger>\n    </>\n  );\n}\n\nfunction EmbedDialog({editor}: MenubarButtonProps) {\n  const previousSrc = editor.getAttributes('embed').src;\n  const form = useForm<{src: string}>({\n    defaultValues: {src: previousSrc},\n  });\n  const {formId, close} = useDialogContext();\n  return (\n    <Dialog>\n      <DialogHeader>\n        <Trans message=\"Insert link\" />\n      </DialogHeader>\n      <DialogBody>\n        <Form\n          form={form}\n          id={formId}\n          onSubmit={value => {\n            editor.commands.setEmbed(value);\n            close();\n          }}\n        >\n          <FormTextField\n            name=\"src\"\n            label={<Trans message=\"Embed URL\" />}\n            autoFocus\n            type=\"url\"\n            required\n          />\n        </Form>\n      </DialogBody>\n      <DialogFooter>\n        <Button onClick={close} variant=\"text\">\n          <Trans message=\"Cancel\" />\n        </Button>\n        <Button\n          type=\"submit\"\n          form={formId}\n          disabled={!form.formState.isValid}\n          variant=\"flat\"\n          color=\"primary\"\n        >\n          <Trans message=\"Add\" />\n        </Button>\n      </DialogFooter>\n    </Dialog>\n  );\n}\n","import {ReactNode} from 'react';\nimport {isMac} from '@react-aria/utils';\n\ninterface Props {\n  children: ReactNode;\n  modifier?: boolean;\n  separator?: string;\n}\nexport function Keyboard({children, modifier, separator = '+'}: Props) {\n  const modKey = isMac() ? (\n    <span className=\"text-base align-middle\">⌘</span>\n  ) : (\n    'Ctrl'\n  );\n  return (\n    <kbd className=\"text-xs text-muted\">\n      {modifier && (\n        <>\n          {modKey}\n          {separator}\n        </>\n      )}\n      {children}\n    </kbd>\n  );\n}\n","import React from 'react';\nimport clsx from 'clsx';\nimport {Button} from '@ui/buttons/button';\nimport {KeyboardArrowDownIcon} from '@ui/icons/material/KeyboardArrowDown';\nimport {Keyboard} from '@ui/keyboard/keyboard';\nimport {MenubarButtonProps} from './menubar-button-props';\nimport {Menu, MenuItem, MenuTrigger} from '@ui/menu/menu-trigger';\nimport {Trans} from '@ui/i18n/trans';\n\ntype Level = 1 | 2 | 3 | 4;\n\nexport function FormatMenuTrigger({editor, size}: MenubarButtonProps) {\n  return (\n    <MenuTrigger\n      floatingMinWidth=\"w-256\"\n      onItemSelected={key => {\n        editor.commands.focus();\n        if (typeof key === 'string' && key.startsWith('h')) {\n          editor.commands.toggleHeading({\n            level: parseInt(key.replace('h', '')) as Level,\n          });\n        } else if (key === 'code') {\n          editor.commands.toggleCode();\n        } else if (key === 'strike') {\n          editor.commands.toggleStrike();\n        } else if (key === 'super') {\n          editor.commands.toggleSuperscript();\n        } else if (key === 'sub') {\n          editor.commands.toggleSubscript();\n        } else if (key === 'blockquote') {\n          editor.commands.toggleBlockquote();\n        } else if (key === 'paragraph') {\n          editor.commands.setParagraph();\n        }\n      }}\n    >\n      <Button\n        className={clsx('flex-shrink-0')}\n        variant=\"text\"\n        size={size}\n        endIcon={<KeyboardArrowDownIcon />}\n      >\n        <Trans message=\"Format\" />\n      </Button>\n      <Menu>\n        <MenuItem value=\"h1\" endSection={<Keyboard modifier>Alt+1</Keyboard>}>\n          <Trans message=\"Heading :number\" values={{number: 1}} />\n        </MenuItem>\n        <MenuItem value=\"h2\" endSection={<Keyboard modifier>Alt+2</Keyboard>}>\n          <Trans message=\"Heading :number\" values={{number: 2}} />\n        </MenuItem>\n        <MenuItem value=\"h3\" endSection={<Keyboard modifier>Alt+3</Keyboard>}>\n          <Trans message=\"Heading :number\" values={{number: 3}} />\n        </MenuItem>\n        <MenuItem value=\"h4\" endSection={<Keyboard modifier>Alt+4</Keyboard>}>\n          <Trans message=\"Heading :number\" values={{number: 4}} />\n        </MenuItem>\n        <MenuItem value=\"code\" endSection={<Keyboard modifier>E</Keyboard>}>\n          <Trans message=\"Code\" />\n        </MenuItem>\n        <MenuItem\n          value=\"strike\"\n          endSection={<Keyboard modifier>Shift+X</Keyboard>}\n        >\n          <Trans message=\"Strikethrough\" />\n        </MenuItem>\n        <MenuItem\n          value=\"super\"\n          endSection={\n            <Keyboard modifier separator=\" \">\n              .\n            </Keyboard>\n          }\n        >\n          <Trans message=\"Superscript\" />\n        </MenuItem>\n        <MenuItem\n          value=\"sub\"\n          endSection={\n            <Keyboard modifier separator=\" \">\n              ,\n            </Keyboard>\n          }\n        >\n          <Trans message=\"Subscript\" />\n        </MenuItem>\n        <MenuItem\n          value=\"blockquote\"\n          endSection={<Keyboard modifier>Shift+B</Keyboard>}\n        >\n          <Trans message=\"Blockquote\" />\n        </MenuItem>\n        <MenuItem\n          value=\"paragraph\"\n          endSection={<Keyboard modifier>Alt+0</Keyboard>}\n        >\n          <Trans message=\"Paragraph\" />\n        </MenuItem>\n      </Menu>\n    </MenuTrigger>\n  );\n}\n","import {createSvgIcon} from '../create-svg-icon';\n\nexport const FormatColorTextIcon = createSvgIcon(\n  <path d=\"M2 20h20v4H2v-4zm3.49-3h2.42l1.27-3.58h5.65L16.09 17h2.42L13.25 3h-2.5L5.49 17zm4.42-5.61 2.03-5.79h.12l2.03 5.79H9.91z\" />\n, 'FormatColorTextOutlined');\n","import {createSvgIcon} from '../create-svg-icon';\n\nexport const FormatColorFillIcon = createSvgIcon(\n  <path d=\"M16.56 8.94 7.62 0 6.21 1.41l2.38 2.38-5.15 5.15c-.59.59-.59 1.54 0 2.12l5.5 5.5c.29.29.68.44 1.06.44s.77-.15 1.06-.44l5.5-5.5c.59-.58.59-1.53 0-2.12zM5.21 10 10 5.21 14.79 10H5.21zM19 11.5s-2 2.17-2 3.5c0 1.1.9 2 2 2s2-.9 2-2c0-1.33-2-3.5-2-3.5zM2 20h20v4H2v-4z\" />\n, 'FormatColorFillOutlined');\n","import React, {Fragment, useState} from 'react';\nimport clsx from 'clsx';\nimport {FormatColorTextIcon} from '@ui/icons/material/FormatColorText';\nimport {ColorPickerDialog} from '@ui/color-picker/color-picker-dialog';\nimport {MenubarButtonProps} from './menubar-button-props';\nimport {IconButton} from '@ui/buttons/icon-button';\nimport {FormatColorFillIcon} from '@ui/icons/material/FormatColorFill';\nimport {DialogTrigger} from '@ui/overlays/dialog/dialog-trigger';\n\nexport function ColorButtons({editor, size}: MenubarButtonProps) {\n  const [dialog, setDialog] = useState<'text' | 'bg' | false>(false);\n  const textActive = editor.getAttributes('textStyle').color;\n  const backgroundActive = editor.getAttributes('textStyle').backgroundColor;\n  return (\n    <Fragment>\n      <span className={clsx('flex-shrink-0 whitespace-nowrap')}>\n        <IconButton\n          size={size}\n          color={textActive ? 'primary' : null}\n          onClick={() => {\n            setDialog('text');\n          }}\n        >\n          <FormatColorTextIcon />\n        </IconButton>\n        <IconButton\n          size={size}\n          color={backgroundActive ? 'primary' : null}\n          onClick={() => {\n            setDialog('bg');\n          }}\n        >\n          <FormatColorFillIcon />\n        </IconButton>\n      </span>\n      <DialogTrigger\n        defaultValue={dialog === 'text' ? '#000000' : '#FFFFFF'}\n        type=\"modal\"\n        isOpen={!!dialog}\n        onClose={newValue => {\n          if (newValue) {\n            if (dialog === 'text') {\n              editor.commands.setColor(newValue);\n            } else {\n              editor.commands.setBackgroundColor(newValue);\n            }\n          }\n          setDialog(false);\n        }}\n      >\n        <ColorPickerDialog />\n      </DialogTrigger>\n    </Fragment>\n  );\n}\n","import {createSvgIcon} from '../create-svg-icon';\n\nexport const FormatAlignLeftIcon = createSvgIcon(\n  <path d=\"M15 15H3v2h12v-2zm0-8H3v2h12V7zM3 13h18v-2H3v2zm0 8h18v-2H3v2zM3 3v2h18V3H3z\" />\n, 'FormatAlignLeftOutlined');\n","import {createSvgIcon} from '../create-svg-icon';\n\nexport const FormatAlignCenterIcon = createSvgIcon(\n  <path d=\"M7 15v2h10v-2H7zm-4 6h18v-2H3v2zm0-8h18v-2H3v2zm4-6v2h10V7H7zM3 3v2h18V3H3z\" />\n, 'FormatAlignCenterOutlined');\n","import {createSvgIcon} from '../create-svg-icon';\n\nexport const FormatAlignRightIcon = createSvgIcon(\n  <path d=\"M3 21h18v-2H3v2zm6-4h12v-2H9v2zm-6-4h18v-2H3v2zm6-4h12V7H9v2zM3 3v2h18V3H3z\" />\n, 'FormatAlignRightOutlined');\n","import {createSvgIcon} from '../create-svg-icon';\n\nexport const FormatAlignJustifyIcon = createSvgIcon(\n  <path d=\"M3 21h18v-2H3v2zm0-4h18v-2H3v2zm0-4h18v-2H3v2zm0-4h18V7H3v2zm0-6v2h18V3H3z\" />\n, 'FormatAlignJustifyOutlined');\n","import clsx from 'clsx';\nimport {ComponentType} from 'react';\nimport {FormatAlignLeftIcon} from '@ui/icons/material/FormatAlignLeft';\nimport {FormatAlignCenterIcon} from '@ui/icons/material/FormatAlignCenter';\nimport {FormatAlignRightIcon} from '@ui/icons/material/FormatAlignRight';\nimport {FormatAlignJustifyIcon} from '@ui/icons/material/FormatAlignJustify';\nimport {MenubarButtonProps} from './menubar-button-props';\nimport {IconButton} from '@ui/buttons/icon-button';\nimport {Menu, MenuItem, MenuTrigger} from '@ui/menu/menu-trigger';\nimport {Trans} from '@ui/i18n/trans';\nimport {message} from '@ui/i18n/message';\n\nconst iconMap = {\n  left: {\n    icon: FormatAlignLeftIcon,\n    label: message('Align left'),\n  },\n  center: {\n    icon: FormatAlignCenterIcon,\n    label: message('Align center'),\n  },\n  right: {\n    icon: FormatAlignRightIcon,\n    label: message('Align right'),\n  },\n  justify: {\n    icon: FormatAlignJustifyIcon,\n    label: message('Justify'),\n  },\n};\n\nexport function AlignButtons({editor, size}: MenubarButtonProps) {\n  const activeKey = (Object.keys(iconMap).find(key => {\n    return editor.isActive({textAlign: key});\n  }) || 'left') as keyof typeof iconMap;\n  const ActiveIcon: ComponentType = activeKey\n    ? iconMap[activeKey].icon\n    : iconMap.left.icon;\n\n  return (\n    <MenuTrigger\n      floatingWidth=\"auto\"\n      selectionMode=\"single\"\n      selectedValue={activeKey}\n      onSelectionChange={key => {\n        editor.commands.focus();\n        editor.commands.setTextAlign(key as string);\n      }}\n    >\n      <IconButton\n        size={size}\n        color={activeKey ? 'primary' : null}\n        className={clsx('flex-shrink-0')}\n      >\n        <ActiveIcon />\n      </IconButton>\n      <Menu>\n        {Object.entries(iconMap).map(([name, config]) => {\n          const Icon = config.icon;\n          return (\n            <MenuItem\n              key={name}\n              value={name}\n              startIcon={<Icon size=\"md\" />}\n              capitalizeFirst\n            >\n              <Trans message={config.label.message} />\n            </MenuItem>\n          );\n        })}\n      </Menu>\n    </MenuTrigger>\n  );\n}\n","import {createSvgIcon} from '../create-svg-icon';\n\nexport const FormatIndentDecreaseIcon = createSvgIcon(\n  <path d=\"M11 17h10v-2H11v2zm-8-5 4 4V8l-4 4zm0 9h18v-2H3v2zM3 3v2h18V3H3zm8 6h10V7H11v2zm0 4h10v-2H11v2z\" />\n, 'FormatIndentDecreaseOutlined');\n","import {createSvgIcon} from '../create-svg-icon';\n\nexport const FormatIndentIncreaseIcon = createSvgIcon(\n  <path d=\"M3 21h18v-2H3v2zM3 8v8l4-4-4-4zm8 9h10v-2H11v2zM3 3v2h18V3H3zm8 6h10V7H11v2zm0 4h10v-2H11v2z\" />\n, 'FormatIndentIncreaseOutlined');\n","import React from 'react';\nimport clsx from 'clsx';\nimport {IconButton} from '@ui/buttons/icon-button';\nimport {FormatIndentDecreaseIcon} from '@ui/icons/material/FormatIndentDecrease';\nimport {FormatIndentIncreaseIcon} from '@ui/icons/material/FormatIndentIncrease';\nimport {MenubarButtonProps} from './menubar-button-props';\nimport {Tooltip} from '@ui/tooltip/tooltip';\nimport {Trans} from '@ui/i18n/trans';\n\nexport function IndentButtons({editor, size}: MenubarButtonProps) {\n  return (\n    <span className={clsx('flex-shrink-0', 'whitespace-nowrap')}>\n      <Tooltip label={<Trans message=\"Decrease indent\" />}>\n        <IconButton\n          size={size}\n          onClick={() => {\n            editor.commands.focus();\n            editor.commands.outdent();\n          }}\n        >\n          <FormatIndentDecreaseIcon />\n        </IconButton>\n      </Tooltip>\n      <Tooltip label={<Trans message=\"Increase indent\" />}>\n        <IconButton\n          size={size}\n          onClick={() => {\n            editor.commands.focus();\n            editor.commands.indent();\n          }}\n        >\n          <FormatIndentIncreaseIcon />\n        </IconButton>\n      </Tooltip>\n    </span>\n  );\n}\n","import React from 'react';\nimport clsx from 'clsx';\nimport {IconButton} from '@ui/buttons/icon-button';\nimport {CodeIcon} from '@ui/icons/material/Code';\nimport {MenubarButtonProps} from './menubar-button-props';\nimport {Menu, MenuItem, MenuTrigger} from '@ui/menu/menu-trigger';\nimport {Tooltip} from '@ui/tooltip/tooltip';\nimport {Trans} from '@ui/i18n/trans';\n\nexport function CodeBlockMenuTrigger({editor, size}: MenubarButtonProps) {\n  const language = editor.getAttributes('codeBlock').language || '';\n  return (\n    <MenuTrigger\n      selectionMode=\"single\"\n      selectedValue={language}\n      onSelectionChange={key => {\n        editor.commands.toggleCodeBlock({language: key as string});\n      }}\n    >\n      <Tooltip label={<Trans message=\"Codeblock\" />}>\n        <IconButton\n          className={clsx('flex-shrink-0')}\n          size={size}\n          color={language ? 'primary' : null}\n        >\n          <CodeIcon />\n        </IconButton>\n      </Tooltip>\n      <Menu>\n        <MenuItem value=\"html\">HTML</MenuItem>\n        <MenuItem value=\"javascript\">JavaScript</MenuItem>\n        <MenuItem value=\"css\">CSS</MenuItem>\n        <MenuItem value=\"php\">PHP</MenuItem>\n        <MenuItem value=\"shell\">Shell</MenuItem>\n        <MenuItem value=\"bash\">Bash</MenuItem>\n        <MenuItem value=\"ruby\">Ruby</MenuItem>\n        <MenuItem value=\"python\">Python</MenuItem>\n        <MenuItem value=\"java\">Java</MenuItem>\n        <MenuItem value=\"c++\">C++</MenuItem>\n      </Menu>\n    </MenuTrigger>\n  );\n}\n","import React, {Fragment, useState} from 'react';\nimport clsx from 'clsx';\nimport {AnimatePresence, m} from 'framer-motion';\nimport {Divider} from '@common/text-editor/menubar/divider';\nimport {FontStyleButtons} from '@common/text-editor/menubar/font-style-buttons';\nimport {ListButtons} from '@common/text-editor/menubar/list-buttons';\nimport {LinkButton} from '@common/text-editor/menubar/link-button';\nimport {ImageButton} from '@common/text-editor/menubar/image-button';\nimport {ClearFormatButton} from '@common/text-editor/menubar/clear-format-button';\nimport {InsertMenuTrigger} from '@common/text-editor/menubar/insert-menu-trigger';\nimport {FormatMenuTrigger} from '@common/text-editor/menubar/format-menu-trigger';\nimport {ColorButtons} from '@common/text-editor/menubar/color-buttons';\nimport {AlignButtons} from '@common/text-editor/menubar/align-buttons';\nimport {IndentButtons} from '@common/text-editor/menubar/indent-buttons';\nimport {CodeBlockMenuTrigger} from '@common/text-editor/menubar/code-block-menu-trigger';\nimport {MenubarButtonProps} from '@common/text-editor/menubar/menubar-button-props';\nimport {useIsMobileMediaQuery} from '@ui/utils/hooks/is-mobile-media-query';\nimport {IconButton} from '@ui/buttons/icon-button';\nimport {UnfoldMoreIcon} from '@ui/icons/material/UnfoldMore';\nimport {UnfoldLessIcon} from '@ui/icons/material/UnfoldLess';\n\nconst MenubarRowClassName =\n  'flex items-center px-4 h-42 text-muted border-b overflow-hidden';\n\ninterface Props extends MenubarButtonProps {\n  justify?: string;\n  hideInsertButton?: boolean;\n  imageDiskPrefix?: string;\n}\nexport function ArticleBodyEditorMenubar({\n  editor,\n  size = 'md',\n  justify = 'justify-center',\n  hideInsertButton = false,\n  imageDiskPrefix,\n}: Props) {\n  const isMobile = useIsMobileMediaQuery();\n  const [extendedVisible, setExtendedVisible] = useState(false);\n  return (\n    <div className={clsx(extendedVisible ? 'h-84' : 'h-42')}>\n      <div className={clsx(MenubarRowClassName, justify, 'relative z-20')}>\n        <FormatMenuTrigger editor={editor} size={size} />\n        <Divider />\n        <FontStyleButtons editor={editor} size={size} />\n        <Divider />\n        <AlignButtons editor={editor} size={size} />\n        <IndentButtons editor={editor} size={size} />\n        <Divider />\n        {isMobile ? (\n          <IconButton\n            className=\"flex-shrink-0\"\n            color={extendedVisible ? 'primary' : null}\n            size={size}\n            onClick={() => {\n              setExtendedVisible(!extendedVisible);\n            }}\n          >\n            {extendedVisible ? <UnfoldLessIcon /> : <UnfoldMoreIcon />}\n          </IconButton>\n        ) : (\n          <ExtendedButtons\n            editor={editor}\n            size={size}\n            hideInsertButton={hideInsertButton}\n            imageDiskPrefix={imageDiskPrefix}\n          />\n        )}\n      </div>\n      <AnimatePresence>\n        {extendedVisible && (\n          <m.div\n            className={clsx(\n              MenubarRowClassName,\n              justify,\n              'absolute flex h-full w-full',\n            )}\n            initial={{y: '-100%'}}\n            animate={{y: 0}}\n            exit={{y: '-100%'}}\n          >\n            <ExtendedButtons\n              editor={editor}\n              size={size}\n              imageDiskPrefix={imageDiskPrefix}\n            />\n          </m.div>\n        )}\n      </AnimatePresence>\n    </div>\n  );\n}\n\nfunction ExtendedButtons({\n  editor,\n  size = 'md',\n  hideInsertButton,\n  imageDiskPrefix,\n}: Props) {\n  return (\n    <Fragment>\n      <ListButtons editor={editor} size={size} />\n      <Divider />\n      <LinkButton editor={editor} size={size} />\n      <ImageButton editor={editor} size={size} diskPrefix={imageDiskPrefix} />\n      {!hideInsertButton && <InsertMenuTrigger editor={editor} size={size} />}\n      <Divider />\n      <ColorButtons editor={editor} size={size} />\n      <Divider />\n      <CodeBlockMenuTrigger editor={editor} size={size} />\n      <ClearFormatButton editor={editor} size={size} />\n    </Fragment>\n  );\n}\n","import {SlugEditor, SlugEditorProps} from '@common/ui/other/slug-editor';\nimport {useController, useFormContext} from 'react-hook-form';\nimport React, {Fragment, ReactNode, useEffect, useRef} from 'react';\nimport clsx from 'clsx';\nimport {useStickySentinel} from '@ui/utils/hooks/sticky-sentinel';\nimport {useIsMobileMediaQuery} from '@ui/utils/hooks/is-mobile-media-query';\nimport {Button} from '@ui/buttons/button';\nimport {Link} from 'react-router';\nimport {ArrowBackIcon} from '@ui/icons/material/ArrowBack';\nimport {Trans} from '@ui/i18n/trans';\nimport {HistoryButtons} from '@common/text-editor/menubar/history-buttons';\nimport {ModeButton} from '@common/text-editor/menubar/mode-button';\nimport {ArticleBodyEditorMenubar} from './article-body-editor-menubar';\nimport {Editor} from '@tiptap/react';\nimport {CreateCustomPagePayload} from '@common/admin/custom-pages/requests/use-create-custom-page';\n\ninterface StickyHeaderProps {\n  editor: Editor;\n  allowSlugEditing?: boolean;\n  onSave?: (editorContent: string) => void;\n  saveButton?: ReactNode;\n  backLink: string;\n  isLoading?: boolean;\n  slugPrefix?: string;\n  imageDiskPrefix?: string;\n}\nexport function ArticleEditorStickyHeader({\n  editor,\n  allowSlugEditing = true,\n  onSave,\n  saveButton,\n  isLoading = false,\n  backLink,\n  slugPrefix = 'pages',\n  imageDiskPrefix,\n}: StickyHeaderProps) {\n  const {isSticky, sentinelRef} = useStickySentinel();\n  const isMobile = useIsMobileMediaQuery();\n\n  return (\n    <Fragment>\n      <div ref={sentinelRef} />\n      <div className={clsx('sticky top-0 z-10 mb-20 bg', isSticky && 'shadow')}>\n        <div className=\"flex items-center justify-between gap-20 border-b px-20 py-10 text-muted sm:justify-start\">\n          {!isMobile && (\n            <Fragment>\n              <Button\n                variant=\"text\"\n                size=\"sm\"\n                elementType={Link}\n                to={backLink}\n                relative=\"path\"\n                startIcon={<ArrowBackIcon />}\n              >\n                <Trans message=\"Back\" />\n              </Button>\n              <div className=\"mr-auto\">\n                {allowSlugEditing && (\n                  <FormSlugEditor\n                    name=\"slug\"\n                    showLinkIcon={false}\n                    prefix={slugPrefix}\n                  />\n                )}\n              </div>\n            </Fragment>\n          )}\n          {editor && <HistoryButtons editor={editor} />}\n          {!isMobile && <ModeButton editor={editor} />}\n          {onSave && (\n            <SaveButton\n              onSave={() => {\n                onSave(editor.getHTML());\n              }}\n              isLoading={isLoading}\n            />\n          )}\n          {saveButton}\n        </div>\n        <ArticleBodyEditorMenubar\n          editor={editor}\n          size=\"sm\"\n          imageDiskPrefix={imageDiskPrefix}\n        />\n      </div>\n    </Fragment>\n  );\n}\n\ninterface SaveButtonProps {\n  onSave: () => void;\n  isLoading: boolean;\n}\nfunction SaveButton({onSave, isLoading}: SaveButtonProps) {\n  const form = useFormContext();\n  const title = form.watch('title');\n\n  return (\n    <Button\n      variant=\"flat\"\n      size=\"sm\"\n      color=\"primary\"\n      className=\"min-w-90\"\n      disabled={isLoading || !title}\n      onClick={() => onSave()}\n    >\n      <Trans message=\"Save\" />\n    </Button>\n  );\n}\n\ninterface FormSlugEditorProps extends SlugEditorProps {\n  name: string;\n}\nfunction FormSlugEditor({name, ...other}: FormSlugEditorProps) {\n  const {\n    field: {onChange, onBlur, value = '', ref},\n  } = useController({\n    name,\n  });\n  const manuallyChanged = useRef(false);\n\n  const {watch, setValue} = useFormContext<CreateCustomPagePayload>();\n\n  useEffect(() => {\n    const subscription = watch((formVal, {name: fieldName}) => {\n      // if user has not changed slug manually, set it based on page title field changes\n      if (fieldName === 'title' && !manuallyChanged.current) {\n        setValue('slug', formVal.title);\n      }\n    });\n    return () => subscription.unsubscribe();\n  }, [watch, setValue]);\n\n  return (\n    <SlugEditor\n      className={clsx(!value && 'invisible')}\n      onChange={e => {\n        manuallyChanged.current = true;\n        onChange(e);\n      }}\n      onInputBlur={onBlur}\n      value={value}\n      inputRef={ref}\n      {...other}\n    />\n  );\n}\n","import {useCustomPage} from '@common/custom-page/use-custom-page';\nimport React, {Fragment, Suspense} from 'react';\nimport {PageMetaTags} from '@common/http/page-meta-tags';\nimport {PageStatus} from '@common/http/page-status';\nimport {CustomPage} from '@common/admin/custom-pages/custom-page';\nimport {FormProvider, useForm} from 'react-hook-form';\nimport {useUpdateCustomPage} from '@common/admin/custom-pages/requests/use-update-custom-page';\nimport {FileUploadProvider} from '@common/uploads/uploader/file-upload-provider';\nimport {ArticleEditorTitle} from '@common/article-editor/article-editor-title';\nimport {ArticleEditorStickyHeader} from '@common/article-editor/article-editor-sticky-header';\nimport {useNavigate} from '@common/ui/navigation/use-navigate';\nimport {CreateCustomPagePayload} from '@common/admin/custom-pages/requests/use-create-custom-page';\nimport {FullPageLoader} from '@ui/progress/full-page-loader';\n\nconst ArticleBodyEditor = React.lazy(\n  () => import('@common/article-editor/article-body-editor'),\n);\n\nexport function EditCustomPage() {\n  const query = useCustomPage();\n\n  return query.data ? (\n    <Fragment>\n      <PageMetaTags query={query} />\n      <PageContent page={query.data.page} />\n    </Fragment>\n  ) : (\n    <div className=\"relative w-full h-full\">\n      <PageStatus query={query} />\n    </div>\n  );\n}\n\ninterface PageContentProps {\n  page: CustomPage;\n}\nfunction PageContent({page}: PageContentProps) {\n  const navigate = useNavigate();\n  const crupdatePage = useUpdateCustomPage();\n  const form = useForm<CreateCustomPagePayload>({\n    defaultValues: {\n      title: page.title,\n      slug: page.slug,\n      body: page.body,\n    },\n  });\n\n  const handleSave = (editorContent: string) => {\n    crupdatePage.mutate(\n      {\n        ...form.getValues(),\n        body: editorContent,\n      },\n      {\n        onSuccess: () => navigate('../..', {relative: 'path'}),\n      },\n    );\n  };\n\n  return (\n    <Suspense fallback={<FullPageLoader />}>\n      <ArticleBodyEditor initialContent={page.body}>\n        {(content, editor) => (\n          <FileUploadProvider>\n            <FormProvider {...form}>\n              <ArticleEditorStickyHeader\n                editor={editor}\n                backLink=\"../..\"\n                isLoading={crupdatePage.isPending}\n                onSave={handleSave}\n              />\n              <div className=\"mx-20\">\n                <div className=\"prose dark:prose-invert mx-auto flex-auto\">\n                  <ArticleEditorTitle />\n                  {content}\n                </div>\n              </div>\n            </FormProvider>\n          </FileUploadProvider>\n        )}\n      </ArticleBodyEditor>\n    </Suspense>\n  );\n}\n","import {useMutation} from '@tanstack/react-query';\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\nimport {CustomPage} from '../custom-page';\nimport {apiClient, queryClient} from '@common/http/query-client';\nimport {showHttpErrorToast} from '@common/http/show-http-error-toast';\nimport {DatatableDataQueryKey} from '@common/datatable/requests/paginated-resources';\nimport {toast} from '@ui/toast/toast';\nimport {message} from '@ui/i18n/message';\n\ninterface Response extends BackendResponse {\n  page: CustomPage;\n}\n\nexport interface CreateCustomPagePayload {\n  title?: string;\n  body?: string;\n  slug?: string;\n  hide_nav?: boolean;\n}\n\nexport function useCreateCustomPage(endpoint?: string) {\n  const finalEndpoint = endpoint || 'custom-pages';\n  return useMutation({\n    mutationFn: (payload: CreateCustomPagePayload) =>\n      createPage(payload, finalEndpoint),\n    onError: err => showHttpErrorToast(err),\n    onSuccess: async () => {\n      await queryClient.invalidateQueries({queryKey: ['custom-pages']});\n      await queryClient.invalidateQueries({\n        queryKey: DatatableDataQueryKey(finalEndpoint),\n      });\n      toast(message('Page created'));\n    },\n  });\n}\n\nfunction createPage(\n  payload: CreateCustomPagePayload,\n  endpoint: string,\n): Promise<Response> {\n  return apiClient.post(`${endpoint}`, payload).then(r => r.data);\n}\n","import React, {Suspense} from 'react';\nimport {FormProvider, useForm} from 'react-hook-form';\nimport {FileUploadProvider} from '@common/uploads/uploader/file-upload-provider';\nimport {ArticleEditorTitle} from '@common/article-editor/article-editor-title';\nimport {ArticleEditorStickyHeader} from '@common/article-editor/article-editor-sticky-header';\nimport {useNavigate} from '@common/ui/navigation/use-navigate';\nimport {\n  CreateCustomPagePayload,\n  useCreateCustomPage,\n} from '@common/admin/custom-pages/requests/use-create-custom-page';\nimport {FullPageLoader} from '@ui/progress/full-page-loader';\n\nconst ArticleBodyEditor = React.lazy(\n  () => import('@common/article-editor/article-body-editor'),\n);\n\nexport function CreateCustomPage() {\n  const navigate = useNavigate();\n  const createPage = useCreateCustomPage();\n  const form = useForm<CreateCustomPagePayload>();\n\n  const handleSave = (editorContent: string) => {\n    createPage.mutate(\n      {\n        ...form.getValues(),\n        body: editorContent,\n      },\n      {\n        onSuccess: () => navigate('../', {relative: 'path'}),\n      },\n    );\n  };\n\n  return (\n    <Suspense fallback={<FullPageLoader />}>\n      <ArticleBodyEditor>\n        {(content, editor) => (\n          <FileUploadProvider>\n            <FormProvider {...form}>\n              <ArticleEditorStickyHeader\n                editor={editor}\n                isLoading={createPage.isPending}\n                onSave={handleSave}\n                backLink=\"../\"\n              />\n              <div className=\"mx-20\">\n                <div className=\"prose dark:prose-invert mx-auto flex-auto\">\n                  <ArticleEditorTitle />\n                  {content}\n                </div>\n              </div>\n            </FormProvider>\n          </FileUploadProvider>\n        )}\n      </ArticleBodyEditor>\n    </Suspense>\n  );\n}\n","export default \"__VITE_ASSET__03cbd387__\"","import {useTrans} from '@ui/i18n/use-trans';\nimport {TextField} from '@ui/forms/input-field/text-field/text-field';\nimport {SearchIcon} from '@ui/icons/material/Search';\nimport {message} from '@ui/i18n/message';\nimport {Select} from '@ui/forms/select/select';\nimport {Item} from '@ui/forms/listbox/item';\nimport {Trans} from '@ui/i18n/trans';\nimport React from 'react';\nimport {FontSelectorState} from '@common/ui/font-selector/font-selector-state';\n\nexport interface FontSelectorFilterValue {\n  query: string;\n  category: string;\n}\n\ninterface FiltersHeaderProps {\n  state: FontSelectorState;\n}\nexport function FontSelectorFilters({\n  state: {filters, setFilters},\n}: FiltersHeaderProps) {\n  const {trans} = useTrans();\n  return (\n    <div className=\"mb-24 items-center gap-24 @xs:flex\">\n      <TextField\n        className=\"mb-12 flex-auto @xs:mb-0\"\n        value={filters.query}\n        onChange={e => {\n          setFilters({\n            ...filters,\n            query: e.target.value,\n          });\n        }}\n        startAdornment={<SearchIcon />}\n        placeholder={trans(message('Search fonts'))}\n      />\n      <Select\n        className=\"flex-auto\"\n        selectionMode=\"single\"\n        selectedValue={filters.category}\n        onSelectionChange={value => {\n          setFilters({\n            ...filters,\n            category: value as string,\n          });\n        }}\n      >\n        <Item value=\"\">\n          <Trans message=\"All categories\" />\n        </Item>\n        <Item value=\"serif\">\n          <Trans message=\"Serif\" />\n        </Item>\n        <Item value=\"sans-serif\">\n          <Trans message=\"Sans serif\" />\n        </Item>\n        <Item value=\"display\">\n          <Trans message=\"Display\" />\n        </Item>\n        <Item value=\"handwriting\">\n          <Trans message=\"Handwriting\" />\n        </Item>\n        <Item value=\"monospace\">\n          <Trans message=\"Monospace\" />\n        </Item>\n      </Select>\n    </div>\n  );\n}\n","import {message} from '@ui/i18n/message';\nimport {FontConfig} from '@ui/fonts/font-picker/font-config';\n\nexport const BrowserSafeFonts: FontConfig[] = [\n  {\n    label: message('System'),\n    family:\n      'ui-sans-serif, system-ui, -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, \"Helvetica Neue\", Arial, \"Noto Sans\", sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\", \"Noto Color Emoji\"',\n    category: 'sans-serif',\n  },\n  {family: 'Impact, Charcoal, sans-serif', category: 'sans-serif'},\n  {family: 'Arial, Helvetica Neue, Helvetica, sans-serif', category: 'serif'},\n  {family: '\"Comic Sans MS\", cursive, sans-serif', category: 'Handwriting'},\n  {family: 'Century Gothic, sans-serif', category: 'sans-serif'},\n  {family: '\"Courier New\", Courier, monospace', category: 'monospace'},\n  {\n    family: '\"Lucida Sans Unicode\", \"Lucida Grande\", sans-serif',\n    category: 'sans-serif',\n  },\n  {family: '\"Times New Roman\", Times, serif', category: 'serif'},\n  {family: '\"Lucida Console\", Monaco, monospace', category: 'monospace'},\n  {family: '\"Andele Mono\", monospace, sans-serif', category: 'sans-serif'},\n  {family: 'Verdana, Geneva, sans-serif', category: 'sans-serif'},\n  {\n    family: '\"Helvetica Neue\", Helvetica, Arial, sans-serif',\n    category: 'sans-serif',\n  },\n];\n","export function chunkArray<T>(array: T[], chunkSize: number): T[][] {\n  return array.reduce<any>((resultArray, item, index) => {\n    const chunkIndex = Math.floor(index / chunkSize);\n\n    if (!resultArray[chunkIndex]) {\n      resultArray[chunkIndex] = [];\n    }\n\n    resultArray[chunkIndex].push(item);\n\n    return resultArray;\n  }, []);\n}\n","import {useCollator} from '@ui/i18n/use-collator';\nimport {useMemo} from 'react';\n\ninterface Filter {\n  /** Returns whether a string starts with a given substring. */\n  startsWith(string: string, substring: string): boolean;\n  /** Returns whether a string ends with a given substring. */\n  endsWith(string: string, substring: string): boolean;\n  /** Returns whether a string contains a given substring. */\n  contains(string: string, substring: string): boolean;\n}\n\nexport function useFilter(options?: Intl.CollatorOptions): Filter {\n  const collator = useCollator({\n    usage: 'search',\n    ...options,\n  });\n\n  return useMemo(() => {\n    return {\n      startsWith(string, substring) {\n        if (substring.length === 0) {\n          return true;\n        }\n\n        string = string.normalize('NFC');\n        substring = substring.normalize('NFC');\n        return (\n          collator.compare(string.slice(0, substring.length), substring) === 0\n        );\n      },\n      endsWith(string, substring) {\n        if (substring.length === 0) {\n          return true;\n        }\n\n        string = string.normalize('NFC');\n        substring = substring.normalize('NFC');\n        return (\n          collator.compare(string.slice(-substring.length), substring) === 0\n        );\n      },\n      contains(string, substring) {\n        if (substring.length === 0) {\n          return true;\n        }\n\n        string = string.normalize('NFC');\n        substring = substring.normalize('NFC');\n\n        let scan = 0;\n        const sliceLen = substring.length;\n        for (; scan + sliceLen <= string.length; scan++) {\n          const slice = string.slice(scan, scan + sliceLen);\n          if (collator.compare(substring, slice) === 0) {\n            return true;\n          }\n        }\n\n        return false;\n      },\n    };\n  }, [collator]);\n}\n","import {useCallback, useEffect, useMemo, useState} from 'react';\nimport {FontSelectorFilterValue} from '@common/ui/font-selector/font-selector-filters';\nimport {useValueLists} from '@common/http/value-lists';\nimport {BrowserSafeFonts} from '@ui/fonts/font-picker/browser-safe-fonts';\nimport {chunkArray} from '@ui/utils/array/chunk-array';\nimport {loadFonts} from '@ui/fonts/font-picker/load-fonts';\nimport {FontConfig} from '@ui/fonts/font-picker/font-config';\nimport {useFilter} from '@ui/i18n/use-filter';\n\nexport interface FontSelectorState extends UseFontSelectorProps {\n  fonts: FontConfig[];\n  filteredFonts: FontConfig[];\n  pages: FontConfig[][];\n  isLoading: boolean;\n  filters: FontSelectorFilterValue;\n  setFilters: (filters: FontSelectorFilterValue) => void;\n  currentPage: number;\n  setCurrentPage: (page: number) => void;\n}\n\nexport interface UseFontSelectorProps {\n  value?: FontConfig;\n  onChange: (value: FontConfig) => void;\n}\nexport function useFontSelectorState({\n  value,\n  onChange,\n}: UseFontSelectorProps): FontSelectorState {\n  const {data, isLoading} = useValueLists(['googleFonts']);\n  const [currentPage, setCurrentPage] = useState(0);\n  const [filters, setFilterState] = useState<FontSelectorFilterValue>({\n    query: '',\n    category: value?.category ?? '',\n  });\n  const {contains} = useFilter({\n    sensitivity: 'base',\n  });\n\n  const allFonts = useMemo(() => {\n    return BrowserSafeFonts.concat(data?.googleFonts ?? []);\n  }, [data?.googleFonts]);\n\n  const filteredFonts = useMemo(() => {\n    return allFonts.filter(font => {\n      return (\n        contains(font.family, filters.query) &&\n        (!filters.category ||\n          font.category?.toLowerCase() === filters.category.toLowerCase())\n      );\n    });\n  }, [allFonts, filters, contains]);\n\n  const pages = useMemo(() => {\n    return chunkArray(filteredFonts, 20);\n  }, [filteredFonts]);\n  const fonts = pages[currentPage];\n\n  // open the page with the selected font\n  useEffect(() => {\n    if (data && value?.family) {\n      const index = filteredFonts.findIndex(f => f.family === value.family);\n      if (index >= 0) {\n        setCurrentPage(Math.floor(index / 20));\n      }\n    }\n  }, [data, filteredFonts, value?.family]);\n\n  useEffect(() => {\n    const id = 'font-selector';\n    if (fonts?.length) {\n      loadFonts(fonts, {id});\n    }\n  }, [fonts, currentPage]);\n\n  const setFilters = useCallback((filters: FontSelectorFilterValue) => {\n    setFilterState(filters);\n    // reset to first page when searching or changing category\n    setCurrentPage(0);\n  }, []);\n\n  return {\n    fonts: fonts || [],\n    currentPage,\n    filteredFonts: filteredFonts || [],\n    setCurrentPage,\n    isLoading,\n    filters,\n    setFilters,\n    value,\n    onChange,\n    pages,\n  };\n}\n","import {Trans} from '@ui/i18n/trans';\nimport {IconButton} from '@ui/buttons/icon-button';\nimport {KeyboardArrowLeftIcon} from '@ui/icons/material/KeyboardArrowLeft';\nimport {KeyboardArrowRightIcon} from '@ui/icons/material/KeyboardArrowRight';\nimport React from 'react';\nimport {FontSelectorState} from '@common/ui/font-selector/font-selector-state';\n\ninterface FontSelectorPaginationProps {\n  state: FontSelectorState;\n}\nexport function FontSelectorPagination({\n  state: {currentPage = 0, setCurrentPage, filteredFonts, pages},\n}: FontSelectorPaginationProps) {\n  const total = filteredFonts?.length || 0;\n\n  return (\n    <div className=\"mt-30 flex items-center justify-end gap-24 border-t pt-14 text-sm\">\n      {total > 0 && (\n        <div>\n          <Trans\n            message=\":from - :to of :total\"\n            values={{\n              from: currentPage * 20 + 1,\n              to: Math.min((currentPage + 1) * 20, total),\n              total,\n            }}\n          />\n        </div>\n      )}\n      <div className=\"text-muted\">\n        <IconButton\n          disabled={currentPage < 1}\n          onClick={() => {\n            setCurrentPage(Math.max(0, currentPage - 1));\n          }}\n        >\n          <KeyboardArrowLeftIcon />\n        </IconButton>\n        <IconButton\n          disabled={currentPage >= pages.length - 1}\n          onClick={() => {\n            setCurrentPage(currentPage + 1);\n          }}\n        >\n          <KeyboardArrowRightIcon />\n        </IconButton>\n      </div>\n    </div>\n  );\n}\n","import {Trans} from '@ui/i18n/trans';\nimport React from 'react';\nimport {ButtonBase} from '@ui/buttons/button-base';\nimport clsx from 'clsx';\nimport {IllustratedMessage} from '@ui/images/illustrated-message';\nimport fontImage from './font.svg';\nimport {SvgImage} from '@ui/images/svg-image';\nimport {FontSelectorFilters} from '@common/ui/font-selector/font-selector-filters';\nimport {\n  FontSelectorState,\n  UseFontSelectorProps,\n  useFontSelectorState,\n} from '@common/ui/font-selector/font-selector-state';\nimport {FontSelectorPagination} from '@common/ui/font-selector/font-selector-pagination';\nimport {Skeleton} from '@ui/skeleton/skeleton';\nimport {AnimatePresence, m} from 'framer-motion';\nimport {opacityAnimation} from '@ui/animation/opacity-animation';\nimport {FontConfig} from '@ui/fonts/font-picker/font-config';\n\ninterface FontSelectorProps extends UseFontSelectorProps {\n  className?: string;\n}\nexport function FontSelector(props: FontSelectorProps) {\n  const state = useFontSelectorState(props);\n  return (\n    <div className={props.className}>\n      <FontSelectorFilters state={state} />\n      <AnimatePresence initial={false} mode=\"wait\">\n        <FontList state={state} />\n      </AnimatePresence>\n      <FontSelectorPagination state={state} />\n    </div>\n  );\n}\n\ninterface FontListProps {\n  state: FontSelectorState;\n}\nfunction FontList({state}: FontListProps) {\n  const {isLoading, fonts} = state;\n\n  const gridClassName =\n    'grid gap-24 grid-cols-[repeat(auto-fill,minmax(90px,1fr))] items-start';\n\n  if (isLoading) {\n    return <FontListSkeleton className={gridClassName} />;\n  }\n\n  if (!fonts?.length) {\n    return (\n      <IllustratedMessage\n        className=\"mt-60\"\n        size=\"sm\"\n        image={<SvgImage src={fontImage} />}\n        title={<Trans message=\"No matching fonts\" />}\n        description={\n          <Trans message=\"Try another search query or different category\" />\n        }\n      />\n    );\n  }\n\n  return (\n    <m.div key=\"font-list\" {...opacityAnimation} className={gridClassName}>\n      {fonts?.map(font => (\n        <FontButton key={font.family} font={font} state={state} />\n      ))}\n    </m.div>\n  );\n}\n\ninterface FontButtonProps {\n  font: FontConfig;\n  state: FontSelectorState;\n}\nfunction FontButton({font, state: {value, onChange}}: FontButtonProps) {\n  const isActive = value?.family === font.family;\n  const displayName = font.family.split(',')[0].replace(/\"/g, '');\n\n  return (\n    <ButtonBase\n      key={font.family}\n      display=\"block\"\n      onClick={() => {\n        onChange(font);\n      }}\n    >\n      <span\n        className={clsx(\n          'flex aspect-square items-center justify-center rounded-panel border text-4xl transition-bg-color hover:bg-hover md:text-5xl',\n          isActive && 'ring-2 ring-primary ring-offset-2',\n        )}\n      >\n        <span style={{fontFamily: font.family}}>Aa</span>\n      </span>\n      <span\n        className={clsx(\n          'mt-6 block overflow-hidden overflow-ellipsis whitespace-nowrap text-sm',\n          isActive && 'text-primary',\n        )}\n      >\n        {font.label ? <Trans {...font.label} /> : displayName}\n      </span>\n    </ButtonBase>\n  );\n}\n\ninterface FontListSkeletonProps {\n  className: string;\n}\nfunction FontListSkeleton({className}: FontListSkeletonProps) {\n  const items = Array.from(Array(20).keys());\n  return (\n    <m.div key=\"font-list-skeleton\" {...opacityAnimation} className={className}>\n      {items.map(index => (\n        <div key={index}>\n          <div className=\"aspect-square\">\n            <Skeleton display=\"block\" variant=\"rect\" />\n          </div>\n          <Skeleton className=\"mt-6 text-sm\" />\n        </div>\n      ))}\n    </m.div>\n  );\n}\n","import {FontSelector} from '@common/ui/font-selector/font-selector';\nimport {useFormContext} from 'react-hook-form';\nimport {\n  appearanceState,\n  AppearanceEditorValues,\n} from '@common/admin/appearance/appearance-store';\nimport {useParams} from 'react-router';\n\ntype Font = 'appearance.themes.1.font';\n\nexport function ThemeFontPanel() {\n  const {setValue, watch} = useFormContext<AppearanceEditorValues>();\n  const {themeIndex} = useParams();\n  const key = `appearance.themes.${themeIndex}.font` as Font;\n  return (\n    <FontSelector\n      value={watch(key)}\n      onChange={font => {\n        setValue(key, font, {shouldDirty: true});\n        appearanceState().preview.setThemeFont(font);\n      }}\n    />\n  );\n}\n","import {Trans} from '@ui/i18n/trans';\nimport {ButtonBase} from '@ui/buttons/button-base';\nimport {ReactNode} from 'react';\nimport clsx from 'clsx';\nimport {useFormContext} from 'react-hook-form';\nimport {\n  appearanceState,\n  AppearanceEditorValues,\n} from '@common/admin/appearance/appearance-store';\nimport {message} from '@ui/i18n/message';\nimport {useParams} from 'react-router';\n\nconst radiusMap = {\n  'rounded-none': {\n    label: message('Square'),\n    value: '0px',\n  },\n  rounded: {\n    label: message('Small'),\n    value: '0.25rem',\n  },\n  'rounded-md': {\n    label: message('Medium'),\n    value: '0.375rem',\n  },\n  'rounded-lg': {\n    label: message('Large'),\n    value: '0.5rem',\n  },\n  'rounded-xl': {\n    label: message('Larger'),\n    value: '0.75rem',\n  },\n  'rounded-full': {\n    label: message('Pill'),\n    value: '9999px',\n  },\n};\n\nexport function ThemeRadiusPanel() {\n  return (\n    <div className=\"space-y-24\">\n      <RadiusSelector\n        label={<Trans message=\"Button rounding\" />}\n        name=\"button-radius\"\n      />\n      <RadiusSelector\n        label={<Trans message=\"Input rounding\" />}\n        name=\"input-radius\"\n      />\n      <RadiusSelector\n        label={<Trans message=\"Panel rounding\" />}\n        name=\"panel-radius\"\n        hidePill\n      />\n    </div>\n  );\n}\n\ninterface RadiusSelectorProps {\n  label: ReactNode;\n  name: string;\n  hidePill?: boolean;\n}\nfunction RadiusSelector({label, name, hidePill}: RadiusSelectorProps) {\n  const {themeIndex} = useParams();\n  const {watch, setValue} = useFormContext<AppearanceEditorValues>();\n  const formKey =\n    `appearance.themes.${themeIndex}.values.--be-${name}` as 'appearance.themes.1.values.--be-button-radius';\n  const currentValue = watch(formKey);\n  return (\n    <div>\n      <div className=\"mb-10 text-sm font-semibold\">{label}</div>\n      <div className=\"grid grid-cols-3 gap-10 text-sm\">\n        {Object.entries(radiusMap)\n          .filter(([key]) => !hidePill || !key.includes('full'))\n          .map(([key, {label, value}]) => (\n            <PreviewButton\n              key={key}\n              radius={key}\n              isActive={value === currentValue}\n              onClick={() => {\n                setValue(formKey, value, {shouldDirty: true});\n                appearanceState().preview.setThemeValue(`--be-${name}`, value);\n              }}\n            >\n              <Trans {...label} />\n            </PreviewButton>\n          ))}\n      </div>\n    </div>\n  );\n}\n\ninterface PreviewButtonProps {\n  radius: string;\n  children: ReactNode;\n  isActive: boolean;\n  onClick: () => void;\n}\nfunction PreviewButton({\n  radius,\n  children,\n  isActive,\n  onClick,\n}: PreviewButtonProps) {\n  return (\n    <ButtonBase\n      display=\"block\"\n      className={clsx(\n        'h-36 border-2 hover:bg-hover',\n        radius,\n        isActive && 'border-primary',\n      )}\n      onClick={onClick}\n    >\n      {children}\n    </ButtonBase>\n  );\n}\n","import {Tabs} from '@ui/tabs/tabs';\nimport {Tab} from '@ui/tabs/tab';\nimport {Trans} from '@ui/i18n/trans';\nimport {TabList} from '@ui/tabs/tab-list';\nimport {Link, Outlet, useLocation} from 'react-router';\n\nconst tabs = ['schedule', 'error', 'outgoing-email'];\n\nexport function LogsPage() {\n  const {pathname} = useLocation();\n  const activeTab = pathname.split('/').pop() as string;\n  const activeIndex = tabs.includes(activeTab) ? tabs.indexOf(activeTab) : 0;\n  return (\n    <Tabs className=\"p-12 md:p-24\" selectedTab={activeIndex}>\n      <TabList className=\"mb-24\">\n        <Tab elementType={Link} to=\"/admin/logs/schedule\" replace>\n          <Trans message=\"Schedule\" />\n        </Tab>\n        <Tab elementType={Link} to=\"/admin/logs/error\" replace>\n          <Trans message=\"Error\" />\n        </Tab>\n        <Tab elementType={Link} to=\"/admin/logs/outgoing-email\" replace>\n          <Trans message=\"Email\" />\n        </Tab>\n      </TabList>\n      <Outlet />\n    </Tabs>\n  );\n}\n","import {CheckIcon} from '@ui/icons/material/Check';\nimport {CloseIcon} from '@ui/icons/material/Close';\nimport React from 'react';\n\ninterface BooleanIndicatorProps {\n  value: boolean;\n}\nexport function BooleanIndicator({value}: BooleanIndicatorProps) {\n  if (value) {\n    return <CheckIcon className=\"text-positive icon-md\" />;\n  }\n  return <CloseIcon className=\"text-danger icon-md\" />;\n}\n","import {useMutation} from '@tanstack/react-query';\nimport {apiClient, queryClient} from '@common/http/query-client';\nimport {useTrans} from '@ui/i18n/use-trans';\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\nimport {showHttpErrorToast} from '@common/http/show-http-error-toast';\nimport {message} from '@ui/i18n/message';\nimport {toast} from '@ui/toast/toast';\nimport {DatatableDataQueryKey} from '@common/datatable/requests/paginated-resources';\n\ninterface Response extends BackendResponse {}\n\ninterface Payload {\n  id: number;\n}\n\nexport function useRerunScheduledCommand() {\n  const {trans} = useTrans();\n  return useMutation({\n    mutationFn: (payload: Payload) => rerunCommand(payload),\n    onSuccess: async (response, props) => {\n      await queryClient.invalidateQueries({\n        queryKey: DatatableDataQueryKey('logs/schedule'),\n      });\n      toast.positive(trans(message('Command reran')));\n    },\n    onError: err => showHttpErrorToast(err),\n  });\n}\n\nfunction rerunCommand({id}: Payload): Promise<Response> {\n  return apiClient.post(`logs/schedule/rerun/${id}`).then(r => r.data);\n}\n","import {createSvgIcon} from '../create-svg-icon';\n\nexport const EventRepeatIcon = createSvgIcon(\n  <path d=\"M21 12V6c0-1.1-.9-2-2-2h-1V2h-2v2H8V2H6v2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h7v-2H5V10h14v2h2zm-2-4H5V6h14v2zm-3.36 12c.43 1.45 1.77 2.5 3.36 2.5 1.93 0 3.5-1.57 3.5-3.5s-1.57-3.5-3.5-3.5c-.95 0-1.82.38-2.45 1H18V18h-4v-4h1.5v1.43c.9-.88 2.14-1.43 3.5-1.43 2.76 0 5 2.24 5 5s-2.24 5-5 5c-2.42 0-4.44-1.72-4.9-4h1.54z\" />\n, 'EventRepeatOutlined');\n","import {ColumnConfig} from '@common/datatable/column-config';\nimport {Trans} from '@ui/i18n/trans';\nimport {NameWithAvatar} from '@common/datatable/column-templates/name-with-avatar';\nimport {BooleanIndicator} from '@common/datatable/column-templates/boolean-indicator';\nimport {Tooltip} from '@ui/tooltip/tooltip';\nimport {IconButton} from '@ui/buttons/icon-button';\nimport React from 'react';\nimport {ScheduleLogItem} from '@common/admin/logging/schedule/schedule-log-item';\nimport {useRerunScheduledCommand} from '@common/admin/logging/schedule/use-rerurun-scheduled-command';\nimport {EventRepeatIcon} from '@ui/icons/material/EventRepeat';\nimport {FormattedRelativeTime} from '@ui/i18n/formatted-relative-time';\n\nexport const ScheduleDatatableColumns: ColumnConfig<ScheduleLogItem>[] = [\n  {\n    key: 'command',\n    allowsSorting: true,\n    visibleInMode: 'all',\n    width: 'flex-3 min-w-200',\n    header: () => <Trans message=\"Name\" />,\n    body: item => (\n      <NameWithAvatar label={item.command} description={item.output} />\n    ),\n  },\n  {\n    key: 'ran_at',\n    allowsSorting: true,\n    header: () => <Trans message=\"Last ran at\" />,\n    body: item => <FormattedRelativeTime date={item.ran_at} />,\n  },\n  {\n    key: 'duration',\n    allowsSorting: true,\n    header: () => <Trans message=\"Duration\" />,\n    body: item => `${item.duration}ms`,\n  },\n  {\n    key: 'exit_code',\n    allowsSorting: true,\n    header: () => <Trans message=\"Completed\" />,\n    body: item => <BooleanIndicator value={item.exit_code === 0} />,\n  },\n  {\n    key: 'actions',\n    header: () => <Trans message=\"Actions\" />,\n    hideHeader: true,\n    align: 'end',\n    width: 'w-42 flex-shrink-0',\n    visibleInMode: 'all',\n    body: item => <RerunButton item={item} />,\n  },\n];\n\ninterface RerunButtonProps {\n  item: ScheduleLogItem;\n}\nfunction RerunButton({item}: RerunButtonProps) {\n  const rerunCommand = useRerunScheduledCommand();\n  return (\n    <Tooltip label={<Trans message=\"Rerun now\" />}>\n      <IconButton\n        size=\"md\"\n        className=\"text-muted\"\n        disabled={rerunCommand.isPending}\n        onClick={() => {\n          rerunCommand.mutate({id: item.id});\n        }}\n      >\n        <EventRepeatIcon />\n      </IconButton>\n    </Tooltip>\n  );\n}\n","export default \"__VITE_ASSET__8c0e1462__\"","import {createSvgIcon} from '../create-svg-icon';\n\nexport const DownloadIcon = createSvgIcon(\n  <path d=\"M19 9h-4V3H9v6H5l7 7 7-7zm-8 2V5h2v6h1.17L12 13.17 9.83 11H11zm-6 7h14v2H5z\" />\n, 'DownloadOutlined');\n","import {DataTablePage} from '@common/datatable/page/data-table-page';\nimport {Trans} from '@ui/i18n/trans';\nimport {DataTableEmptyStateMessage} from '@common/datatable/page/data-table-emty-state-message';\nimport React from 'react';\nimport {ScheduleDatatableColumns} from '@common/admin/logging/schedule/schedule-datatable-columns';\nimport timelineImage from '@common/admin/logging/schedule/timeline.svg';\nimport {DataTableAddItemButton} from '@common/datatable/data-table-add-item-button';\nimport {DownloadIcon} from '@ui/icons/material/Download';\n\nexport function ScheduleLogDatatable() {\n  return (\n    <DataTablePage\n      padding=\"pt-12 md:pt-24\"\n      endpoint=\"logs/schedule\"\n      title={<Trans message=\"CRON schedule log\" />}\n      columns={ScheduleDatatableColumns}\n      actions={<Actions />}\n      enableSelection={false}\n      emptyStateMessage={\n        <DataTableEmptyStateMessage\n          image={timelineImage}\n          title={<Trans message=\"No scheduled commands have ran yet\" />}\n          filteringTitle={<Trans message=\"No matching scheduled commands\" />}\n        />\n      }\n    />\n  );\n}\n\nfunction Actions() {\n  return (\n    <DataTableAddItemButton\n      elementType=\"a\"\n      href=\"api/v1/logs/schedule/download\"\n      download\n      icon={<DownloadIcon />}\n    >\n      <Trans message=\"Download log\" />\n    </DataTableAddItemButton>\n  );\n}\n","export default \"__VITE_ASSET__5350d2f0__\"","import {ColumnConfig} from '@common/datatable/column-config';\nimport {Trans} from '@ui/i18n/trans';\nimport React from 'react';\nimport {ErrorLogItem} from '@common/admin/logging/error/error-log-item';\nimport {InfoIcon} from '@ui/icons/material/Info';\nimport {ErrorIcon} from '@ui/icons/material/Error';\nimport clsx from 'clsx';\nimport {FormattedRelativeTime} from '@ui/i18n/formatted-relative-time';\n\nexport const ErrorLogDatatableColumns: ColumnConfig<ErrorLogItem>[] = [\n  {\n    key: 'message',\n    visibleInMode: 'all',\n    width: 'flex-3 min-w-200',\n    header: () => <Trans message=\"Message\" />,\n    body: item => item.message,\n  },\n  {\n    key: 'datetime',\n    header: () => <Trans message=\"Date\" />,\n    body: item => <FormattedRelativeTime date={item.datetime} />,\n  },\n  {\n    key: 'severity',\n    header: () => <Trans message=\"Severity\" />,\n    body: item => {\n      return (\n        <span\n          className={clsx(\n            'flex items-center gap-6 text-xs capitalize',\n            item.level === 'error' ? 'text-danger' : 'text-primary',\n          )}\n        >\n          {item.level === 'error' ? (\n            <ErrorIcon size=\"sm\" />\n          ) : (\n            <InfoIcon size=\"sm\" />\n          )}\n          {item.level}\n        </span>\n      );\n    },\n  },\n];\n","import {Dialog} from '@ui/overlays/dialog/dialog';\nimport {DialogHeader} from '@ui/overlays/dialog/dialog-header';\nimport {Trans} from '@ui/i18n/trans';\nimport {ErrorLogItem} from '@common/admin/logging/error/error-log-item';\nimport {DialogBody} from '@ui/overlays/dialog/dialog-body';\nimport {Button} from '@ui/buttons/button';\n\ninterface Props {\n  error: ErrorLogItem;\n}\nexport function ErrorLogEntryDialog({error}: Props) {\n  return (\n    <Dialog size=\"fullscreen\">\n      <DialogHeader\n        showDivider\n        padding=\"px-24 py-10\"\n        actions={\n          <Button\n            variant=\"outline\"\n            size=\"xs\"\n            onClick={() => downloadLogItem(error)}\n          >\n            <Trans message=\"Download\" />\n          </Button>\n        }\n      >\n        <Trans message=\"Error details\" />\n      </DialogHeader>\n      <DialogBody>\n        <pre className=\"whitespace-pre-wrap break-words text-xs leading-5\">\n          {error.exception}\n        </pre>\n      </DialogBody>\n    </Dialog>\n  );\n}\n\nfunction downloadLogItem(item: ErrorLogItem) {\n  const el = document.createElement('a');\n  el.setAttribute(\n    'href',\n    'data:text/plain;charset=utf-8,' + encodeURIComponent(item.exception),\n  );\n  el.setAttribute('download', `error-${item.id}.log`);\n\n  el.style.display = 'none';\n  document.body.appendChild(el);\n  el.click();\n  document.body.removeChild(el);\n}\n","import {useMutation} from '@tanstack/react-query';\nimport {apiClient, queryClient} from '@common/http/query-client';\nimport {showHttpErrorToast} from '@common/http/show-http-error-toast';\nimport {toast} from '@ui/toast/toast';\nimport {useTrans} from '@ui/i18n/use-trans';\nimport {message} from '@ui/i18n/message';\nimport {DatatableDataQueryKey} from '@common/datatable/requests/paginated-resources';\n\ninterface Payload {\n  identifier: string;\n}\n\nexport function useDeleteErrorLog() {\n  const {trans} = useTrans();\n  return useMutation({\n    mutationFn: (payload: Payload) => deleteLogFile(payload),\n    onSuccess: async () => {\n      await queryClient.invalidateQueries({\n        queryKey: DatatableDataQueryKey('logs/error'),\n      });\n      toast(trans(message('Log file deleted')));\n    },\n    onError: err => showHttpErrorToast(err),\n  });\n}\n\nfunction deleteLogFile({identifier}: Payload) {\n  return apiClient.delete(`logs/error/${identifier}`).then(r => r.data);\n}\n","import {DataTablePage} from '@common/datatable/page/data-table-page';\nimport {Trans} from '@ui/i18n/trans';\nimport {DataTableEmptyStateMessage} from '@common/datatable/page/data-table-emty-state-message';\nimport React, {Fragment, useEffect, useRef, useState} from 'react';\nimport bugFixingImage from '@common/admin/logging/error/bug-fixing.svg';\nimport {DataTableAddItemButton} from '@common/datatable/data-table-add-item-button';\nimport {DownloadIcon} from '@ui/icons/material/Download';\nimport {ErrorLogDatatableColumns} from '@common/admin/logging/error/error-log-datatable-columns';\nimport {closeDialog, openDialog} from '@ui/overlays/store/dialog-store';\nimport {ErrorLogEntryDialog} from '@common/admin/logging/error/error-log-entry-dialog';\nimport {useDataTable} from '@common/datatable/page/data-table-context';\nimport {Select} from '@ui/forms/select/select';\nimport {Item} from '@ui/forms/listbox/item';\nimport {Skeleton} from '@ui/skeleton/skeleton';\nimport {ErrorLogItem} from '@common/admin/logging/error/error-log-item';\nimport {Button} from '@ui/buttons/button';\nimport {ConfirmationDialog} from '@ui/overlays/dialog/confirmation-dialog';\nimport {useDeleteErrorLog} from '@common/admin/logging/error/use-delete-error-log';\nimport {FormattedBytes} from '@ui/i18n/formatted-bytes';\n\ninterface ErrorLogFile {\n  name: string;\n  identifier: string;\n  size: number;\n}\n\nexport function ErrorLogDatatable() {\n  return (\n    <DataTablePage\n      padding=\"pt-12 md:pt-24\"\n      endpoint=\"logs/error\"\n      title={<Trans message=\"Error log\" />}\n      onRowAction={item => {\n        openDialog(ErrorLogEntryDialog, {error: item});\n      }}\n      columns={ErrorLogDatatableColumns}\n      actions={<Actions />}\n      enableSelection={false}\n      emptyStateMessage={\n        <DataTableEmptyStateMessage\n          image={bugFixingImage}\n          title={<Trans message=\"No errors have been logged yet\" />}\n          filteringTitle={<Trans message=\"No matching error log entries\" />}\n        />\n      }\n    />\n  );\n}\n\nfunction Actions() {\n  const {query, setParams} = useDataTable<\n    ErrorLogItem,\n    {files: ErrorLogFile[]; selectedFile?: string}\n  >();\n\n  const setOnce = useRef(false);\n  const [selectedFile, setSelectedFile] = useState<string | null>(null);\n\n  // set initial selected file once files are loaded\n  useEffect(() => {\n    if (query.data?.files?.length && !setOnce.current) {\n      setOnce.current = true;\n      const firstFile = query.data.files[0].identifier;\n      setSelectedFile(query.data.files[0].identifier);\n      // prevent unnecessary http call\n      if (firstFile !== query.data.selectedFile) {\n        setParams({file: query.data.files[0].identifier});\n      }\n    }\n  }, [query.data, setParams, setOnce]);\n\n  return (\n    <Fragment>\n      <FileSelector\n        files={query.data?.files ?? null}\n        selectedFile={selectedFile}\n        onSelected={file => {\n          setSelectedFile(file.identifier);\n          setParams({file: file.identifier});\n        }}\n      />\n      <Button\n        variant=\"outline\"\n        color=\"danger\"\n        disabled={!selectedFile}\n        onClick={() =>\n          openDialog(ConfirmDeleteDialog, {identifier: selectedFile})\n        }\n      >\n        <Trans message=\"Delete\" />\n      </Button>\n      {selectedFile && (\n        <DataTableAddItemButton\n          elementType=\"a\"\n          download={\n            query.data?.files.find(f => f.identifier === selectedFile)?.name\n          }\n          href={`api/v1/logs/error/${selectedFile}/download`}\n          icon={<DownloadIcon />}\n        >\n          <Trans message=\"Download log\" />\n        </DataTableAddItemButton>\n      )}\n    </Fragment>\n  );\n}\n\ninterface FileSelectorProps {\n  files: ErrorLogFile[] | null;\n  selectedFile: string | null;\n  onSelected: (file: ErrorLogFile) => void;\n}\nfunction FileSelector({files, selectedFile, onSelected}: FileSelectorProps) {\n  // files have not loaded yet, show skeleton\n  if (!files) {\n    return <Skeleton variant=\"rect\" className=\"max-w-[210px]\" />;\n  }\n\n  // no error logs yet, hide select completely\n  if (!files.length) {\n    return null;\n  }\n\n  return (\n    <Select\n      selectionMode=\"single\"\n      selectedValue={selectedFile}\n      size=\"sm\"\n      minWidth=\"min-w-[210px]\"\n    >\n      {files?.map(file => (\n        <Item\n          key={file.identifier}\n          value={file.identifier}\n          onSelected={() => onSelected(file)}\n        >\n          {file.name} (<FormattedBytes bytes={file.size} />)\n        </Item>\n      ))}\n    </Select>\n  );\n}\n\ninterface ConfirmDeleteDialogProps {\n  identifier: string;\n}\nfunction ConfirmDeleteDialog({identifier}: ConfirmDeleteDialogProps) {\n  const deleteLog = useDeleteErrorLog();\n  return (\n    <ConfirmationDialog\n      title={<Trans message=\"Delete log file\" />}\n      body={<Trans message=\"Are you sure you want to delete this log file?\" />}\n      confirm={<Trans message=\"Delete\" />}\n      onConfirm={() =>\n        deleteLog.mutate({identifier}, {onSuccess: () => closeDialog()})\n      }\n      isLoading={deleteLog.isPending}\n      isDanger\n    />\n  );\n}\n","export default \"__VITE_ASSET__a71f56b4__\"","import {useQuery} from '@tanstack/react-query';\nimport {apiClient} from '@common/http/query-client';\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\nimport {OutgoingEmailLogItem} from '@common/admin/logging/outgoing-email/outgoing-email-log-item';\n\ninterface Response extends BackendResponse {\n  logItem: OutgoingEmailLogItem;\n}\n\nexport function useOutgoingEmailLogItemWithMime(id: number) {\n  return useQuery({\n    queryKey: ['logs/outgoing-email', id],\n    queryFn: () => fetchLogItem(id),\n  });\n}\n\nfunction fetchLogItem(id: number) {\n  return apiClient.get<Response>(`logs/outgoing-email/${id}`).then(r => r.data);\n}\n","import {Dialog} from '@ui/overlays/dialog/dialog';\nimport {DialogHeader} from '@ui/overlays/dialog/dialog-header';\nimport {Trans} from '@ui/i18n/trans';\nimport {DialogBody} from '@ui/overlays/dialog/dialog-body';\nimport {Button} from '@ui/buttons/button';\nimport {useOutgoingEmailLogItemWithMime} from '@common/admin/logging/outgoing-email/use-outgoing-email-log-item-with-mime';\nimport {ProgressCircle} from '@ui/progress/progress-circle';\nimport {downloadFileFromUrl} from '@ui/utils/files/download-file-from-url';\nimport {useSettings} from '@ui/settings/use-settings';\n\ninterface Props {\n  logItemId: number;\n}\nexport function OutgoingEmailLogEntryDialog({logItemId}: Props) {\n  const {data} = useOutgoingEmailLogItemWithMime(logItemId);\n  const {base_url} = useSettings();\n  return (\n    <Dialog size=\"fullscreen\">\n      <DialogHeader\n        showDivider\n        padding=\"px-24 py-10\"\n        actions={\n          <Button\n            variant=\"outline\"\n            size=\"xs\"\n            disabled={!data}\n            type=\"button\"\n            onClick={\n              data\n                ? () =>\n                    downloadFileFromUrl(\n                      `${base_url}/api/v1/logs/outgoing-email/${logItemId}/download`,\n                    )\n                : undefined\n            }\n          >\n            <Trans message=\"Download\" />\n          </Button>\n        }\n      >\n        <Trans message=\"Email preview\" />\n      </DialogHeader>\n      <DialogBody>\n        {data ? (\n          <iframe\n            srcDoc={data.logItem.parsed_message!.body.html}\n            className=\"h-max w-full border-none\"\n            onLoad={e => {\n              const iframe = e.target as HTMLIFrameElement;\n              iframe.style.height =\n                iframe.contentWindow!.document.body.scrollHeight + 'px';\n            }}\n          />\n        ) : (\n          <div className=\"flex min-h-200 items-center justify-center\">\n            <ProgressCircle isIndeterminate />\n          </div>\n        )}\n      </DialogBody>\n    </Dialog>\n  );\n}\n","import {ColumnConfig} from '@common/datatable/column-config';\nimport {Trans} from '@ui/i18n/trans';\nimport {NameWithAvatar} from '@common/datatable/column-templates/name-with-avatar';\nimport {Tooltip} from '@ui/tooltip/tooltip';\nimport {IconButton} from '@ui/buttons/icon-button';\nimport React, {ReactNode} from 'react';\nimport {useRerunScheduledCommand} from '@common/admin/logging/schedule/use-rerurun-scheduled-command';\nimport {OutgoingEmailLogItem} from '@common/admin/logging/outgoing-email/outgoing-email-log-item';\nimport {FormattedRelativeTime} from '@ui/i18n/formatted-relative-time';\nimport {Chip, ChipProps} from '@ui/forms/input-field/chip-field/chip';\nimport {VisibilityIcon} from '@ui/icons/material/Visibility';\nimport {DialogTrigger} from '@ui/overlays/dialog/dialog-trigger';\nimport {OutgoingEmailLogEntryDialog} from '@common/admin/logging/outgoing-email/outgoing-email-log-entry-dialog';\n\nexport const OutgoingEmailLogDatatableColumns: ColumnConfig<OutgoingEmailLogItem>[] =\n  [\n    {\n      key: 'message_id',\n      allowsSorting: true,\n      visibleInMode: 'all',\n      width: 'flex-3 min-w-200',\n      header: () => <Trans message=\"Subject\" />,\n      body: item => (\n        <NameWithAvatar label={item.subject} description={item.message_id} />\n      ),\n    },\n    {\n      key: 'status',\n      allowsSorting: true,\n      header: () => <Trans message=\"Status\" />,\n      body: item => {\n        switch (item.status) {\n          case 'sent':\n            return (\n              <StatusChip color=\"positive\">\n                <Trans message=\"Sent\" />\n              </StatusChip>\n            );\n          case 'not-sent':\n            return (\n              <StatusChip color={undefined}>\n                <Trans message=\"Not sent\" />\n              </StatusChip>\n            );\n          case 'error':\n            return (\n              <StatusChip color=\"danger\">\n                <Trans message=\"Error\" />\n              </StatusChip>\n            );\n        }\n      },\n    },\n    {\n      key: 'from',\n      allowsSorting: true,\n      header: () => <Trans message=\"From\" />,\n      body: item => item.from,\n    },\n    {\n      key: 'to',\n      allowsSorting: true,\n      header: () => <Trans message=\"To\" />,\n      body: item => item.to,\n    },\n    {\n      key: 'created_at',\n      allowsSorting: true,\n      header: () => <Trans message=\"Date\" />,\n      body: item => <FormattedRelativeTime date={item.created_at} />,\n    },\n    {\n      key: 'actions',\n      header: () => <Trans message=\"Actions\" />,\n      hideHeader: true,\n      align: 'end',\n      width: 'w-42 flex-shrink-0',\n      visibleInMode: 'all',\n      body: item => <PreviewEmailButton item={item} />,\n    },\n  ];\n\ninterface PreviewButtonProps {\n  item: OutgoingEmailLogItem;\n}\nfunction PreviewEmailButton({item}: PreviewButtonProps) {\n  const rerunCommand = useRerunScheduledCommand();\n  return (\n    <DialogTrigger type=\"modal\">\n      <Tooltip label={<Trans message=\"Preview\" />}>\n        <IconButton\n          size=\"md\"\n          className=\"text-muted\"\n          disabled={rerunCommand.isPending}\n          onClick={() => {\n            rerunCommand.mutate({id: item.id});\n          }}\n        >\n          <VisibilityIcon />\n        </IconButton>\n      </Tooltip>\n      <OutgoingEmailLogEntryDialog logItemId={item.id} />\n    </DialogTrigger>\n  );\n}\n\ninterface StatusChipProps {\n  color: ChipProps['color'];\n  children: ReactNode;\n}\nfunction StatusChip({color, children}: StatusChipProps) {\n  return (\n    <Chip color={color} size=\"xs\" className=\"w-max min-w-50 text-center\">\n      {children}\n    </Chip>\n  );\n}\n","import {\n  BackendFilter,\n  FilterControlType,\n  FilterOperator,\n} from '@common/datatable/filters/backend-filter';\nimport {message} from '@ui/i18n/message';\nimport {createdAtFilter} from '@common/datatable/filters/timestamp-filters';\n\nexport const OutgoingEmailLogDatatableFilters: BackendFilter[] = [\n  {\n    key: 'status',\n    label: message('Status'),\n    description: message('Status of the outgoing email'),\n    defaultOperator: FilterOperator.eq,\n    control: {\n      type: FilterControlType.Select,\n      defaultValue: '01',\n      options: [\n        {\n          key: '01',\n          label: message('Not sent'),\n          value: 'no-sent',\n        },\n        {\n          key: '02',\n          label: message('Sent'),\n          value: 'sent',\n        },\n        {\n          key: '03',\n          label: message('Error'),\n          value: 'error',\n        },\n      ],\n    },\n  },\n  createdAtFilter({\n    description: message('Date email send was attempted'),\n  }),\n];\n","import {DataTablePage} from '@common/datatable/page/data-table-page';\nimport {Trans} from '@ui/i18n/trans';\nimport {DataTableEmptyStateMessage} from '@common/datatable/page/data-table-emty-state-message';\nimport React from 'react';\nimport openedImage from '@common/admin/logging/outgoing-email/opened.svg';\nimport {DataTableAddItemButton} from '@common/datatable/data-table-add-item-button';\nimport {DownloadIcon} from '@ui/icons/material/Download';\nimport {OutgoingEmailLogDatatableColumns} from '@common/admin/logging/outgoing-email/outgoing-email-log-datatable-columns';\nimport {OutgoingEmailLogDatatableFilters} from '@common/admin/logging/outgoing-email/outgoing-email-log-datatable-filters';\n\nexport function OutgoingEmailLogDatatable() {\n  return (\n    <DataTablePage\n      padding=\"pt-12 md:pt-24\"\n      endpoint=\"logs/outgoing-email\"\n      title={<Trans message=\"Outgoing email\" />}\n      columns={OutgoingEmailLogDatatableColumns}\n      filters={OutgoingEmailLogDatatableFilters}\n      actions={<Actions />}\n      enableSelection={false}\n      emptyStateMessage={\n        <DataTableEmptyStateMessage\n          image={openedImage}\n          title={<Trans message=\"No outgoing emails have been logged yet\" />}\n          filteringTitle={<Trans message=\"No matching emails\" />}\n        />\n      }\n    />\n  );\n}\n\nfunction Actions() {\n  return (\n    <DataTableAddItemButton\n      elementType=\"a\"\n      href=\"api/v1/logs/outgoing-email/download\"\n      download\n      icon={<DownloadIcon />}\n    >\n      <Trans message=\"Download log\" />\n    </DataTableAddItemButton>\n  );\n}\n","import React, {useState} from 'react';\nimport {useNormalizedModels} from '@common/ui/normalized-model/use-normalized-models';\nimport {CrupdateResourceSection} from '@common/admin/crupdate-resource-layout';\nimport {Trans} from '@ui/i18n/trans';\nimport {FormChipField} from '@ui/forms/input-field/chip-field/form-chip-field';\nimport {Item} from '@ui/forms/listbox/item';\nimport {Avatar} from '@ui/avatar/avatar';\nimport {useAuth} from '@common/auth/use-auth';\n\ninterface Props {\n  endpoint?: string;\n}\nexport function UserRoleSection({endpoint}: Props) {\n  const [query, setQuery] = useState('');\n  const {data} = useNormalizedModels(endpoint ?? 'normalized-models/role', {\n    query,\n  });\n  const {hasPermission} = useAuth();\n  return (\n    <CrupdateResourceSection label={<Trans message=\"Roles\" />}>\n      <FormChipField\n        className=\"mb-30\"\n        name=\"roles\"\n        suggestions={data?.results}\n        inputValue={query}\n        onInputValueChange={setQuery}\n        alwaysShowAvatar\n        readOnly={!hasPermission('users.update')}\n      >\n        {suggestion => (\n          <Item\n            key={suggestion.id}\n            value={suggestion.id}\n            startIcon={<Avatar label={suggestion.name} />}\n          >\n            {suggestion.name}\n          </Item>\n        )}\n      </FormChipField>\n    </CrupdateResourceSection>\n  );\n}\n","import {useMutation} from '@tanstack/react-query';\nimport {UseFormReturn} from 'react-hook-form';\nimport {User} from '@ui/types/user';\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\nimport {toast} from '@ui/toast/toast';\nimport {apiClient, queryClient} from '@common/http/query-client';\nimport {onFormQueryError} from '@common/errors/on-form-query-error';\nimport {message} from '@ui/i18n/message';\nimport {useNavigate} from '@common/ui/navigation/use-navigate';\n\ninterface Response extends BackendResponse {\n  user: User;\n}\n\nexport interface UpdateUserPayload\n  extends Omit<Partial<User>, 'email_verified_at'> {\n  email_verified_at?: boolean;\n}\n\nexport function useUpdateUser(\n  userId: number,\n  form: UseFormReturn<UpdateUserPayload>,\n) {\n  const navigate = useNavigate();\n  return useMutation({\n    mutationFn: (payload: UpdateUserPayload) => updateUser(userId, payload),\n    onSuccess: (response, props) => {\n      toast(message('User updated'));\n      queryClient.invalidateQueries({queryKey: ['users']});\n      navigate('/admin/users');\n    },\n    onError: r => onFormQueryError(r, form),\n  });\n}\n\nfunction updateUser(\n  userId: number,\n  payload: UpdateUserPayload,\n): Promise<Response> {\n  if (payload.roles) {\n    payload.roles = payload.roles.map(r => r.id) as any;\n  }\n  return apiClient.put(`users/${userId}`, payload).then(r => r.data);\n}\n","import {UseFormReturn} from 'react-hook-form';\nimport {ReactNode} from 'react';\nimport {Form} from '@ui/forms/form';\nimport {DirtyFormSaveDrawer} from '@common/admin/crupdate-resource-layout';\nimport {\n  UpdateUserPayload,\n  useUpdateUser,\n} from '@common/admin/users/requests/user-update-user';\nimport {useOutletContext} from 'react-router';\nimport {User} from '@ui/types/user';\n\ninterface Props {\n  form: UseFormReturn<Partial<UpdateUserPayload>>;\n  children: ReactNode;\n}\nexport function UpdateUserForm({form, children}: Props) {\n  const user = useOutletContext() as User;\n  const updateUser = useUpdateUser(user.id, form);\n  return (\n    <Form\n      onSubmit={values => {\n        updateUser.mutate(values);\n      }}\n      onBeforeSubmit={() => form.clearErrors()}\n      form={form}\n    >\n      {children}\n      <DirtyFormSaveDrawer isLoading={updateUser.isPending} />\n    </Form>\n  );\n}\n","import {Trans} from '@ui/i18n/trans';\nimport {FormTextField} from '@ui/forms/input-field/text-field/text-field';\nimport React from 'react';\nimport {UserRoleSection} from '@common/admin/users/update-user-page/user-role-section';\nimport {useForm} from 'react-hook-form';\nimport {Link, useOutletContext} from 'react-router';\nimport {User} from '@ui/types/user';\nimport {UpdateUserPayload} from '@common/admin/users/requests/user-update-user';\nimport {UpdateUserForm} from '@common/admin/users/update-user-page/update-user-form';\nimport {FormSwitch} from '@ui/forms/toggle/switch';\nimport {useResendVerificationEmail} from '@common/auth/requests/use-resend-verification-email';\nimport {useSettings} from '@ui/settings/use-settings';\nimport {Button} from '@ui/buttons/button';\nimport {FormFileSizeField} from '@common/uploads/components/file-size-field';\nimport {LinkStyle} from '@ui/buttons/external-link';\n\nexport function UpdateUserDetailsTab() {\n  const user = useOutletContext() as User;\n  const form = useForm<UpdateUserPayload>({\n    defaultValues: {\n      first_name: user.first_name ?? '',\n      last_name: user.last_name ?? '',\n      roles: user.roles,\n      email_verified_at: !!user.email_verified_at,\n      available_space: user.available_space,\n    },\n  });\n\n  return (\n    <UpdateUserForm form={form}>\n      <div className=\"mb-24 flex gap-44\">\n        <FormTextField\n          name=\"first_name\"\n          label={<Trans message=\"First name\" />}\n          className=\"flex-auto\"\n        />\n        <FormTextField\n          name=\"last_name\"\n          label={<Trans message=\"Last name\" />}\n          className=\"flex-auto\"\n        />\n      </div>\n      <FormFileSizeField\n        className=\"mb-24\"\n        name=\"available_space\"\n        label={<Trans message=\"Allowed storage space\" />}\n        description={\n          <Trans\n            values={{\n              a: parts => (\n                <Link\n                  className={LinkStyle}\n                  target=\"_blank\"\n                  to=\"/admin/settings/uploading\"\n                >\n                  {parts}\n                </Link>\n              ),\n            }}\n            message=\"Total storage space all user uploads are allowed to take up. If left empty, this value will be inherited from any roles or subscriptions user has, or from 'Available space' setting in <a>Uploading</a> settings page.\"\n          />\n        }\n      />\n      <EmailConfirmSection user={user} />\n      <UserRoleSection />\n    </UpdateUserForm>\n  );\n}\n\ninterface EmailConfirmSectionProps {\n  user: User;\n}\nfunction EmailConfirmSection({user}: EmailConfirmSectionProps) {\n  const resendConfirmationEmail = useResendVerificationEmail();\n  const {require_email_confirmation} = useSettings();\n  return (\n    <div className=\"mb-44\">\n      <FormSwitch\n        className=\"mb-30\"\n        disabled={!require_email_confirmation}\n        name=\"email_verified_at\"\n        description={\n          <Trans message=\"Whether email address has been confirmed. User will not be able to login until address is confirmed, unless confirmation is disabled from settings page.\" />\n        }\n      >\n        <Trans message=\"Email confirmed\" />\n      </FormSwitch>\n      <Button\n        size=\"xs\"\n        variant=\"outline\"\n        color=\"primary\"\n        disabled={\n          !require_email_confirmation ||\n          resendConfirmationEmail.isPending ||\n          !!user.email_verified_at\n        }\n        onClick={() => {\n          resendConfirmationEmail.mutate({email: user.email});\n        }}\n      >\n        <Trans message=\"Resend email\" />\n      </Button>\n    </div>\n  );\n}\n","import {CrupdateResourceSection} from '@common/admin/crupdate-resource-layout';\nimport {Trans} from '@ui/i18n/trans';\nimport {FormPermissionSelector} from '@common/auth/ui/permission-selector';\nimport React from 'react';\nimport {UserRoleSection} from '@common/admin/users/update-user-page/user-role-section';\nimport {useOutletContext} from 'react-router';\nimport {useForm} from 'react-hook-form';\nimport {User} from '@ui/types/user';\nimport {UpdateUserPayload} from '@common/admin/users/requests/user-update-user';\nimport {UpdateUserForm} from '@common/admin/users/update-user-page/update-user-form';\n\nexport function UpdateUserPermissionsTab() {\n  const user = useOutletContext() as User;\n  const form = useForm<UpdateUserPayload>({\n    defaultValues: {\n      permissions: user.permissions,\n      roles: user.roles,\n    },\n  });\n  return (\n    <UpdateUserForm form={form}>\n      <UserRoleSection />\n      <CrupdateResourceSection label={<Trans message=\"Permissions\" />}>\n        <FormPermissionSelector name=\"permissions\" />\n      </CrupdateResourceSection>\n    </UpdateUserForm>\n  );\n}\n","import {useOutletContext} from 'react-router';\nimport {LocalizationPanel} from '@common/auth/ui/account-settings/localization-panel';\nimport {User} from '@ui/types/user';\n\nexport function UpdateUserDatetimeTab() {\n  const user = useOutletContext() as User;\n  return <LocalizationPanel user={user} />;\n}\n","import {useOutletContext} from 'react-router';\nimport {User} from '@ui/types/user';\nimport {AccessTokenPanel} from '@common/auth/ui/account-settings/access-token-panel/access-token-panel';\n\nexport function UpdateUserApiTab() {\n  const user = useOutletContext() as User;\n  return <AccessTokenPanel user={user} />;\n}\n","import {ChangePasswordPanel} from '@common/auth/ui/account-settings/change-password-panel/change-password-panel';\nimport {useOutletContext} from 'react-router';\nimport {TwoFactorPanel} from '@common/auth/ui/account-settings/two-factor-panel';\nimport {SessionsPanel} from '@common/auth/ui/account-settings/sessions-panel/sessions-panel';\nimport {SocialLoginPanel} from '@common/auth/ui/account-settings/social-login-panel';\nimport {User} from '@ui/types/user';\n\nexport function UpdateUserSecurityTab() {\n  const user = useOutletContext() as User;\n  return (\n    <div>\n      <ChangePasswordPanel />\n      <TwoFactorPanel user={user} />\n      <SocialLoginPanel user={user} />\n      <SessionsPanel />\n    </div>\n  );\n}\n","import {useAppearanceEditorValues} from '@common/admin/appearance/requests/use-appearance-editor-values';\nimport {useForm, UseFormReturn, useWatch} from 'react-hook-form';\nimport {CssTheme} from '@ui/themes/css-theme';\nimport {AppearanceEditorForm} from '@common/admin/appearance/appearance-editor-form';\nimport {Outlet, useLocation, useParams} from 'react-router';\nimport {AppearanceEditorBreadcrumb} from '@common/admin/appearance/appearance-editor-breadcrumb';\nimport {Trans} from '@ui/i18n/trans';\nimport {ReactElement} from 'react';\n\nexport interface ThemeEditorFormValue {\n  appearance: {\n    themes: CssTheme[];\n  };\n}\n\nexport function ThemeEditorForm() {\n  const values = useAppearanceEditorValues();\n  const form = useForm<ThemeEditorFormValue>({\n    defaultValues: {\n      appearance: {\n        themes: values.appearance.themes.filter(t => t.type === 'site'),\n      },\n    },\n  });\n\n  return (\n    <AppearanceEditorForm\n      form={form}\n      breadcrumb={<ThemeEditorBreadcrumb form={form} />}\n      blockerAllowedPath=\"themes\"\n    >\n      <Outlet />\n    </AppearanceEditorForm>\n  );\n}\n\ninterface ThemeEditorBreadcrumbProps {\n  form: UseFormReturn<any>;\n  children?: ReactElement;\n}\nexport function ThemeEditorBreadcrumb({\n  form,\n  children,\n}: ThemeEditorBreadcrumbProps) {\n  const {pathname} = useLocation();\n  const lastSegment = pathname.split('/').pop();\n  const {themeIndex} = useParams();\n  const allThemes = useWatch({\n    control: form.control,\n    name: 'appearance.themes',\n  });\n  const activeTheme = themeIndex ? allThemes[themeIndex as any] : null;\n\n  return (\n    <AppearanceEditorBreadcrumb>\n      {children}\n      <Trans message=\"Themes\" />\n      {activeTheme && <span>{activeTheme.name}</span>}\n      {lastSegment === 'font' && <Trans message=\"Font\" />}\n      {lastSegment === 'radius' && <Trans message=\"Rounding\" />}\n    </AppearanceEditorBreadcrumb>\n  );\n}\n","import {useAppearanceEditorValues} from '@common/admin/appearance/requests/use-appearance-editor-values';\nimport {useForm, UseFormReturn, useWatch} from 'react-hook-form';\nimport {AppearanceEditorForm} from '@common/admin/appearance/appearance-editor-form';\nimport {Outlet, useParams} from 'react-router';\nimport {AppearanceEditorBreadcrumb} from '@common/admin/appearance/appearance-editor-breadcrumb';\nimport {Trans} from '@ui/i18n/trans';\nimport {MenuConfig} from '@common/menus/menu-config';\n\nexport interface MenuEditorFormValue {\n  settings: {\n    menus: MenuConfig[];\n  };\n}\n\nexport function MenuEditorForm() {\n  const values = useAppearanceEditorValues();\n  const form = useForm<MenuEditorFormValue>({\n    defaultValues: {\n      settings: {\n        menus: values.settings.menus,\n      },\n    },\n  });\n\n  return (\n    <AppearanceEditorForm\n      form={form}\n      breadcrumb={<MenuEditorBreadcrumb form={form} />}\n      blockerAllowedPath=\"menus\"\n    >\n      <Outlet />\n    </AppearanceEditorForm>\n  );\n}\n\ninterface MenuEditorBreadcrumbProps {\n  form: UseFormReturn<MenuEditorFormValue>;\n}\nfunction MenuEditorBreadcrumb({form}: MenuEditorBreadcrumbProps) {\n  const {menuIndex, menuItemIndex} = useParams();\n  const allMenus = useWatch({control: form.control, name: 'settings.menus'});\n\n  const activeMenu = menuIndex ? allMenus[menuIndex as any] : null;\n  const activeItem =\n    menuItemIndex && activeMenu ? activeMenu.items[menuItemIndex as any] : null;\n\n  return (\n    <AppearanceEditorBreadcrumb>\n      <Trans message=\"Menus\" />\n      {activeMenu && <span>{activeMenu.name}</span>}\n      {activeItem && <span>{activeItem.label}</span>}\n    </AppearanceEditorBreadcrumb>\n  );\n}\n","import {Trans} from '@ui/i18n/trans';\nimport {FormRadioGroup} from '@ui/forms/radio-group/radio-group';\nimport {FormRadio} from '@ui/forms/radio-group/radio';\nimport {FormSwitch} from '@ui/forms/toggle/switch';\nimport {\n  AdminSettingsForm,\n  AdminSettingsLayout,\n} from '@common/admin/settings/form/admin-settings-form';\nimport React from 'react';\nimport {AdminSettings} from '@common/admin/settings/admin-settings';\nimport {useForm} from 'react-hook-form';\n\nexport function DriveSettings() {\n  return (\n    <AdminSettingsLayout\n      title={<Trans message=\"Drive\" />}\n      description={\n        <Trans message=\"Configure defaults for drive user dashboard.\" />\n      }\n    >\n      {data => <Form data={data} />}\n    </AdminSettingsLayout>\n  );\n}\n\ninterface FormProps {\n  data: AdminSettings;\n}\nfunction Form({data}: FormProps) {\n  const form = useForm<AdminSettings>({\n    defaultValues: {\n      client: {\n        drive: {\n          default_view: data.client.drive?.default_view ?? 'list',\n          send_share_notification:\n            data.client.drive?.send_share_notification ?? false,\n        },\n        share: {\n          suggest_emails: data.client.share?.suggest_emails ?? false,\n        },\n      },\n    },\n  });\n\n  return (\n    <AdminSettingsForm form={form}>\n      <FormRadioGroup\n        required\n        className=\"mb-30\"\n        size=\"md\"\n        name=\"client.drive.default_view\"\n        orientation=\"vertical\"\n        label={<Trans message=\"Default view mode\" />}\n        description={\n          <Trans message=\"Which view mode should user drive use by default.\" />\n        }\n      >\n        <FormRadio value=\"list\">\n          <Trans message=\"List\" />\n        </FormRadio>\n        <FormRadio value=\"grid\">\n          <Trans message=\"Grid\" />\n        </FormRadio>\n      </FormRadioGroup>\n      <FormSwitch\n        className=\"mb-30\"\n        name=\"client.drive.send_share_notification\"\n        description={\n          <Trans message=\"Send a notification to user when a file or folder is shared with them.\" />\n        }\n      >\n        <Trans message=\"Share notifications\" />\n      </FormSwitch>\n      <FormSwitch\n        name=\"client.share.suggest_emails\"\n        description={\n          <Trans message=\"Suggest email address of existing users when sharing a file or folder.\" />\n        }\n      >\n        <Trans message=\"Suggest emails\" />\n      </FormSwitch>\n    </AdminSettingsForm>\n  );\n}\n","import {useAppearanceEditorValues} from '@common/admin/appearance/requests/use-appearance-editor-values';\nimport {useForm} from 'react-hook-form';\nimport {AppearanceEditorForm} from '@common/admin/appearance/appearance-editor-form';\nimport {Outlet, useLocation} from 'react-router';\nimport {AppearanceEditorBreadcrumb} from '@common/admin/appearance/appearance-editor-breadcrumb';\nimport {Trans} from '@ui/i18n/trans';\nimport {LandingPageContent} from '@app/landing/landing-page-content';\n\ninterface FormValue {\n  settings: {\n    homepage: {\n      appearance: LandingPageContent;\n    };\n  };\n}\n\nexport function LandingPageAppearanceForm() {\n  const values = useAppearanceEditorValues();\n  const form = useForm<FormValue>({\n    defaultValues: {\n      settings: {\n        homepage: {\n          appearance: {\n            headerTitle: values.settings.homepage.appearance.headerTitle ?? '',\n            headerSubtitle:\n              values.settings.homepage.appearance.headerSubtitle ?? '',\n            headerImage: values.settings.homepage.appearance.headerImage ?? '',\n            headerImageOpacity:\n              values.settings.homepage.appearance.headerImageOpacity ?? '',\n            headerOverlayColor1:\n              values.settings.homepage.appearance.headerOverlayColor1 ?? '',\n            headerOverlayColor2:\n              values.settings.homepage.appearance.headerOverlayColor2 ?? '',\n            footerTitle: values.settings.homepage.appearance.footerTitle ?? '',\n            footerSubtitle:\n              values.settings.homepage.appearance.footerSubtitle ?? '',\n            footerImage: values.settings.homepage.appearance.footerImage ?? '',\n            primaryFeatures:\n              values.settings.homepage.appearance.primaryFeatures ?? [],\n            secondaryFeatures:\n              values.settings.homepage.appearance.secondaryFeatures ?? [],\n            actions: values.settings.homepage.appearance.actions ?? [],\n          },\n        },\n      },\n    },\n  });\n\n  return (\n    <AppearanceEditorForm\n      form={form}\n      breadcrumb={<Breadcrumb />}\n      blockerAllowedPath=\"landing-page\"\n    >\n      <Outlet />\n    </AppearanceEditorForm>\n  );\n}\n\nfunction Breadcrumb() {\n  const {pathname} = useLocation();\n  const lastSegment = pathname.split('/').pop();\n\n  return (\n    <AppearanceEditorBreadcrumb>\n      <Trans message=\"Landing page\" />\n      {lastSegment === 'action-buttons' && <Trans message=\"Action buttons\" />}\n      {lastSegment === 'primary-features' && (\n        <Trans message=\"Primary features\" />\n      )}\n      {lastSegment === 'secondary-features' && (\n        <Trans message=\"Secondary features\" />\n      )}\n    </AppearanceEditorBreadcrumb>\n  );\n}\n","import React, {ReactNode} from 'react';\nimport clsx from 'clsx';\nimport {getInputFieldClassNames} from '../input-field/get-input-field-class-names';\nimport {UseSliderProps, UseSliderReturn} from './use-slider';\n\nexport interface BaseSliderProps extends UseSliderProps {\n  slider: UseSliderReturn;\n  children: ReactNode;\n}\n\nexport function BaseSlider(props: BaseSliderProps) {\n  const {\n    size = 'md',\n    inline,\n    label,\n    showValueLabel = !!label,\n    className,\n    width = 'w-full',\n    slider,\n    children,\n    trackColor = 'primary',\n    fillColor = 'primary',\n  } = props;\n\n  const {\n    domProps,\n    trackRef,\n    getThumbPercent,\n    getThumbValueLabel,\n    labelId,\n    groupId,\n    thumbIds,\n    isDisabled,\n    numberFormatter,\n    minValue,\n    maxValue,\n    step,\n    values,\n    getValueLabel,\n  } = slider;\n\n  let outputValue = '';\n  let maxLabelLength = Math.max(\n    [...numberFormatter.format(minValue)].length,\n    [...numberFormatter.format(maxValue)].length,\n    [...numberFormatter.format(step)].length,\n  );\n\n  if (getValueLabel) {\n    outputValue = getValueLabel(values[0]);\n  } else if (values.length === 1) {\n    outputValue = getThumbValueLabel(0);\n  } else if (values.length === 2) {\n    // This should really use the NumberFormat#formatRange proposal...\n    // https://github.com/tc39/ecma402/issues/393\n    // https://github.com/tc39/proposal-intl-numberformat-v3#formatrange-ecma-402-393\n    outputValue = `${getThumbValueLabel(0)} – ${getThumbValueLabel(1)}`;\n    maxLabelLength =\n      3 +\n      2 *\n        Math.max(\n          maxLabelLength,\n          [...numberFormatter.format(minValue)].length,\n          [...numberFormatter.format(maxValue)].length,\n        );\n  }\n  const style = getInputFieldClassNames({\n    size,\n    disabled: isDisabled,\n    labelDisplay: 'flex',\n  });\n\n  const wrapperClassname = clsx('touch-none', className, width, {\n    'flex items-center': inline,\n  });\n\n  return (\n    <div className={wrapperClassname} role=\"group\" id={groupId}>\n      {(label || showValueLabel) && (\n        <div className={clsx(style.label, 'select-none')}>\n          {label && (\n            <label\n              onClick={() => {\n                // Safari does not focus <input type=\"range\"> elements when clicking on an associated <label>,\n                // so do it manually. In addition, make sure we show the focus ring.\n                document.getElementById(thumbIds[0])?.focus();\n              }}\n              id={labelId}\n              htmlFor={groupId}\n            >\n              {label}\n            </label>\n          )}\n          {showValueLabel && (\n            <output\n              htmlFor={thumbIds[0]}\n              className=\"ml-auto text-right\"\n              aria-live=\"off\"\n              style={\n                !maxLabelLength\n                  ? undefined\n                  : {\n                      width: `${maxLabelLength}ch`,\n                      minWidth: `${maxLabelLength}ch`,\n                    }\n              }\n            >\n              {outputValue}\n            </output>\n          )}\n        </div>\n      )}\n      <div\n        ref={trackRef}\n        className={clsx('relative', getWrapperHeight(props))}\n        {...domProps}\n        role=\"presentation\"\n      >\n        <div\n          className={clsx(\n            'absolute inset-0 m-auto rounded',\n            getTrackColor(trackColor, isDisabled),\n            getTrackHeight(size),\n          )}\n        />\n        <div\n          className={clsx(\n            'absolute inset-0 my-auto rounded',\n            getFillColor(fillColor, isDisabled),\n            getTrackHeight(size),\n          )}\n          style={{width: `${Math.max(getThumbPercent(0) * 100, 0)}%`}}\n        />\n        {children}\n      </div>\n    </div>\n  );\n}\n\nfunction getWrapperHeight({size, wrapperHeight}: UseSliderProps): string {\n  if (wrapperHeight) return wrapperHeight;\n  switch (size) {\n    case 'xs':\n      return 'h-14';\n    case 'sm':\n      return 'h-20';\n    default:\n      return 'h-30';\n  }\n}\n\nfunction getTrackHeight(size: UseSliderProps['size']): string {\n  switch (size) {\n    case 'xs':\n      return 'h-2';\n    case 'sm':\n      return 'h-3';\n    default:\n      return 'h-4';\n  }\n}\n\nfunction getTrackColor(color: string, isDisabled: boolean): string {\n  if (isDisabled) {\n    color = 'disabled';\n  }\n  switch (color) {\n    case 'disabled':\n      return 'bg-slider-disabled/60';\n    case 'primary':\n      return 'bg-primary-light';\n    case 'neutral':\n      return 'bg-divider';\n    default:\n      return color;\n  }\n}\n\nfunction getFillColor(color: string, isDisabled: boolean): string {\n  if (isDisabled) {\n    color = 'disabled';\n  }\n  switch (color) {\n    case 'disabled':\n      return 'bg-slider-disabled';\n    case 'primary':\n      return 'bg-primary';\n    default:\n      return color;\n  }\n}\n","import {\n  mergeProps,\n  snapValueToStep,\n  useGlobalListeners,\n} from '@react-aria/utils';\nimport {useControlledState} from '@react-stately/utils';\nimport React, {\n  HTMLAttributes,\n  ReactNode,\n  RefObject,\n  useId,\n  useRef,\n  useState,\n} from 'react';\nimport {clamp} from '@ui/utils/number/clamp';\nimport {usePointerEvents} from '../../interactions/use-pointer-events';\nimport {useNumberFormatter} from '@ui/i18n/use-number-formatter';\nimport type {NumberFormatOptions} from '@internationalized/number';\n\nexport interface UseSliderProps<T = number[]> {\n  formatOptions?: NumberFormatOptions;\n  onPointerDown?: () => void;\n  onPointerMove?: (e: React.PointerEvent) => void;\n  onChange?: (value: T) => void;\n  onChangeEnd?: (value: T) => void;\n  value?: T;\n  defaultValue?: T;\n  getValueLabel?: (value: number) => string;\n  minValue?: number;\n  maxValue?: number;\n  step?: number;\n  isDisabled?: boolean;\n  size?: 'xs' | 'sm' | 'md';\n  label?: ReactNode;\n  inline?: boolean;\n  className?: string;\n  width?: string;\n  showValueLabel?: boolean;\n  fillColor?: 'primary' | string;\n  trackColor?: 'primary' | 'neutral' | string;\n  showThumbOnHoverOnly?: boolean;\n  thumbSize?: string;\n  wrapperHeight?: string;\n}\n\nexport interface UseSliderReturn {\n  domProps: HTMLAttributes<HTMLElement>;\n  trackRef: RefObject<HTMLDivElement>;\n  isPointerOver: boolean;\n  showThumbOnHoverOnly?: boolean;\n  thumbSize?: string;\n  step: number;\n  isDisabled: boolean;\n  values: number[];\n  minValue: number;\n  maxValue: number;\n  focusedThumb: number | undefined;\n  labelId: string | undefined;\n  groupId: string;\n  thumbIds: string[];\n  numberFormatter: Intl.NumberFormat;\n  getThumbPercent: (index: number) => number;\n  getThumbMinValue: (index: number) => number;\n  getThumbMaxValue: (index: number) => number;\n  getThumbValueLabel: (index: number) => string;\n  setThumbValue: (index: number, value: number) => void;\n  updateDraggedThumbs: (index: number, dragging: boolean) => void;\n  isThumbDragging: (index: number) => boolean;\n  setThumbEditable: (index: number, editable: boolean) => void;\n  setFocusedThumb: (index: number | undefined) => void;\n  getValueLabel?: (value: number) => string;\n}\n\nexport function useSlider({\n  minValue = 0,\n  maxValue = 100,\n  isDisabled = false,\n  step = 1,\n  formatOptions,\n  onChangeEnd,\n  onPointerDown,\n  label,\n  getValueLabel,\n  showThumbOnHoverOnly,\n  thumbSize,\n  onPointerMove,\n  ...props\n}: UseSliderProps): UseSliderReturn {\n  const [isPointerOver, setIsPointerOver] = useState(false);\n  const numberFormatter = useNumberFormatter(formatOptions);\n  const {addGlobalListener, removeGlobalListener} = useGlobalListeners();\n  const trackRef = useRef<HTMLDivElement>(null);\n\n  // values will be stored in internal state as an array for both slider and range slider\n  const [values, setValues] = useControlledState<number[]>(\n    props.value ? props.value : undefined,\n    props.defaultValue ?? ([minValue] as any),\n    props.onChange as any,\n  );\n  // need to also store values in ref, because state value would\n  // lag behind by one between pointer down and move callbacks\n  const valuesRef = useRef<number[] | null>(null);\n  valuesRef.current = values;\n\n  // indices of thumbs that are being dragged currently (state and ref for same reasons as above)\n  const [draggedThumbs, setDraggedThumbs] = useState<boolean[]>(\n    new Array(values.length).fill(false),\n  );\n  const draggedThumbsRef = useRef<boolean[] | null>(null);\n  draggedThumbsRef.current = draggedThumbs;\n\n  // formatted value for <output> and thumb aria labels\n  function getFormattedValue(value: number) {\n    return numberFormatter.format(value);\n  }\n\n  const isThumbDragging = (index: number) => {\n    return draggedThumbsRef.current?.[index] || false;\n  };\n\n  const getThumbValueLabel = (index: number) =>\n    getFormattedValue(values[index]);\n\n  const getThumbMinValue = (index: number) =>\n    index === 0 ? minValue : values[index - 1];\n  const getThumbMaxValue = (index: number) =>\n    index === values.length - 1 ? maxValue : values[index + 1];\n\n  const setThumbValue = (index: number, value: number) => {\n    if (isDisabled || !isThumbEditable(index) || !valuesRef.current) {\n      return;\n    }\n    const thisMin = getThumbMinValue(index);\n    const thisMax = getThumbMaxValue(index);\n\n    // Round value to multiple of step, clamp value between min and max\n    value = snapValueToStep(value, thisMin, thisMax, step);\n    valuesRef.current = replaceIndex(valuesRef.current, index, value);\n    setValues(valuesRef.current);\n  };\n\n  // update \"dragging\" status of specified thumb\n  const updateDraggedThumbs = (index: number, dragging: boolean) => {\n    if (isDisabled || !isThumbEditable(index)) {\n      return;\n    }\n\n    const wasDragging = draggedThumbsRef.current?.[index];\n    draggedThumbsRef.current = replaceIndex(\n      draggedThumbsRef.current || [],\n      index,\n      dragging,\n    );\n    setDraggedThumbs(draggedThumbsRef.current);\n\n    // Call onChangeEnd if no handles are dragging.\n    if (onChangeEnd && wasDragging && !draggedThumbsRef.current.some(Boolean)) {\n      onChangeEnd(valuesRef.current || []);\n    }\n  };\n\n  const [focusedThumb, setFocusedThumb] = useState<number | undefined>(\n    undefined,\n  );\n\n  const getValuePercent = (value: number) => {\n    const x = Math.min(1, (value - minValue) / (maxValue - minValue));\n    if (isNaN(x)) {\n      return 0;\n    }\n    return x;\n  };\n\n  const getThumbPercent = (index: number) =>\n    getValuePercent(valuesRef.current![index]);\n\n  const setThumbPercent = (index: number, percent: number) => {\n    setThumbValue(index, getPercentValue(percent));\n  };\n\n  const getRoundedValue = (value: number) =>\n    Math.round((value - minValue) / step) * step + minValue;\n\n  const getPercentValue = (percent: number) => {\n    const val = percent * (maxValue - minValue) + minValue;\n    return clamp(getRoundedValue(val), minValue, maxValue);\n  };\n\n  // allows disabling individual thumbs in range slider, instead of disable the whole slider\n  const editableThumbsRef = useRef<boolean[]>(\n    new Array(values.length).fill(true),\n  );\n  const isThumbEditable = (index: number) => editableThumbsRef.current[index];\n  const setThumbEditable = (index: number, editable: boolean) => {\n    editableThumbsRef.current[index] = editable;\n  };\n\n  // When the user clicks or drags the track, we want the motion to set and drag the\n  // closest thumb. Hence, we also need to install useMove() on the track element.\n  // Here, we keep track of which index is the \"closest\" to the drag start point.\n  // It is set onMouseDown/onTouchDown; see trackProps below.\n  const realTimeTrackDraggingIndex = useRef<number | null>(null);\n\n  const currentPointer = useRef<number | null | undefined>(undefined);\n  const handlePointerDown = (e: React.PointerEvent) => {\n    if (\n      e.pointerType === 'mouse' &&\n      (e.button !== 0 || e.altKey || e.ctrlKey || e.metaKey)\n    ) {\n      return;\n    }\n\n    onPointerDown?.();\n\n    // We only trigger track-dragging if the user clicks on the track itself and nothing is currently being dragged.\n    if (\n      trackRef.current &&\n      !isDisabled &&\n      values.every((_, i) => !draggedThumbs[i])\n    ) {\n      const size = trackRef.current.offsetWidth;\n      // Find the closest thumb\n      const trackPosition = trackRef.current.getBoundingClientRect().left;\n      const offset = e.clientX - trackPosition;\n      const percent = offset / size;\n      const value = getPercentValue(percent);\n\n      // to find the closet thumb we split the array based on the first thumb position to the \"right/end\" of the click.\n      let closestThumb;\n      const split = values.findIndex(v => value - v < 0);\n      if (split === 0) {\n        // If the index is zero then the closest thumb is the first one\n        closestThumb = split;\n      } else if (split === -1) {\n        // If no index is found they've clicked past all the thumbs\n        closestThumb = values.length - 1;\n      } else {\n        const lastLeft = values[split - 1];\n        const firstRight = values[split];\n        // Pick the last left/start thumb, unless they are stacked on top of each other, then pick the right/end one\n        if (Math.abs(lastLeft - value) < Math.abs(firstRight - value)) {\n          closestThumb = split - 1;\n        } else {\n          closestThumb = split;\n        }\n      }\n\n      // Confirm that the found closest thumb is editable, not disabled, and move it\n      if (closestThumb >= 0 && isThumbEditable(closestThumb)) {\n        // Don't un-focus anything\n        e.preventDefault();\n\n        realTimeTrackDraggingIndex.current = closestThumb;\n        setFocusedThumb(closestThumb);\n        currentPointer.current = e.pointerId;\n\n        updateDraggedThumbs(realTimeTrackDraggingIndex.current, true);\n        setThumbValue(closestThumb, value);\n\n        addGlobalListener(window, 'pointerup', onUpTrack, false);\n      } else {\n        realTimeTrackDraggingIndex.current = null;\n      }\n    }\n  };\n\n  const currentPosition = useRef<number | null>(null);\n  const {domProps: moveDomProps} = usePointerEvents({\n    onPointerDown: handlePointerDown,\n    onMoveStart() {\n      currentPosition.current = null;\n    },\n    onMove(e, deltaX) {\n      const size = trackRef.current?.offsetWidth || 0;\n\n      if (currentPosition.current == null) {\n        currentPosition.current =\n          getThumbPercent(realTimeTrackDraggingIndex.current || 0) * size;\n      }\n\n      currentPosition.current += deltaX;\n\n      if (realTimeTrackDraggingIndex.current != null && trackRef.current) {\n        const percent = clamp(currentPosition.current / size, 0, 1);\n        setThumbPercent(realTimeTrackDraggingIndex.current, percent);\n      }\n    },\n    onMoveEnd() {\n      if (realTimeTrackDraggingIndex.current != null) {\n        updateDraggedThumbs(realTimeTrackDraggingIndex.current, false);\n        realTimeTrackDraggingIndex.current = null;\n      }\n    },\n  });\n\n  const domProps = mergeProps(moveDomProps, {\n    onPointerEnter: () => {\n      setIsPointerOver(true);\n    },\n    onPointerLeave: () => {\n      setIsPointerOver(false);\n    },\n    onPointerMove: (e: React.PointerEvent) => {\n      onPointerMove?.(e);\n    },\n  });\n\n  const onUpTrack = (e: PointerEvent) => {\n    const id = e.pointerId;\n    if (id === currentPointer.current) {\n      if (realTimeTrackDraggingIndex.current != null) {\n        updateDraggedThumbs(realTimeTrackDraggingIndex.current, false);\n        realTimeTrackDraggingIndex.current = null;\n      }\n\n      removeGlobalListener(window, 'pointerup', onUpTrack, false);\n    }\n  };\n\n  const id = useId();\n  const labelId = label ? `${id}-label` : undefined;\n  const groupId = `${id}-group`;\n  const thumbIds = [...Array(values.length)].map((v, i) => {\n    return `${id}-thumb-${i}`;\n  });\n\n  return {\n    domProps,\n    trackRef,\n    isDisabled,\n    step,\n    values,\n    minValue,\n    maxValue,\n    focusedThumb,\n    labelId,\n    groupId,\n    thumbIds,\n    numberFormatter,\n    getThumbPercent,\n    getThumbMinValue,\n    getThumbMaxValue,\n    getThumbValueLabel,\n    isThumbDragging,\n    setThumbValue,\n    updateDraggedThumbs,\n    setThumbEditable,\n    setFocusedThumb,\n    getValueLabel,\n    isPointerOver,\n    showThumbOnHoverOnly,\n    thumbSize,\n  };\n}\n\nfunction replaceIndex<T>(array: T[], index: number, value: T) {\n  if (array[index] === value) {\n    return array;\n  }\n\n  return [...array.slice(0, index), value, ...array.slice(index + 1)];\n}\n","import React, {Ref, useCallback, useEffect, useRef} from 'react';\nimport clsx from 'clsx';\nimport {UseSliderReturn} from './use-slider';\nimport {useGlobalListeners, useObjectRef} from '@react-aria/utils';\nimport {createEventHandler} from '@ui/utils/dom/create-event-handler';\nimport {BaseSliderProps} from '@ui/forms/slider/base-slider';\n\ninterface SliderThumb {\n  index: number;\n  slider: UseSliderReturn;\n  isDisabled?: boolean;\n  ariaLabel?: string;\n  inputRef?: Ref<HTMLInputElement>;\n  onBlur?: React.FocusEventHandler;\n  fillColor?: BaseSliderProps['fillColor'];\n}\n\nexport function SliderThumb({\n  index,\n  slider,\n  isDisabled: isThumbDisabled,\n  ariaLabel,\n  inputRef,\n  onBlur,\n  fillColor = 'primary',\n}: SliderThumb) {\n  const inputObjRef = useObjectRef(inputRef);\n  const {addGlobalListener, removeGlobalListener} = useGlobalListeners();\n\n  const {\n    step,\n    values,\n    focusedThumb,\n    labelId,\n    thumbIds,\n    isDisabled: isSliderDisabled,\n    getThumbPercent,\n    getThumbMinValue,\n    getThumbMaxValue,\n    getThumbValueLabel,\n    setThumbValue,\n    updateDraggedThumbs,\n    isThumbDragging,\n    setThumbEditable,\n    setFocusedThumb,\n    isPointerOver,\n    showThumbOnHoverOnly,\n    thumbSize = 'w-18 h-18',\n  } = slider;\n\n  const isDragging = isThumbDragging(index);\n  const value = values[index];\n\n  // Immediately register editability with the state\n  setThumbEditable(index, !isThumbDisabled);\n  const isDisabled = isThumbDisabled || isSliderDisabled;\n\n  const focusInput = useCallback(() => {\n    if (inputObjRef.current) {\n      inputObjRef.current.focus({preventScroll: true});\n    }\n  }, [inputObjRef]);\n\n  // we will focus the native range input when slider is clicked or thumb is\n  // focused in some other way, and let browser handle keyboard interactions\n  const isFocused = focusedThumb === index;\n  useEffect(() => {\n    if (isFocused) {\n      focusInput();\n    }\n  }, [isFocused, focusInput]);\n\n  const currentPointer = useRef<number | undefined>(undefined);\n  const handlePointerUp = (e: PointerEvent) => {\n    if (e.pointerId === currentPointer.current) {\n      focusInput();\n      updateDraggedThumbs(index, false);\n      removeGlobalListener(window, 'pointerup', handlePointerUp, false);\n    }\n  };\n\n  const className = clsx(\n    'outline-none rounded-full top-1/2 -translate-y-1/2 -translate-x-1/2 absolute inset-0 transition-button duration-200',\n    thumbSize,\n    !isDisabled && 'shadow-md',\n    thumbColor({fillColor, isDisabled, isDragging: isDragging}),\n    // show thumb on hover and while dragging, otherwise \"blur\" event will fire on thumb and dragging will stop\n    !showThumbOnHoverOnly ||\n      (showThumbOnHoverOnly && isDragging) ||\n      isPointerOver\n      ? 'visible'\n      : 'invisible',\n  );\n\n  return (\n    <div\n      role=\"presentation\"\n      className={className}\n      style={{\n        left: `${Math.max(getThumbPercent(index) * 100, 0)}%`,\n      }}\n      onPointerDown={e => {\n        if (e.button !== 0 || e.altKey || e.ctrlKey || e.metaKey) {\n          return;\n        }\n        focusInput();\n        currentPointer.current = e.pointerId;\n        updateDraggedThumbs(index, true);\n\n        addGlobalListener(window, 'pointerup', handlePointerUp, false);\n      }}\n    >\n      <input\n        id={thumbIds[index]}\n        onKeyDown={createEventHandler(() => {\n          updateDraggedThumbs(index, true);\n        })}\n        onKeyUp={createEventHandler(() => {\n          // make sure \"onChangeEnd\" is fired on keyboard navigation\n          updateDraggedThumbs(index, false);\n        })}\n        ref={inputObjRef}\n        tabIndex={!isDisabled ? 0 : undefined}\n        min={getThumbMinValue(index)}\n        max={getThumbMaxValue(index)}\n        step={step}\n        value={value}\n        disabled={isDisabled}\n        aria-label={ariaLabel}\n        aria-labelledby={labelId}\n        aria-orientation=\"horizontal\"\n        aria-valuetext={getThumbValueLabel(index)}\n        onFocus={() => {\n          setFocusedThumb(index);\n        }}\n        onBlur={e => {\n          setFocusedThumb(undefined);\n          updateDraggedThumbs(index, false);\n          onBlur?.(e);\n        }}\n        onChange={e => {\n          setThumbValue(index, parseFloat(e.target.value));\n        }}\n        type=\"range\"\n        className=\"sr-only\"\n      />\n    </div>\n  );\n}\n\ninterface SliderThumbColorProps {\n  isDisabled?: boolean;\n  isDragging: boolean;\n  fillColor?: BaseSliderProps['fillColor'];\n}\n\nfunction thumbColor({\n  isDisabled,\n  isDragging,\n  fillColor,\n}: SliderThumbColorProps): string {\n  if (isDisabled) {\n    return 'bg-slider-disabled cursor-default';\n  }\n\n  if (fillColor && fillColor !== 'primary') {\n    return fillColor;\n  }\n\n  return clsx(\n    'hover:bg-primary-dark',\n    isDragging ? 'bg-primary-dark' : 'bg-primary',\n  );\n}\n","import {BaseSlider} from './base-slider';\nimport {useSlider, UseSliderProps} from './use-slider';\nimport React, {Ref} from 'react';\nimport {SliderThumb} from './slider-thumb';\nimport {useController} from 'react-hook-form';\nimport {mergeProps} from '@react-aria/utils';\n\ninterface SliderProps extends UseSliderProps<number> {\n  inputRef?: Ref<HTMLInputElement>;\n  onBlur?: React.FocusEventHandler;\n}\nexport function Slider({inputRef, onBlur, ...props}: SliderProps) {\n  const {onChange, onChangeEnd, value, defaultValue, ...otherProps} = props;\n\n  const baseProps: UseSliderProps = {\n    ...otherProps,\n    // Normalize `value: number[]` to `value: number`\n    value: value != null ? [value] : undefined,\n    defaultValue: defaultValue != null ? [defaultValue] : undefined,\n    onChange: (v: number[]): void => {\n      onChange?.(v[0]);\n    },\n    onChangeEnd: (v: number[]): void => {\n      onChangeEnd?.(v[0]);\n    },\n  };\n\n  const slider = useSlider(baseProps);\n\n  return (\n    <BaseSlider {...baseProps} slider={slider}>\n      <SliderThumb\n        fillColor={props.fillColor}\n        index={0}\n        slider={slider}\n        inputRef={inputRef}\n        onBlur={onBlur}\n      />\n    </BaseSlider>\n  );\n}\n\nexport interface FormSliderProps extends SliderProps {\n  name: string;\n}\n\nexport function FormSlider({name, ...props}: FormSliderProps) {\n  const {\n    field: {onChange, onBlur, value = '', ref},\n  } = useController({\n    name,\n  });\n\n  const formProps: SliderProps = {\n    onChange,\n    onBlur,\n    value: value || '', // avoid issues with \"null\" value when setting form defaults from backend model\n  };\n\n  return <Slider inputRef={ref} {...mergeProps(formProps, props)} />;\n}\n","import {LandingPageContent} from '@app/landing/landing-page-content';\nimport {useFormContext} from 'react-hook-form';\nimport {\n  AppearanceEditorValues,\n  appearanceState,\n  useAppearanceStore,\n} from '@common/admin/appearance/appearance-store';\nimport {Fragment, ReactNode} from 'react';\nimport {FormTextField} from '@ui/forms/input-field/text-field/text-field';\nimport {Trans} from '@ui/i18n/trans';\nimport {FormSlider} from '@ui/forms/slider/slider';\nimport {DialogTrigger} from '@ui/overlays/dialog/dialog-trigger';\nimport {AppearanceButton} from '@common/admin/appearance/appearance-button';\nimport {ColorIcon} from '@common/admin/appearance/sections/themes/color-icon';\nimport {Link} from 'react-router';\nimport {FormImageSelector} from '@common/uploads/components/image-selector';\nimport {ColorPickerDialog} from '@ui/color-picker/color-picker-dialog';\n\nexport function LandingPageSectionGeneral() {\n  return (\n    <Fragment>\n      <HeaderSection />\n      <div className=\"my-24 border-y py-24\">\n        <AppearanceButton\n          to=\"action-buttons\"\n          elementType={Link}\n          className=\"mb-20\"\n        >\n          <Trans message=\"Action buttons\" />\n        </AppearanceButton>\n        <AppearanceButton to=\"primary-features\" elementType={Link}>\n          <Trans message=\"Primary features\" />\n        </AppearanceButton>\n        <AppearanceButton to=\"secondary-features\" elementType={Link}>\n          <Trans message=\"Secondary features\" />\n        </AppearanceButton>\n      </div>\n      <FooterSection />\n    </Fragment>\n  );\n}\n\nfunction HeaderSection() {\n  const defaultImage = useAppearanceStore(\n    s =>\n      (s.defaults?.settings.homepage.appearance as LandingPageContent)\n        ?.headerImage,\n  );\n\n  return (\n    <>\n      <FormTextField\n        label={<Trans message=\"Header title\" />}\n        className=\"mb-20\"\n        name=\"settings.homepage.appearance.headerTitle\"\n        onFocus={() => {\n          appearanceState().preview.setHighlight('[data-testid=\"headerTitle\"]');\n        }}\n      />\n      <FormTextField\n        label={<Trans message=\"Header subtitle\" />}\n        className=\"mb-30\"\n        inputElementType=\"textarea\"\n        rows={4}\n        name=\"settings.homepage.appearance.headerSubtitle\"\n        onFocus={() => {\n          appearanceState().preview.setHighlight(\n            '[data-testid=\"headerSubtitle\"]',\n          );\n        }}\n      />\n      <FormImageSelector\n        name=\"settings.homepage.appearance.headerImage\"\n        className=\"mb-30\"\n        label={<Trans message=\"Header image\" />}\n        defaultValue={defaultImage}\n        diskPrefix=\"homepage\"\n      />\n      <FormSlider\n        name=\"settings.homepage.appearance.headerImageOpacity\"\n        label={<Trans message=\"Header image opacity\" />}\n        minValue={0}\n        step={0.1}\n        maxValue={1}\n        formatOptions={{style: 'percent'}}\n      />\n      <div className=\"mb-20 text-xs text-muted\">\n        <Trans message=\"In order for overlay colors to appear, header image opacity will need to be less then 100%\" />\n      </div>\n      <ColorPickerTrigger\n        formKey=\"settings.homepage.appearance.headerOverlayColor1\"\n        label={<Trans message=\"Header overlay color 1\" />}\n      />\n      <ColorPickerTrigger\n        formKey=\"settings.homepage.appearance.headerOverlayColor2\"\n        label={<Trans message=\"Header overlay color 2\" />}\n      />\n    </>\n  );\n}\n\nfunction FooterSection() {\n  const defaultImage = useAppearanceStore(\n    s =>\n      (s.defaults?.settings.homepage.appearance as LandingPageContent)\n        ?.footerImage,\n  );\n  return (\n    <Fragment>\n      <FormTextField\n        label={<Trans message=\"Footer title\" />}\n        className=\"mb-20\"\n        name=\"settings.homepage.appearance.footerTitle\"\n        onFocus={() => {\n          appearanceState().preview.setHighlight('[data-testid=\"footerTitle\"]');\n        }}\n      />\n      <FormTextField\n        label={<Trans message=\"Footer subtitle\" />}\n        className=\"mb-20\"\n        name=\"settings.homepage.appearance.footerSubtitle\"\n        onFocus={() => {\n          appearanceState().preview.setHighlight(\n            '[data-testid=\"footerSubtitle\"]',\n          );\n        }}\n      />\n      <FormImageSelector\n        name=\"settings.homepage.appearance.footerImage\"\n        className=\"mb-30\"\n        label={<Trans message=\"Footer background image\" />}\n        defaultValue={defaultImage}\n        diskPrefix=\"homepage\"\n      />\n    </Fragment>\n  );\n}\n\ninterface ColorPickerTriggerProps {\n  formKey: string;\n  label: ReactNode;\n}\nfunction ColorPickerTrigger({label, formKey}: ColorPickerTriggerProps) {\n  const key = formKey as 'settings.homepage.appearance.headerOverlayColor1';\n  const {watch, setValue} = useFormContext<AppearanceEditorValues>();\n\n  const formValue = watch(key);\n\n  const setColor = (value: string | null) => {\n    setValue(formKey as any, value, {\n      shouldDirty: true,\n    });\n  };\n\n  return (\n    <DialogTrigger\n      type=\"popover\"\n      value={formValue}\n      alwaysReturnCurrentValueOnClose\n      onValueChange={newValue => setColor(newValue)}\n      onClose={value => setColor(value)}\n    >\n      <AppearanceButton\n        className=\"capitalize\"\n        startIcon={\n          <ColorIcon\n            viewBox=\"0 0 48 48\"\n            className=\"icon-lg\"\n            style={{fill: formValue}}\n          />\n        }\n      >\n        {label}\n      </AppearanceButton>\n      <ColorPickerDialog />\n    </DialogTrigger>\n  );\n}\n","import {MenuItemForm} from '@common/admin/menus/menu-item-form';\nimport {Accordion, AccordionItem} from '@ui/accordion/accordion';\nimport {Trans} from '@ui/i18n/trans';\nimport {appearanceState} from '@common/admin/appearance/appearance-store';\nimport {useState} from 'react';\n\nexport function LandingPageSectionActionButtons() {\n  const [expandedValues, setExpandedValues] = useState(['cta1']);\n  return (\n    <Accordion\n      variant=\"outline\"\n      expandedValues={expandedValues}\n      onExpandedChange={values => {\n        setExpandedValues(values as string[]);\n        if (values.length) {\n          appearanceState().preview.setHighlight(\n            `[data-testid=\"${values[0]}\"]`,\n          );\n        }\n      }}\n    >\n      <AccordionItem value=\"cta1\" label={<Trans message=\"Header button 1\" />}>\n        <MenuItemForm formPathPrefix=\"settings.homepage.appearance.actions.cta1\" />\n      </AccordionItem>\n      <AccordionItem value=\"ct2\" label={<Trans message=\"Header button 2\" />}>\n        <MenuItemForm formPathPrefix=\"settings.homepage.appearance.actions.cta2\" />\n      </AccordionItem>\n      <AccordionItem value=\"cta3\" label={<Trans message=\"Footer button\" />}>\n        <MenuItemForm formPathPrefix=\"settings.homepage.appearance.actions.cta3\" />\n      </AccordionItem>\n    </Accordion>\n  );\n}\n","import {Trans} from '@ui/i18n/trans';\nimport {\n  appearanceState,\n  useAppearanceStore,\n} from '@common/admin/appearance/appearance-store';\nimport {useFieldArray} from 'react-hook-form';\nimport {FormTextField} from '@ui/forms/input-field/text-field/text-field';\nimport {LandingPageContent} from '@app/landing/landing-page-content';\nimport {Button} from '@ui/buttons/button';\nimport {AddIcon} from '@ui/icons/material/Add';\nimport {useState} from 'react';\nimport {Accordion, AccordionItem} from '@ui/accordion/accordion';\nimport {FormImageSelector} from '@common/uploads/components/image-selector';\n\nexport function LandingPageSectionPrimaryFeatures() {\n  const {fields, remove, append} = useFieldArray({\n    name: 'settings.homepage.appearance.primaryFeatures',\n  });\n  const [expandedValues, setExpandedValues] = useState([0]);\n  return (\n    <div>\n      <Accordion\n        variant=\"outline\"\n        expandedValues={expandedValues}\n        onExpandedChange={values => {\n          setExpandedValues(values as number[]);\n          if (values.length) {\n            appearanceState().preview.setHighlight(\n              `[data-testid=\"primary-root-${values[0]}\"]`,\n            );\n          }\n        }}\n      >\n        {fields.map((field, index) => {\n          return (\n            <AccordionItem\n              key={field.id}\n              value={index}\n              label={<Trans message={`Primary feature ${index + 1}`} />}\n            >\n              <FeatureForm index={index} />\n              <div className=\"text-right\">\n                <Button\n                  size=\"xs\"\n                  variant=\"outline\"\n                  color=\"danger\"\n                  onClick={() => {\n                    remove(index);\n                  }}\n                >\n                  <Trans message=\"Remove\" />\n                </Button>\n              </div>\n            </AccordionItem>\n          );\n        })}\n      </Accordion>\n      <div className=\"mt-20 text-right\">\n        <Button\n          size=\"xs\"\n          variant=\"outline\"\n          color=\"primary\"\n          startIcon={<AddIcon />}\n          onClick={() => {\n            append({});\n            setExpandedValues([fields.length]);\n          }}\n        >\n          <Trans message=\"Add feature\" />\n        </Button>\n      </div>\n    </div>\n  );\n}\n\ninterface FeatureFormProps {\n  index: number;\n}\nfunction FeatureForm({index}: FeatureFormProps) {\n  const defaultImage = useAppearanceStore(\n    s =>\n      (s.defaults?.settings.homepage.appearance as LandingPageContent)\n        ?.primaryFeatures[index]?.image,\n  );\n\n  return (\n    <>\n      <FormImageSelector\n        name={`settings.homepage.appearance.primaryFeatures.${index}.image`}\n        className=\"mb-30\"\n        label={<Trans message=\"Image\" />}\n        defaultValue={defaultImage}\n        diskPrefix=\"homepage\"\n      />\n      <FormTextField\n        name={`settings.homepage.appearance.primaryFeatures.${index}.title`}\n        label={<Trans message=\"Title\" />}\n        className=\"mb-20\"\n        onFocus={() => {\n          appearanceState().preview.setHighlight(\n            `[data-testid=\"primary-title-${index}\"]`,\n          );\n        }}\n      />\n      <FormTextField\n        name={`settings.homepage.appearance.primaryFeatures.${index}.subtitle`}\n        label={<Trans message=\"Subtitle\" />}\n        className=\"mb-20\"\n        inputElementType=\"textarea\"\n        rows={4}\n        onFocus={() => {\n          appearanceState().preview.setHighlight(\n            `[data-testid=\"primary-subtitle-${index}\"]`,\n          );\n        }}\n      />\n    </>\n  );\n}\n","import {Trans} from '@ui/i18n/trans';\nimport {appearanceState} from '@common/admin/appearance/appearance-store';\nimport {useFieldArray} from 'react-hook-form';\nimport {LandingPageContent} from '@app/landing/landing-page-content';\nimport {Button} from '@ui/buttons/button';\nimport {AddIcon} from '@ui/icons/material/Add';\nimport {useState} from 'react';\nimport {FormTextField} from '@ui/forms/input-field/text-field/text-field';\nimport {Accordion, AccordionItem} from '@ui/accordion/accordion';\nimport {FormImageSelector} from '@common/uploads/components/image-selector';\n\nexport function LandingPageSecondaryFeatures() {\n  const {fields, remove, append} = useFieldArray({\n    name: 'settings.homepage.appearance.secondaryFeatures',\n  });\n  const [expandedValues, setExpandedValues] = useState([0]);\n  return (\n    <div>\n      <Accordion\n        variant=\"outline\"\n        expandedValues={expandedValues}\n        onExpandedChange={values => {\n          setExpandedValues(values as number[]);\n          if (values.length) {\n            appearanceState().preview.setHighlight(\n              `[data-testid=\"secondary-root-${values[0]}\"]`,\n            );\n          }\n        }}\n      >\n        {fields.map((field, index) => {\n          return (\n            <AccordionItem\n              key={field.id}\n              value={index}\n              label={<Trans message={`Secondary feature ${index + 1}`} />}\n            >\n              <FeatureForm index={index} />\n              <div className=\"text-right\">\n                <Button\n                  size=\"xs\"\n                  variant=\"outline\"\n                  color=\"danger\"\n                  onClick={() => {\n                    remove(index);\n                  }}\n                >\n                  <Trans message=\"Remove\" />\n                </Button>\n              </div>\n            </AccordionItem>\n          );\n        })}\n      </Accordion>\n      <div className=\"mt-20 text-right\">\n        <Button\n          size=\"xs\"\n          variant=\"outline\"\n          color=\"primary\"\n          startIcon={<AddIcon />}\n          onClick={() => {\n            append({});\n            setExpandedValues([fields.length]);\n          }}\n        >\n          <Trans message=\"Add feature\" />\n        </Button>\n      </div>\n    </div>\n  );\n}\n\ninterface FeatureFormProps {\n  index: number;\n}\nfunction FeatureForm({index}: FeatureFormProps) {\n  return (\n    <>\n      <FormImageSelector\n        name={`settings.homepage.appearance.secondaryFeatures.${index}.image`}\n        className=\"mb-30\"\n        label={<Trans message=\"Image\" />}\n        defaultValue={getDefaultImage(index)}\n        diskPrefix=\"homepage\"\n      />\n      <FormTextField\n        name={`settings.homepage.appearance.secondaryFeatures.${index}.title`}\n        label={<Trans message=\"Title\" />}\n        className=\"mb-20\"\n        onFocus={() => {\n          appearanceState().preview.setHighlight(\n            `[data-testid=\"secondary-title-${index}\"]`,\n          );\n        }}\n      />\n      <FormTextField\n        name={`settings.homepage.appearance.secondaryFeatures.${index}.subtitle`}\n        label={<Trans message=\"Subtitle\" />}\n        className=\"mb-20\"\n        inputElementType=\"textarea\"\n        rows={4}\n        onFocus={() => {\n          appearanceState().preview.setHighlight(\n            `[data-testid=\"secondary-subtitle-${index}\"]`,\n          );\n        }}\n      />\n      <FormTextField\n        name={`settings.homepage.appearance.secondaryFeatures.${index}.description`}\n        label={<Trans message=\"Description\" />}\n        className=\"mb-20\"\n        inputElementType=\"textarea\"\n        rows={4}\n        onFocus={() => {\n          appearanceState().preview.setHighlight(\n            `[data-testid=\"secondary-description-${index}\"]`,\n          );\n        }}\n      />\n    </>\n  );\n}\n\nfunction getDefaultImage(index: number): string | undefined {\n  return (\n    appearanceState().defaults?.settings.homepage\n      .appearance as LandingPageContent\n  ).secondaryFeatures[index]?.image;\n}\n"],"file":"assets/app-admin-routes.lazy-19fb2afc.js"}