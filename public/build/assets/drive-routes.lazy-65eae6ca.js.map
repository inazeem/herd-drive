{"version":3,"file":"drive-routes.lazy-65eae6ca.js","sources":["../../../node_modules/@tanstack/query-core/build/modern/infiniteQueryObserver.js","../../../node_modules/@tanstack/react-query/build/modern/useInfiniteQuery.js","../../../resources/client/drive/drive-query-keys.ts","../../../resources/client/drive/layout/sidebar/storage-summary/storage-summary.ts","../../../common/foundation/resources/client/ui/library/progress/meter.tsx","../../../resources/client/drive/layout/sidebar/storage-summary/storage-meter.tsx","../../../common/foundation/resources/client/workspace/requests/create-workspace.ts","../../../common/foundation/resources/client/workspace/new-workspace-dialog.tsx","../../../common/foundation/resources/client/workspace/requests/workspace-with-members.ts","../../../common/foundation/resources/client/workspace/requests/invite-members.ts","../../../common/foundation/resources/client/workspace/requests/resend-invite.ts","../../../common/foundation/resources/client/workspace/requests/change-role.ts","../../../common/foundation/resources/client/workspace/requests/remove-member.ts","../../../common/foundation/resources/client/workspace/leave-workspace-confirmation.tsx","../../../common/foundation/resources/client/ui/library/utils/string/is-email.ts","../../../common/foundation/resources/client/workspace/workspace-members-dialog.tsx","../../../common/foundation/resources/client/workspace/requests/update-workspace.ts","../../../common/foundation/resources/client/workspace/rename-workspace-dialog.tsx","../../../common/foundation/resources/client/workspace/requests/delete-workspace.ts","../../../common/foundation/resources/client/billing/upgrade/policy-fail-message.tsx","../../../common/foundation/resources/client/workspace/workspace-selector.tsx","../../../resources/client/drive/drive-page/add-files.svg","../../../resources/client/drive/drive-page/time-management.svg","../../../resources/client/drive/drive-page/file-searching.svg","../../../resources/client/drive/drive-page/throw-away.svg","../../../resources/client/drive/drive-page/loving-it.svg","../../../resources/client/drive/shareable-link/shareable-link-page/folder-preview/share.svg","../../../resources/client/drive/drive-page/drive-page.tsx","../../../resources/client/drive/menu-positions.ts","../../../node_modules/performant-array-to-tree/build/arrayToTree.min.js","../../../resources/client/drive/files/queries/use-folders.ts","../../../resources/client/drive/drive-store.ts","../../../resources/client/drive/files/queries/use-move-entries.ts","../../../resources/client/drive/uploading/use-drive-upload-queue.ts","../../../resources/client/drive/files/utils/can-move-entries-into.ts","../../../resources/client/drive/files/use-folder-drop-action.ts","../../../resources/client/drive/layout/sidebar/folder-tree-drag-id.ts","../../../resources/client/drive/layout/sidebar/use-sidebar-tree-drop-target.ts","../../../common/foundation/resources/client/ui/library/tree/tree-context.tsx","../../../common/foundation/resources/client/ui/library/tree/render-tree.ts","../../../common/foundation/resources/client/ui/library/tree/tree.tsx","../../../common/foundation/resources/client/ui/library/tree/tree-label.tsx","../../../common/foundation/resources/client/ui/library/tree/tree-item.tsx","../../../resources/client/drive/layout/sidebar/folder-tree.tsx","../../../resources/client/drive/files/queries/use-delete-entries.ts","../../../resources/client/drive/layout/sidebar/sidebar-menu.tsx","../../../resources/client/drive/layout/create-new-button.tsx","../../../resources/client/drive/layout/sidebar/sidebar.tsx","../../../resources/client/drive/files/queries/use-paginated-entries.ts","../../../common/foundation/resources/client/ui/library/interactions/utils/restrict-resizable-within-boundary.ts","../../../common/foundation/resources/client/ui/library/interactions/dnd/mouse-selection/use-mouse-selectable.ts","../../../common/foundation/resources/client/ui/library/interactions/utils/rects-intersect.ts","../../../common/foundation/resources/client/ui/library/interactions/dnd/mouse-selection/use-mouse-selection-box.ts","../../../resources/client/drive/files/queries/use-entries.ts","../../../resources/client/drive/files/use-selected-entries.ts","../../../common/foundation/resources/client/ui/library/utils/hooks/is-touch-device.ts","../../../resources/client/drive/file-view/use-file-view-dnd.ts","../../../resources/client/drive/file-view/file-table/file-table-row.tsx","../../../resources/client/drive/file-view/use-view-item-action-handler.ts","../../../resources/client/drive/shareable-link/queries/create-shareable-link.ts","../../../resources/client/drive/files/queries/use-add-star-to-entries.ts","../../../resources/client/drive/files/queries/use-remove-star-from-entries.ts","../../../resources/client/drive/files/queries/use-duplicate-entries.ts","../../../resources/client/drive/share-dialog/queries/use-unshare-entries.ts","../../../resources/client/drive/files/queries/use-restore-entries.ts","../../../resources/client/drive/entry-actions/use-entry-actions.ts","../../../resources/client/drive/entry-actions/use-drive-page-actions.ts","../../../resources/client/drive/entry-actions/entry-action-menu-trigger.tsx","../../../resources/client/drive/file-view/file-table/file-table-columns.tsx","../../../resources/client/drive/file-view/file-table/file-table.tsx","../../../resources/client/drive/file-view/file-grid/base-file-grid-item.tsx","../../../resources/client/drive/file-view/file-grid/file-grid-item.tsx","../../../resources/client/drive/file-view/file-grid/file-grid.tsx","../../../resources/client/drive/files/queries/use-folder-path.ts","../../../resources/client/drive/page-breadcrumbs.tsx","../../../common/foundation/resources/client/ui/infinite-scroll/infinite-scroll-sentinel.tsx","../../../resources/client/drive/drop-target-mask.tsx","../../../resources/client/drive/layout/sorting/available-sorts.ts","../../../resources/client/drive/layout/sorting/entries-sort-button.tsx","../../../resources/client/drive/layout/sorting/drive-sort-button.tsx","../../../resources/client/drive/entry-actions/entry-action-list.tsx","../../../resources/client/drive/file-view/toolbar.tsx","../../../resources/client/drive/file-view/file-view.tsx","../../../resources/client/drive/uploading/upload-queue-item.tsx","../../../resources/client/drive/uploading/upload-queue.tsx","../../../resources/client/drive/details-sidebar/detailed-examination.svg","../../../resources/client/drive/details-sidebar/details-sidebar-header.tsx","../../../resources/client/drive/details-sidebar/details-sidebar-section-header.tsx","../../../common/foundation/resources/client/tags/use-taggable-tags.ts","../../../common/foundation/resources/client/tags/use-detach-tag-from-taggables.ts","../../../common/foundation/resources/client/tags/use-tags.ts","../../../common/foundation/resources/client/tags/use-attach-tag-to-taggables.ts","../../../common/foundation/resources/client/tags/manage-tags-dialog.tsx","../../../resources/client/drive/details-sidebar/details-sidebar-tags.tsx","../../../resources/client/drive/details-sidebar/details-sidebar-properties.tsx","../../../resources/client/drive/details-sidebar/details-sidebar.tsx","../../../resources/client/drive/files/queries/use-rename-entry.ts","../../../resources/client/drive/files/dialogs/rename-entry-dialog.tsx","../../../resources/client/drive/files/queries/create-folder.ts","../../../resources/client/drive/files/dialogs/new-folder-dialog.tsx","../../../resources/client/drive/files/dialogs/entry-preview-dialog.tsx","../../../resources/client/drive/share-dialog/queries/use-share-entry.ts","../../../resources/client/drive/files/drive-entry.ts","../../../resources/client/drive/share-dialog/permission-selector.tsx","../../../resources/client/drive/share-dialog/queries/use-change-permission.ts","../../../resources/client/drive/share-dialog/member-list.tsx","../../../resources/client/drive/share-dialog/share-panel.tsx","../../../resources/client/drive/shareable-link/queries/use-entry-shareable-link.ts","../../../resources/client/drive/shareable-link/queries/use-delete-shareable-link.ts","../../../common/foundation/resources/client/ui/library/utils/string/random-string.ts","../../../resources/client/drive/share-dialog/link-panel/shareable-link-panel.tsx","../../../resources/client/drive/shareable-link/queries/use-update-shareable-link.ts","../../../resources/client/drive/share-dialog/link-panel/link-settings-dialog.tsx","../../../resources/client/drive/share-dialog/share-dialog.tsx","../../../resources/client/drive/files/dialogs/move-entries-dialog/use-move-entries-dialog-folder-search.ts","../../../resources/client/drive/files/dialogs/move-entries-dialog/move-entries-dialog-search.tsx","../../../resources/client/drive/files/dialogs/move-entries-dialog/move-entries-dialog-breadcrumbs.tsx","../../../resources/client/drive/files/dialogs/move-entries-dialog/my-files.svg","../../../resources/client/drive/files/dialogs/move-entries-dialog/use-move-entries-dialog-folders.ts","../../../resources/client/drive/files/dialogs/move-entries-dialog/move-entries-dialog-folder-list.tsx","../../../resources/client/drive/files/dialogs/move-entries-dialog/move-entries-dialog.tsx","../../../resources/client/drive/files/dialogs/delete-entries-forever-dialog.tsx","../../../resources/client/drive/files/dialogs/block-trash-folder-view-dialog.tsx","../../../resources/client/drive/files/dialogs/drive-dialogs-container.tsx","../../../resources/client/drive/search/navbar-search.tsx","../../../common/foundation/resources/client/ui/library/interactions/dnd/use-drag-monitor.ts","../../../resources/client/drive/file-view/entry-drag-preview.tsx","../../../common/foundation/resources/client/ui/dashboard-layout/dashboard-content-header.tsx","../../../resources/client/drive/layout/drive-content-header.tsx","../../../resources/client/drive/layout/drive-layout.tsx","../../../resources/client/drive/shareable-link/shareable-link-page/link-page-store.ts","../../../resources/client/drive/shareable-link/queries/use-shareable-link-page.ts","../../../resources/client/drive/shareable-link/shareable-link-page/queries/check-link-password.ts","../../../resources/client/drive/shareable-link/shareable-link-page/queries/import-into-own-drive.ts","../../../resources/client/drive/shareable-link/shareable-link-page/shareable-link-page-action-buttons.tsx","../../../resources/client/drive/shareable-link/shareable-link-page/shareable-link-navbar.tsx","../../../resources/client/drive/shareable-link/shareable-link-page/password-page.tsx","../../../resources/client/drive/shareable-link/shareable-link-page/folder-preview/folder-preview-file-grid.tsx","../../../resources/client/drive/shareable-link/shareable-link-page/folder-preview/folder-preview-file-table.tsx","../../../resources/client/drive/shareable-link/shareable-link-page/folder-preview/use-navigate-to-subfolder.tsx","../../../resources/client/drive/shareable-link/shareable-link-page/folder-preview/folder-preview-file-view.tsx","../../../resources/client/drive/shareable-link/shareable-link-page/folder-preview/folder-preview-breadcrumb.tsx","../../../resources/client/drive/shareable-link/shareable-link-page/folder-preview/folder-preview-header.tsx","../../../resources/client/drive/shareable-link/shareable-link-page/folder-preview/folder-preview.tsx","../../../resources/client/drive/shareable-link/shareable-link-page/shareable-link-page-file-preview.tsx","../../../resources/client/drive/shareable-link/shareable-link-page/shareable-link-page.tsx"],"sourcesContent":["// src/infiniteQueryObserver.ts\nimport { QueryObserver } from \"./queryObserver.js\";\nimport {\n  hasNextPage,\n  hasPreviousPage,\n  infiniteQueryBehavior\n} from \"./infiniteQueryBehavior.js\";\nvar InfiniteQueryObserver = class extends QueryObserver {\n  // eslint-disable-next-line @typescript-eslint/no-useless-constructor\n  constructor(client, options) {\n    super(client, options);\n  }\n  bindMethods() {\n    super.bindMethods();\n    this.fetchNextPage = this.fetchNextPage.bind(this);\n    this.fetchPreviousPage = this.fetchPreviousPage.bind(this);\n  }\n  setOptions(options, notifyOptions) {\n    super.setOptions(\n      {\n        ...options,\n        behavior: infiniteQueryBehavior()\n      },\n      notifyOptions\n    );\n  }\n  getOptimisticResult(options) {\n    options.behavior = infiniteQueryBehavior();\n    return super.getOptimisticResult(options);\n  }\n  fetchNextPage(options) {\n    return this.fetch({\n      ...options,\n      meta: {\n        fetchMore: { direction: \"forward\" }\n      }\n    });\n  }\n  fetchPreviousPage(options) {\n    return this.fetch({\n      ...options,\n      meta: {\n        fetchMore: { direction: \"backward\" }\n      }\n    });\n  }\n  createResult(query, options) {\n    const { state } = query;\n    const result = super.createResult(query, options);\n    const { isFetching, isRefetching } = result;\n    const isFetchingNextPage = isFetching && state.fetchMeta?.fetchMore?.direction === \"forward\";\n    const isFetchingPreviousPage = isFetching && state.fetchMeta?.fetchMore?.direction === \"backward\";\n    return {\n      ...result,\n      fetchNextPage: this.fetchNextPage,\n      fetchPreviousPage: this.fetchPreviousPage,\n      hasNextPage: hasNextPage(options, state.data),\n      hasPreviousPage: hasPreviousPage(options, state.data),\n      isFetchingNextPage,\n      isFetchingPreviousPage,\n      isRefetching: isRefetching && !isFetchingNextPage && !isFetchingPreviousPage\n    };\n  }\n};\nexport {\n  InfiniteQueryObserver\n};\n//# sourceMappingURL=infiniteQueryObserver.js.map","\"use client\";\n\n// src/useInfiniteQuery.ts\nimport { InfiniteQueryObserver } from \"@tanstack/query-core\";\nimport { useBaseQuery } from \"./useBaseQuery.js\";\nfunction useInfiniteQuery(options, queryClient) {\n  return useBaseQuery(\n    options,\n    // eslint-disable-next-line @typescript-eslint/no-unnecessary-type-assertion\n    InfiniteQueryObserver,\n    queryClient\n  );\n}\nexport {\n  useInfiniteQuery\n};\n//# sourceMappingURL=useInfiniteQuery.js.map","import type {DriveApiIndexParams} from './files/queries/use-paginated-entries';\nimport type {UserFoldersApiParams} from './files/queries/use-folders';\nimport {queryClient} from '@common/http/query-client';\nimport {Key} from 'react';\n\nexport const DriveQueryKeys = {\n  fetchEntries: (params?: DriveApiIndexParams) => {\n    // Always start with base key\n    const key: (string | number | DriveApiIndexParams)[] = ['drive-entries'];\n    \n    // If we have a userId, make it part of the base key to ensure unique caching per user\n    if (params?.userId != null) {\n      key.push('user');\n      key.push(params.userId);\n    }\n    \n    // Add remaining params without userId and workspaceId\n    if (params) {\n      const {userId: _, workspaceId: __, ...cleanParams} = params;\n      key.push(cleanParams);\n    }\n    \n    return key;\n  },\n  fetchUserFolders(params?: UserFoldersApiParams) {\n    const key: (string | UserFoldersApiParams)[] = ['user-folders'];\n    if (params) {\n      key.push(params);\n    }\n    return key;\n  },\n  fetchShareableLink: (params?: {hash?: string; sort?: string}) => {\n    const key: (string | object)[] = ['shareable-link'];\n    if (params) {\n      key.push(params);\n    }\n    return key;\n  },\n  fetchFolderPath(\n    hash?: string,\n    params?: Record<string, string | number | null>,\n  ) {\n    const key: (string | any)[] = ['folder-path'];\n    if (hash) {\n      key.push(hash);\n    }\n    if (params) {\n      key.push(params);\n    }\n    return key;\n  },\n  fetchEntryShareableLink: (entryId: number) => {\n    return ['file-entries', entryId, 'shareable-link'];\n  },\n  fetchFileEntry: (id?: number) => {\n    const key: Key[] = ['drive/file-entries/model'];\n    if (id) key.push(id);\n    return key;\n  },\n  fetchStorageSummary: ['storage-summary'],\n};\n\nexport function invalidateEntryQueries() {\n  return Promise.all([\n    queryClient.invalidateQueries({queryKey: DriveQueryKeys.fetchEntries()}),\n    queryClient.invalidateQueries({queryKey: DriveQueryKeys.fetchFolderPath()}),\n    queryClient.invalidateQueries({\n      queryKey: DriveQueryKeys.fetchUserFolders(),\n    }),\n    // fetching model for single file entry in \"useFileEntry\"\n    queryClient.invalidateQueries({queryKey: DriveQueryKeys.fetchFileEntry()}),\n  ]);\n}\n","import {useQuery} from '@tanstack/react-query';\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\nimport {DriveQueryKeys} from '../../../drive-query-keys';\nimport {apiClient} from '@common/http/query-client';\nimport {prettyBytes} from '@ui/utils/files/pretty-bytes';\n\nexport interface FetchStorageSummaryResponse extends BackendResponse {\n  used: number;\n  available: number;\n}\n\nexport function useStorageSummary() {\n  return useQuery({\n    queryKey: DriveQueryKeys.fetchStorageSummary,\n    queryFn: fetchStorageSummary,\n    select: formatResponse,\n  });\n}\n\nfunction fetchStorageSummary(): Promise<FetchStorageSummaryResponse> {\n  return apiClient.get(`user/space-usage`).then(response => response.data);\n}\n\nfunction formatResponse(response: FetchStorageSummaryResponse) {\n  // null means that user has unlimited space available\n  const percentage =\n    response.available === null\n      ? 0\n      : (response.used * 100) / response.available;\n\n  return {\n    usedFormatted: prettyBytes(response.used, 2),\n    availableFormatted: prettyBytes(response.available, 0),\n    percentage,\n    used: response.used,\n    available: response.available,\n  };\n}\n","import React from 'react';\nimport {\n  ProgressBarBase,\n  ProgressBarBaseProps\n} from '@ui/progress/progress-bar-base';\n\nexport function Meter(props: ProgressBarBaseProps) {\n  return <ProgressBarBase {...props} role=\"meter progressbar\" />;\n}\n","import React from 'react';\nimport {useStorageSummary} from './storage-summary';\nimport {StorageIcon} from '@ui/icons/material/Storage';\nimport {Meter} from '@ui/progress/meter';\nimport {Trans} from '@ui/i18n/trans';\nimport clsx from 'clsx';\n\nexport function StorageMeter() {\n  const {isLoading, data} = useStorageSummary();\n\n  // prevent translation placeholders from showing if summary is not loaded yet\n  const label = (\n    <span className={clsx('whitespace-nowrap', isLoading && 'invisible')}>\n      <Trans\n        message=\":used of :available used\"\n        values={{\n          used: data?.usedFormatted,\n          available: data?.availableFormatted,\n        }}\n      />\n    </span>\n  );\n  return (\n    <div className=\"mt-24 flex items-start gap-16 border-t pl-24 pt-24\">\n      <StorageIcon className=\"-mt-4 icon-md\" />\n      <Meter\n        className=\"max-w-144 flex-auto\"\n        size=\"xs\"\n        value={data?.percentage}\n        label={label}\n        showValueLabel={false}\n        labelPosition=\"bottom\"\n      />\n    </div>\n  );\n}\n","import {useMutation} from '@tanstack/react-query';\nimport {UseFormReturn} from 'react-hook-form';\nimport {BackendResponse} from '../../http/backend-response/backend-response';\nimport {toast} from '@ui/toast/toast';\nimport {apiClient, queryClient} from '../../http/query-client';\nimport {WorkspaceQueryKeys} from './workspace-query-keys';\nimport {Workspace} from '../types/workspace';\nimport {onFormQueryError} from '../../errors/on-form-query-error';\nimport {message} from '@ui/i18n/message';\n\ninterface Response extends BackendResponse {\n  workspace: Workspace;\n}\n\ninterface Props {\n  name: string;\n}\n\nexport function useCreateWorkspace(form: UseFormReturn<Props>) {\n  return useMutation({\n    mutationFn: (props: Props) => createWorkspace(props),\n    onSuccess: () => {\n      toast(message('Created workspace'));\n      queryClient.invalidateQueries({\n        queryKey: WorkspaceQueryKeys.fetchUserWorkspaces,\n      });\n    },\n    onError: r => onFormQueryError(r, form),\n  });\n}\n\nfunction createWorkspace(props: Props): Promise<Response> {\n  return apiClient.post('workspace', props).then(r => r.data);\n}\n","import {useForm} from 'react-hook-form';\nimport {FormTextField} from '@ui/forms/input-field/text-field/text-field';\nimport {Form} from '@ui/forms/form';\nimport {Button} from '@ui/buttons/button';\nimport {useCreateWorkspace} from './requests/create-workspace';\nimport {DialogFooter} from '@ui/overlays/dialog/dialog-footer';\nimport {useDialogContext} from '@ui/overlays/dialog/dialog-context';\nimport {Dialog} from '@ui/overlays/dialog/dialog';\nimport {DialogHeader} from '@ui/overlays/dialog/dialog-header';\nimport {DialogBody} from '@ui/overlays/dialog/dialog-body';\nimport {Trans} from '@ui/i18n/trans';\n\nexport function NewWorkspaceDialog() {\n  const form = useForm<{name: string}>();\n  const {formId, close} = useDialogContext();\n  const createWorkspace = useCreateWorkspace(form);\n\n  return (\n    <Dialog>\n      <DialogHeader>\n        <Trans message=\"Create workspace\" />\n      </DialogHeader>\n      <DialogBody>\n        <Form\n          form={form}\n          id={formId}\n          onSubmit={() => {\n            createWorkspace.mutate(form.getValues(), {\n              onSuccess: response => {\n                close(response.workspace.id);\n              },\n            });\n          }}\n        >\n          <FormTextField\n            name=\"name\"\n            autoFocus\n            label={<Trans message=\"Workspace name\" />}\n            minLength={3}\n            required\n          />\n        </Form>\n      </DialogBody>\n      <DialogFooter>\n        <Button variant=\"text\" onClick={close}>\n          <Trans message=\"Cancel\" />\n        </Button>\n        <Button\n          variant=\"flat\"\n          color=\"primary\"\n          type=\"submit\"\n          form={formId}\n          disabled={createWorkspace.isPending}\n        >\n          <Trans message=\"Create\" />\n        </Button>\n      </DialogFooter>\n    </Dialog>\n  );\n}\n","import {useQuery} from '@tanstack/react-query';\nimport {WorkspaceQueryKeys} from './workspace-query-keys';\nimport {Workspace} from '../types/workspace';\nimport {BackendResponse} from '../../http/backend-response/backend-response';\nimport {apiClient} from '../../http/query-client';\n\nexport interface FetchWorkspaceWithMembersResponse extends BackendResponse {\n  workspace: Workspace;\n}\n\nfunction fetchWorkspaceWithMembers(\n  workspaceId: number,\n): Promise<FetchWorkspaceWithMembersResponse> {\n  return apiClient\n    .get(`workspace/${workspaceId}`)\n    .then(response => response.data);\n}\n\nexport function useWorkspaceWithMembers(workspaceId: number) {\n  return useQuery({\n    queryKey: WorkspaceQueryKeys.workspaceWithMembers(workspaceId),\n    queryFn: () => fetchWorkspaceWithMembers(workspaceId),\n  });\n}\n","import {useMutation} from '@tanstack/react-query';\nimport {apiClient, queryClient} from '../../http/query-client';\nimport {BackendResponse} from '../../http/backend-response/backend-response';\nimport {WorkspaceInvite} from '../types/workspace-invite';\nimport {WorkspaceQueryKeys} from './workspace-query-keys';\nimport {showHttpErrorToast} from '../../http/show-http-error-toast';\n\ninterface Response extends BackendResponse {\n  invites: WorkspaceInvite[];\n}\n\ninterface Props {\n  workspaceId: number;\n  emails: string[];\n  roleId: number;\n}\n\nfunction InviteMembers({workspaceId, ...other}: Props): Promise<Response> {\n  return apiClient\n    .post(`workspace/${workspaceId}/invite`, other)\n    .then(r => r.data);\n}\n\nexport function useInviteMembers() {\n  return useMutation({\n    mutationFn: (props: Props) => InviteMembers(props),\n    onSuccess: (response, props) => {\n      queryClient.invalidateQueries({\n        queryKey: WorkspaceQueryKeys.workspaceWithMembers(props.workspaceId),\n      });\n    },\n    onError: err => showHttpErrorToast(err),\n  });\n}\n","import {useMutation} from '@tanstack/react-query';\nimport {BackendResponse} from '../../http/backend-response/backend-response';\nimport {WorkspaceInvite} from '../types/workspace-invite';\nimport {toast} from '@ui/toast/toast';\nimport {apiClient} from '../../http/query-client';\nimport {showHttpErrorToast} from '../../http/show-http-error-toast';\n\ninterface Response extends BackendResponse {\n  invite: WorkspaceInvite;\n}\n\ninterface Props {\n  workspaceId: number;\n  inviteId: string;\n}\n\nfunction ResendInvite({\n  workspaceId,\n  inviteId,\n  ...other\n}: Props): Promise<Response> {\n  return apiClient\n    .post(`workspace/${workspaceId}/${inviteId}/resend`, other)\n    .then(r => r.data);\n}\n\nexport function useResendInvite() {\n  return useMutation({\n    mutationFn: (props: Props) => ResendInvite(props),\n    onSuccess: () => {\n      toast('Invite sent');\n    },\n    onError: err => showHttpErrorToast(err),\n  });\n}\n","import {useMutation} from '@tanstack/react-query';\nimport {BackendResponse} from '../../http/backend-response/backend-response';\nimport {toast} from '@ui/toast/toast';\nimport {apiClient, queryClient} from '../../http/query-client';\nimport {WorkspaceQueryKeys} from './workspace-query-keys';\nimport {WorkspaceMember} from '../types/workspace-member';\nimport {WorkspaceInvite} from '../types/workspace-invite';\nimport {message} from '@ui/i18n/message';\nimport {showHttpErrorToast} from '../../http/show-http-error-toast';\n\ninterface Response extends BackendResponse {}\n\ninterface Props {\n  workspaceId: number;\n  member: WorkspaceMember | WorkspaceInvite;\n  roleId: number;\n}\n\nfunction ChangeRole({workspaceId, member, ...other}: Props): Promise<Response> {\n  const modelType = member.model_type;\n  const memberId =\n    member.model_type === 'invite' ? member.id : member.member_id;\n  return apiClient\n    .post(\n      `workspace/${workspaceId}/${modelType}/${memberId}/change-role`,\n      other,\n    )\n    .then(r => r.data);\n}\n\nexport function useChangeRole() {\n  return useMutation({\n    mutationFn: (props: Props) => ChangeRole(props),\n    onSuccess: (response, props) => {\n      toast(message('Role changed'));\n      queryClient.invalidateQueries({\n        queryKey: WorkspaceQueryKeys.workspaceWithMembers(props.workspaceId),\n      });\n    },\n    onError: err => showHttpErrorToast(err),\n  });\n}\n","import {useMutation} from '@tanstack/react-query';\nimport {BackendResponse} from '../../http/backend-response/backend-response';\nimport {apiClient, queryClient} from '../../http/query-client';\nimport {WorkspaceQueryKeys} from './workspace-query-keys';\nimport {useAuth} from '../../auth/use-auth';\nimport {useActiveWorkspaceId} from '../active-workspace-id-context';\nimport {PersonalWorkspace} from '../user-workspaces';\nimport {showHttpErrorToast} from '../../http/show-http-error-toast';\n\ninterface Response extends BackendResponse {}\n\ninterface Props {\n  workspaceId: number;\n  memberId: number | string;\n  memberType: 'invite' | 'member';\n}\n\nfunction removeMember({\n  workspaceId,\n  memberId,\n  memberType,\n}: Props): Promise<Response> {\n  const endpoint =\n    memberType === 'invite'\n      ? `workspace/invite/${memberId}`\n      : `workspace/${workspaceId}/member/${memberId}`;\n  return apiClient.delete(endpoint).then(r => r.data);\n}\n\nexport function useRemoveMember() {\n  const {workspaceId, setWorkspaceId} = useActiveWorkspaceId();\n  const {user} = useAuth();\n  return useMutation({\n    mutationFn: (props: Props) => removeMember(props),\n    onSuccess: (response, props) => {\n      queryClient.invalidateQueries({\n        queryKey: WorkspaceQueryKeys.fetchUserWorkspaces,\n      });\n      queryClient.invalidateQueries({\n        queryKey: WorkspaceQueryKeys.workspaceWithMembers(props.workspaceId),\n      });\n\n      // if user left workspace that is currently active, switch to personal workspace\n      if (props.memberId === user?.id && workspaceId === props.workspaceId) {\n        setWorkspaceId(PersonalWorkspace.id);\n      }\n    },\n    onError: err => showHttpErrorToast(err),\n  });\n}\n","import {ConfirmationDialog} from '@ui/overlays/dialog/confirmation-dialog';\nimport {Trans} from '@ui/i18n/trans';\n\ninterface Props {\n  onConfirm?: () => void;\n  isLoading?: boolean;\n}\nexport function LeaveWorkspaceConfirmation({onConfirm, isLoading}: Props) {\n  return (\n    <ConfirmationDialog\n      isDanger\n      title={<Trans message=\"Leave workspace\" />}\n      isLoading={isLoading}\n      onConfirm={onConfirm}\n      body={\n        <div>\n          <Trans message=\"Are you sure you want to leave this workspace?\" />\n          <div className=\"mt-8 font-semibold\">\n            <Trans message=\"All resources you've created in the workspace will be transferred to workspace owner.\" />\n          </div>\n        </div>\n      }\n      confirm={<Trans message=\"Leave\" />}\n    />\n  );\n}\n","const matcher =\n  /^[a-zA-Z0-9.!#$%&'*+\\/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/;\n\nexport function isEmail(string?: string): boolean {\n  if (!string) return false;\n  if (string.length > 320) return false;\n  return matcher.test(string);\n}\n","import {useEffect, useState} from 'react';\nimport {AnimatePresence, m} from 'framer-motion';\nimport {useWorkspaceWithMembers} from './requests/workspace-with-members';\nimport {ProgressCircle} from '@ui/progress/progress-circle';\nimport {Workspace} from './types/workspace';\nimport {GroupIcon} from '@ui/icons/material/Group';\nimport {WorkspaceMember} from './types/workspace-member';\nimport {useAuth} from '../auth/use-auth';\nimport {\n  ChipField,\n  ChipValue,\n} from '@ui/forms/input-field/chip-field/chip-field';\nimport {useValueLists} from '../http/value-lists';\nimport {Button} from '@ui/buttons/button';\nimport {ArrowDropDownIcon} from '@ui/icons/material/ArrowDropDown';\nimport {useInviteMembers} from './requests/invite-members';\nimport {WorkspaceInvite} from './types/workspace-invite';\nimport {ConfirmationDialog} from '@ui/overlays/dialog/confirmation-dialog';\nimport {useResendInvite} from './requests/resend-invite';\nimport {ButtonSize} from '@ui/buttons/button-size';\nimport {useChangeRole} from './requests/change-role';\nimport {IconButton} from '@ui/buttons/icon-button';\nimport {useRemoveMember} from './requests/remove-member';\nimport {CloseIcon} from '@ui/icons/material/Close';\nimport {ExitToAppIcon} from '@ui/icons/material/ExitToApp';\nimport {toast} from '@ui/toast/toast';\nimport {DialogTrigger} from '@ui/overlays/dialog/dialog-trigger';\nimport {Menu, MenuItem, MenuTrigger} from '@ui/menu/menu-trigger';\nimport {useDialogContext} from '@ui/overlays/dialog/dialog-context';\nimport {Dialog} from '@ui/overlays/dialog/dialog';\nimport {DialogHeader} from '@ui/overlays/dialog/dialog-header';\nimport {DialogBody} from '@ui/overlays/dialog/dialog-body';\nimport {Trans} from '@ui/i18n/trans';\nimport {useTrans} from '@ui/i18n/use-trans';\nimport {message} from '@ui/i18n/message';\nimport {LeaveWorkspaceConfirmation} from './leave-workspace-confirmation';\nimport {isEmail} from '@ui/utils/string/is-email';\nimport {Avatar} from '@ui/avatar/avatar';\n\ninterface WorkspaceMembersDialogProps {\n  workspace: Workspace;\n}\nexport function WorkspaceMembersDialog({\n  workspace,\n}: WorkspaceMembersDialogProps) {\n  const {data, isLoading} = useWorkspaceWithMembers(workspace.id);\n  return (\n    <Dialog size=\"lg\">\n      <DialogHeader>\n        <Trans message=\"Manage workspace members\" />\n      </DialogHeader>\n      <DialogBody>\n        {isLoading ? (\n          <div className=\"flex min-h-[238px] items-center justify-center\">\n            <ProgressCircle isIndeterminate aria-label=\"Loading workspace...\" />\n          </div>\n        ) : (\n          <Manager workspace={data!.workspace} />\n        )}\n      </DialogBody>\n    </Dialog>\n  );\n}\n\ninterface ManagerProps {\n  workspace: Workspace;\n}\nfunction Manager({workspace}: ManagerProps) {\n  const {user} = useAuth();\n  const can = usePermissions(workspace);\n  const members: (WorkspaceMember | WorkspaceInvite)[] = [\n    ...(workspace.members || []),\n    ...(workspace.invites || []),\n  ];\n  const shouldHideOtherMembers = !can.update && !can.delete;\n\n  return (\n    <div>\n      {can.invite && <InviteChipField workspace={workspace} />}\n      <div className=\"mb-14 flex items-center gap-10 text-base\">\n        <GroupIcon className=\"icon-sm\" />\n        <Trans\n          message=\"Members of `:workspace`\"\n          values={{workspace: workspace.name}}\n        />\n      </div>\n      <AnimatePresence initial={false}>\n        {members.map(member => {\n          if (shouldHideOtherMembers && member.id !== user?.id) {\n            return null;\n          }\n          return (\n            <MemberListItem\n              key={`${member.model_type}.${member.id}`}\n              workspace={workspace}\n              member={member}\n            />\n          );\n        })}\n        {shouldHideOtherMembers && (\n          <div className=\"text-muted\">\n            <Trans\n              message=\"And [one one other member|:count other members]\"\n              values={{count: members.length}}\n            />\n          </div>\n        )}\n      </AnimatePresence>\n    </div>\n  );\n}\n\ninterface MemberListItemProps {\n  member: WorkspaceMember | WorkspaceInvite;\n  workspace: Workspace;\n}\nfunction MemberListItem({workspace, member}: MemberListItemProps) {\n  return (\n    <m.div\n      initial={{x: '-100%', opacity: 0}}\n      animate={{x: 0, opacity: 1}}\n      exit={{x: '100%', opacity: 0}}\n      transition={{type: 'tween', duration: 0.125}}\n      className=\"mb-20 flex items-start gap-14 text-sm\"\n      key={`${member.model_type}.${member.id}`}\n    >\n      <Avatar\n        className=\"flex-shrink-0\"\n        size=\"lg\"\n        circle\n        label={member.name}\n        src={member.image}\n        fallback=\"initials\"\n      />\n      <div className=\"min-w-0 flex-auto items-center justify-between gap-14 md:flex\">\n        <div className=\"mb-10 overflow-hidden md:mb-0 md:mr-10\">\n          <div className=\"flex items-center justify-start gap-6\">\n            <div className=\"overflow-hidden text-ellipsis whitespace-nowrap\">\n              {member.name}\n            </div>\n            <MemberDisplayNameAppend workspace={workspace} member={member} />\n          </div>\n          <div className=\"text-muted\">{member.email}</div>\n        </div>\n        <MemberActions workspace={workspace} member={member} />\n      </div>\n    </m.div>\n  );\n}\n\nfunction usePermissions(workspace: Workspace) {\n  const {user: authUser} = useAuth();\n  const response = {update: false, invite: false, delete: false};\n  const permissions = ['update', 'invite', 'delete'] as const;\n  const authMember = workspace.members?.find(mb => mb.id === authUser?.id);\n\n  if (authMember) {\n    permissions.forEach(permission => {\n      response[permission] =\n        authMember.is_owner ||\n        !!authMember.permissions?.find(\n          p => p.name === `workspace_members.${permission}`,\n        );\n    });\n  }\n\n  return response;\n}\n\ninterface MemberActionsProps {\n  workspace: Workspace;\n  member: WorkspaceMember | WorkspaceInvite;\n}\nfunction MemberActions({workspace, member}: MemberActionsProps) {\n  const [selectedRole, setSelectedRole] = useState<number>(member.role_id);\n  const changeRole = useChangeRole();\n  const {user} = useAuth();\n\n  const can = usePermissions(workspace);\n  const isOwner = member.model_type === 'member' && member.is_owner;\n  const isCurrentUser =\n    member.model_type === 'member' && user?.id === member.id;\n\n  const roleSelector =\n    !can.update || isOwner || isCurrentUser ? (\n      <div className=\"ml-auto text-muted first:capitalize\">\n        <Trans message={member.role_name} />\n      </div>\n    ) : (\n      <RoleMenuTrigger\n        className=\"ml-auto flex-shrink-0\"\n        size=\"xs\"\n        value={selectedRole}\n        isDisabled={changeRole.isPending}\n        onChange={roleId => {\n          setSelectedRole(roleId);\n          changeRole.mutate({\n            roleId,\n            workspaceId: workspace.id,\n            member,\n          });\n        }}\n      />\n    );\n\n  return (\n    <>\n      {roleSelector}\n      {!isOwner && (isCurrentUser || can.delete) && (\n        <RemoveMemberButton\n          type={isCurrentUser ? 'leave' : 'remove'}\n          member={member}\n          workspace={workspace}\n        />\n      )}\n    </>\n  );\n}\n\ninterface InviteChipFieldProps {\n  workspace: Workspace;\n}\nfunction InviteChipField({workspace}: InviteChipFieldProps) {\n  const {trans} = useTrans();\n  const [chips, setChips] = useState<ChipValue[]>([]);\n  const allEmailsValid = chips.every(chip => !chip.invalid);\n  const displayWith = (chip: ChipValue) => chip.description || chip.name;\n  const [selectedRole, setSelectedRole] = useState<number>();\n  const inviteMembers = useInviteMembers();\n  const {data} = useValueLists(['workspaceRoles']);\n\n  useEffect(() => {\n    if (!selectedRole && data?.workspaceRoles?.length) {\n      setSelectedRole(data.workspaceRoles[0].id);\n    }\n  }, [data, selectedRole]);\n\n  return (\n    <div className=\"mb-30\">\n      <ChipField\n        value={chips}\n        onChange={setChips}\n        displayWith={displayWith}\n        validateWith={chip => {\n          const invalid = !isEmail(chip.description);\n          return {\n            ...chip,\n            invalid,\n            errorMessage: invalid\n              ? trans({message: 'Not a valid email'})\n              : undefined,\n          };\n        }}\n        placeholder={trans({message: 'Enter email addresses'})}\n        label={<Trans message=\"Invite people\" />}\n      />\n      <div className=\"mt-14 flex items-center justify-between gap-14\">\n        <RoleMenuTrigger onChange={setSelectedRole} value={selectedRole} />\n        {chips.length && selectedRole ? (\n          <Button\n            variant=\"flat\"\n            color=\"primary\"\n            size=\"sm\"\n            disabled={inviteMembers.isPending || !allEmailsValid}\n            onClick={() => {\n              inviteMembers.mutate(\n                {\n                  emails: chips.map(c => displayWith(c)),\n                  roleId: selectedRole,\n                  workspaceId: workspace.id,\n                },\n                {\n                  onSuccess: () => {\n                    setChips([]);\n                  },\n                },\n              );\n            }}\n          >\n            <Trans message=\"Invite\" />\n          </Button>\n        ) : null}\n      </div>\n    </div>\n  );\n}\n\ninterface RemoveMemberButtonProps {\n  member: WorkspaceMember | WorkspaceInvite;\n  workspace: Workspace;\n  type: 'leave' | 'remove';\n}\nfunction RemoveMemberButton({\n  member,\n  workspace,\n  type,\n}: RemoveMemberButtonProps) {\n  const removeMember = useRemoveMember();\n  const {close} = useDialogContext();\n  return (\n    <DialogTrigger\n      type=\"modal\"\n      onClose={isConfirmed => {\n        if (isConfirmed) {\n          removeMember.mutate({\n            workspaceId: workspace.id,\n            memberId: member.id,\n            memberType: member.model_type,\n          });\n          if (type === 'leave') {\n            close();\n            toast(message('Left workspace'));\n          }\n        }\n      }}\n    >\n      <IconButton\n        size=\"md\"\n        className=\"flex-shrink-0 text-muted\"\n        disabled={removeMember.isPending}\n      >\n        {type === 'leave' ? <ExitToAppIcon /> : <CloseIcon />}\n      </IconButton>\n      {type === 'leave' ? (\n        <LeaveWorkspaceConfirmation />\n      ) : (\n        <RemoveMemberConfirmation member={member} />\n      )}\n    </DialogTrigger>\n  );\n}\n\ninterface RemoveMemberConfirmationProps {\n  member: WorkspaceMember | WorkspaceInvite;\n}\nfunction RemoveMemberConfirmation({member}: RemoveMemberConfirmationProps) {\n  return (\n    <ConfirmationDialog\n      isDanger\n      title={<Trans message=\"Remove member\" />}\n      body={\n        <div>\n          <Trans\n            message=\"Are you sure you want to remove `:name`?\"\n            values={{name: member.name}}\n          />\n          <div className=\"mt-8 font-semibold\">\n            <Trans\n              message=\"All workspace resources created by `:name` will be transferred to workspace owner.\"\n              values={{\n                name: member.name,\n              }}\n            />\n          </div>\n        </div>\n      }\n      confirm={<Trans message=\"Remove\" />}\n    />\n  );\n}\n\ninterface RoleMenuTriggerProps {\n  onChange: (value: number) => void;\n  value?: number;\n  size?: ButtonSize;\n  className?: string;\n  isDisabled?: boolean;\n}\nfunction RoleMenuTrigger({\n  value,\n  onChange,\n  size = 'xs',\n  className,\n  isDisabled,\n}: RoleMenuTriggerProps) {\n  const {data} = useValueLists(['workspaceRoles']);\n  const role = data?.workspaceRoles?.find(r => r.id === value);\n  if (!value || !role || !data?.workspaceRoles) return null;\n\n  return (\n    <MenuTrigger\n      selectionMode=\"single\"\n      selectedValue={value}\n      onSelectionChange={newValue => {\n        onChange(newValue as number);\n      }}\n    >\n      <Button\n        className={className}\n        size={size}\n        variant=\"flat\"\n        color=\"chip\"\n        disabled={isDisabled}\n        endIcon={<ArrowDropDownIcon />}\n      >\n        <Trans message={role.name} />\n      </Button>\n      <Menu>\n        {data.workspaceRoles.map(r => (\n          <MenuItem value={r.id} key={r.id} description={r.description}>\n            <Trans message={r.name} />\n          </MenuItem>\n        ))}\n      </Menu>\n    </MenuTrigger>\n  );\n}\n\ninterface MemberDisplayNameAppendProps {\n  member: WorkspaceMember | WorkspaceInvite;\n  workspace: Workspace;\n}\nfunction MemberDisplayNameAppend({\n  member,\n  workspace,\n}: MemberDisplayNameAppendProps) {\n  const {user} = useAuth();\n  const can = usePermissions(workspace);\n\n  if (user?.id === member.id) {\n    return (\n      <div className=\"font-medium\">\n        (<Trans message=\"You\" />)\n      </div>\n    );\n  }\n  if (member.model_type === 'invite') {\n    return (\n      <div className=\"flex items-center gap-4\">\n        <div>·</div>\n        <div className=\"font-medium\">\n          <Trans message=\"Invited\" />\n        </div>\n        {can.invite ? (\n          <>\n            <div>·</div>\n            <ResendInviteDialogTrigger member={member} workspace={workspace} />\n          </>\n        ) : null}\n      </div>\n    );\n  }\n  return null;\n}\n\nfunction ResendInviteDialogTrigger({\n  member,\n  workspace,\n}: MemberDisplayNameAppendProps) {\n  const resendInvite = useResendInvite();\n  return (\n    <DialogTrigger\n      type=\"modal\"\n      onClose={isConfirmed => {\n        if (isConfirmed) {\n          resendInvite.mutate({\n            workspaceId: workspace.id,\n            inviteId: member.id as string,\n          });\n        }\n      }}\n    >\n      <Button\n        variant=\"link\"\n        size=\"sm\"\n        color=\"primary\"\n        disabled={resendInvite.isPending}\n      >\n        <Trans message=\"Resend invite\" />\n      </Button>\n      <ConfirmationDialog\n        title={<Trans message=\"Resend invite\" />}\n        body={\n          <Trans message=\"Are you sure you want to send this invite again?\" />\n        }\n        confirm={<Trans message=\"Send\" />}\n      />\n    </DialogTrigger>\n  );\n}\n","import {useMutation} from '@tanstack/react-query';\nimport {UseFormReturn} from 'react-hook-form';\nimport {BackendResponse} from '../../http/backend-response/backend-response';\nimport {toast} from '@ui/toast/toast';\nimport {apiClient, queryClient} from '../../http/query-client';\nimport {WorkspaceQueryKeys} from './workspace-query-keys';\nimport {Workspace} from '../types/workspace';\nimport {onFormQueryError} from '../../errors/on-form-query-error';\nimport {useDialogContext} from '@ui/overlays/dialog/dialog-context';\nimport {message} from '@ui/i18n/message';\n\ninterface Response extends BackendResponse {\n  workspace: Workspace;\n}\n\nexport interface UpdateWorkspacePayload {\n  id: number;\n  name: string;\n}\n\nfunction updateWorkspace({\n  id,\n  ...props\n}: UpdateWorkspacePayload): Promise<Response> {\n  return apiClient.put(`workspace/${id}`, props).then(r => r.data);\n}\n\nexport function useUpdateWorkspace(\n  form: UseFormReturn<UpdateWorkspacePayload>,\n) {\n  const {close} = useDialogContext();\n  return useMutation({\n    mutationFn: (props: UpdateWorkspacePayload) => updateWorkspace(props),\n    onSuccess: response => {\n      close();\n      toast(message('Updated workspace'));\n      queryClient.invalidateQueries({\n        queryKey: WorkspaceQueryKeys.fetchUserWorkspaces,\n      });\n      queryClient.invalidateQueries({\n        queryKey: WorkspaceQueryKeys.workspaceWithMembers(\n          response.workspace.id,\n        ),\n      });\n    },\n    onError: r => onFormQueryError(r, form),\n  });\n}\n","import {useForm} from 'react-hook-form';\nimport {FormTextField} from '@ui/forms/input-field/text-field/text-field';\nimport {Form} from '@ui/forms/form';\nimport {Button} from '@ui/buttons/button';\nimport {DialogFooter} from '@ui/overlays/dialog/dialog-footer';\nimport {useDialogContext} from '@ui/overlays/dialog/dialog-context';\nimport {Dialog} from '@ui/overlays/dialog/dialog';\nimport {DialogHeader} from '@ui/overlays/dialog/dialog-header';\nimport {DialogBody} from '@ui/overlays/dialog/dialog-body';\nimport {\n  UpdateWorkspacePayload,\n  useUpdateWorkspace,\n} from './requests/update-workspace';\nimport {Workspace} from './types/workspace';\nimport {Trans} from '@ui/i18n/trans';\n\ninterface Props {\n  workspace: Workspace;\n}\nexport function RenameWorkspaceDialog({workspace}: Props) {\n  const form = useForm<UpdateWorkspacePayload>({\n    defaultValues: {id: workspace.id, name: workspace.name},\n  });\n  const {formId, close} = useDialogContext();\n  const updateWorkspace = useUpdateWorkspace(form);\n\n  return (\n    <Dialog>\n      <DialogHeader>\n        <Trans message=\"Rename workspace\" />\n      </DialogHeader>\n      <DialogBody>\n        <Form\n          form={form}\n          id={formId}\n          onSubmit={() => {\n            updateWorkspace.mutate(form.getValues());\n          }}\n        >\n          <FormTextField\n            name=\"name\"\n            autoFocus\n            label={<Trans message=\"Name\" />}\n            minLength={3}\n            required\n          />\n        </Form>\n      </DialogBody>\n      <DialogFooter>\n        <Button variant=\"text\" onClick={close}>\n          <Trans message=\"Cancel\" />\n        </Button>\n        <Button\n          variant=\"flat\"\n          color=\"primary\"\n          type=\"submit\"\n          form={formId}\n          disabled={updateWorkspace.isPending}\n        >\n          <Trans message=\"Rename\" />\n        </Button>\n      </DialogFooter>\n    </Dialog>\n  );\n}\n","import {useMutation} from '@tanstack/react-query';\nimport {BackendResponse} from '../../http/backend-response/backend-response';\nimport {toast} from '@ui/toast/toast';\nimport {apiClient, queryClient} from '../../http/query-client';\nimport {WorkspaceQueryKeys} from './workspace-query-keys';\nimport {useActiveWorkspaceId} from '../active-workspace-id-context';\nimport {PersonalWorkspace} from '../user-workspaces';\nimport {message} from '@ui/i18n/message';\nimport {showHttpErrorToast} from '../../http/show-http-error-toast';\n\ninterface Response extends BackendResponse {}\n\nexport interface DeleteWorkspacePayload {\n  id: number;\n}\n\nfunction deleteWorkspace({id}: DeleteWorkspacePayload): Promise<Response> {\n  return apiClient.delete(`workspace/${id}`).then(r => r.data);\n}\n\nexport function useDeleteWorkspace() {\n  const {workspaceId, setWorkspaceId} = useActiveWorkspaceId();\n  return useMutation({\n    mutationFn: (props: DeleteWorkspacePayload) => deleteWorkspace(props),\n    onSuccess: (r, payload) => {\n      toast(message('Deleted workspace'));\n      queryClient.invalidateQueries({\n        queryKey: WorkspaceQueryKeys.fetchUserWorkspaces,\n      });\n      queryClient.invalidateQueries({\n        queryKey: WorkspaceQueryKeys.workspaceWithMembers(payload.id),\n      });\n\n      // if user deleted workspace that is currently active, switch to personal workspace\n      if (workspaceId === payload.id) {\n        setWorkspaceId(PersonalWorkspace.id);\n      }\n    },\n    onError: err => showHttpErrorToast(err),\n  });\n}\n","import {Trans} from '@ui/i18n/trans';\nimport {Link} from 'react-router';\nimport {LinkStyle} from '@ui/buttons/external-link';\nimport {ReactElement, ReactNode} from 'react';\nimport {\n  SectionHelper,\n  SectionHelperProps,\n} from '@common/ui/other/section-helper';\nimport {useSettings} from '@ui/settings/use-settings';\nimport {PolicyFailReason} from '@common/billing/upgrade/policy-fail-reason';\n\ninterface Props {\n  className?: string;\n  // plural name in lowercase (e.g. 'projects')\n  resourceName?: ReactElement | string;\n  reason?: PolicyFailReason;\n  size?: SectionHelperProps['size'];\n  color?: SectionHelperProps['color'];\n  message?: ReactNode;\n}\nexport function PolicyFailMessage({\n  resourceName,\n  className,\n  size = 'md',\n  color = 'bgAlt',\n  reason = 'overQuota',\n  ...other\n}: Props) {\n  const message = other.message ?? (\n    <MessageText resourceName={resourceName!} reason={reason} />\n  );\n\n  return (\n    <SectionHelper\n      color={color}\n      size={size}\n      className={className}\n      description={message}\n    />\n  );\n}\n\ninterface MessageTextProps {\n  resourceName: ReactElement | string;\n  reason?: PolicyFailReason;\n}\nfunction MessageText({resourceName, reason}: MessageTextProps) {\n  const {billing} = useSettings();\n\n  if (reason === 'noWorkspacePermission') {\n    return (\n      <Trans\n        message=\"You can't create new :name in this workspace.\"\n        values={{name: resourceName}}\n      />\n    );\n  }\n\n  const upgradeMsgValues = {\n    name: resourceName,\n    a: (text: ReactNode) => (\n      <Link className={LinkStyle} to=\"/pricing\">\n        {text}\n      </Link>\n    ),\n  };\n\n  if (reason === 'overQuota' && billing.enable) {\n    return (\n      <Trans\n        message=\"Your plan is at its maximum number of :name allowed. <a>Upgrade to add more.</a>\"\n        values={upgradeMsgValues}\n      />\n    );\n  }\n\n  if (reason === 'noPermission' && billing.enable) {\n    return (\n      <Trans\n        message=\"To unlock ability to create :name. <a>Upgrade your plan.</a>\"\n        values={upgradeMsgValues}\n      />\n    );\n  }\n\n  return <Trans message=\"You don't have permissions to create :name.\" />;\n}\n","import clsx from 'clsx';\nimport {\n  cloneElement,\n  forwardRef,\n  Fragment,\n  ReactElement,\n  useEffect,\n  useState,\n} from 'react';\nimport {ButtonBase} from '@ui/buttons/button-base';\nimport {PersonalWorkspace, useUserWorkspaces} from './user-workspaces';\nimport {UnfoldMoreIcon} from '@ui/icons/material/UnfoldMore';\nimport {AddIcon} from '@ui/icons/material/Add';\nimport {NewWorkspaceDialog} from './new-workspace-dialog';\nimport {WorkspaceMembersDialog} from './workspace-members-dialog';\nimport {\n  useActiveWorkspace,\n  useActiveWorkspaceId,\n} from './active-workspace-id-context';\nimport {DialogTrigger} from '@ui/overlays/dialog/dialog-trigger';\nimport {Workspace} from './types/workspace';\nimport {Dialog} from '@ui/overlays/dialog/dialog';\nimport {DialogBody} from '@ui/overlays/dialog/dialog-body';\nimport {Button, ButtonProps} from '@ui/buttons/button';\nimport {CheckIcon} from '@ui/icons/material/Check';\nimport {Menu, MenuItem, MenuTrigger} from '@ui/menu/menu-trigger';\nimport {KeyboardArrowDownIcon} from '@ui/icons/material/KeyboardArrowDown';\nimport {PersonAddIcon} from '@ui/icons/material/PersonAdd';\nimport {DeleteIcon} from '@ui/icons/material/Delete';\nimport {ExitToAppIcon} from '@ui/icons/material/ExitToApp';\nimport {EditIcon} from '@ui/icons/material/Edit';\nimport {RenameWorkspaceDialog} from './rename-workspace-dialog';\nimport {ConfirmationDialog} from '@ui/overlays/dialog/confirmation-dialog';\nimport {useDeleteWorkspace} from './requests/delete-workspace';\nimport {useRemoveMember} from './requests/remove-member';\nimport {useAuth} from '../auth/use-auth';\nimport {Trans} from '@ui/i18n/trans';\nimport {LeaveWorkspaceConfirmation} from './leave-workspace-confirmation';\nimport {openDialog} from '@ui/overlays/store/dialog-store';\nimport {useDialogContext} from '@ui/overlays/dialog/dialog-context';\nimport {PolicyFailMessage} from '@common/billing/upgrade/policy-fail-message';\n\ninterface WorkspaceSelectorProps {\n  className?: string;\n  onChange?: (id: number) => void;\n  trigger?: ReactElement<ButtonProps>;\n  placement?: 'top' | 'bottom';\n}\nexport function WorkspaceSelector({\n  onChange,\n  className,\n  trigger,\n  placement = 'top',\n}: WorkspaceSelectorProps) {\n  const {data: workspaces, isFetched, isFetching} = useUserWorkspaces();\n  const {setWorkspaceId} = useActiveWorkspaceId();\n  const activeWorkspace = useActiveWorkspace();\n  const [selectorIsOpen, setSelectorIsOpen] = useState(false);\n  const {hasPermission} = useAuth();\n\n  // if user no longer has access to previously selected workspace, select personal one\n  useEffect(() => {\n    // make sure we don't unset active workspace while user workspaces are being re-fetched\n    if (isFetched && !isFetching && !activeWorkspace) {\n      setWorkspaceId(PersonalWorkspace.id);\n    }\n  }, [activeWorkspace, workspaces, setWorkspaceId, isFetched, isFetching]);\n\n  if (\n    // if we have a custom trigger, leave rendering up to the customer trigger\n    !trigger &&\n    (!activeWorkspace ||\n      (!hasPermission('workspaces.create') && workspaces?.length === 1))\n  ) {\n    return null;\n  }\n\n  return (\n    <Fragment>\n      <DialogTrigger\n        type=\"popover\"\n        placement={placement}\n        isOpen={selectorIsOpen}\n        onClose={() => {\n          setSelectorIsOpen(false);\n        }}\n      >\n        {trigger ? (\n          cloneElement(trigger, {\n            onClick: () => setSelectorIsOpen(!selectorIsOpen),\n          })\n        ) : (\n          <DefaultTrigger\n            onClick={() => setSelectorIsOpen(!selectorIsOpen)}\n            workspace={activeWorkspace!}\n            className={className}\n          />\n        )}\n        <Dialog size=\"min-w-320\">\n          <DialogBody padding=\"p-10\">\n            <div className=\"mb-16 border-b pb-10\">\n              {workspaces?.map(workspace => (\n                <WorkspaceItem\n                  key={workspace.id}\n                  workspace={workspace}\n                  setSelectorIsOpen={setSelectorIsOpen}\n                  onChange={onChange}\n                />\n              ))}\n            </div>\n            <div className=\"mb-4 px-4 text-center\">\n              <CreateWorkspaceButton\n                onClick={() => setSelectorIsOpen(false)}\n                onCreated={id => onChange?.(id)}\n                workspaceCount={workspaces ? workspaces.length - 1 : 0}\n              />\n            </div>\n          </DialogBody>\n        </Dialog>\n      </DialogTrigger>\n    </Fragment>\n  );\n}\n\ninterface CreateWorkspaceButtonProps {\n  onClick: () => void;\n  onCreated?: (id: number) => void;\n  workspaceCount: number;\n}\nfunction CreateWorkspaceButton({\n  onClick,\n  onCreated,\n  workspaceCount,\n}: CreateWorkspaceButtonProps) {\n  const {setWorkspaceId} = useActiveWorkspaceId();\n  const {checkOverQuotaOrNoPermission} = useAuth();\n  const {overQuotaOrNoPermission} = checkOverQuotaOrNoPermission(\n    'workspaces.create',\n    'count',\n    workspaceCount,\n  );\n\n  return (\n    <Fragment>\n      <Button\n        disabled={overQuotaOrNoPermission}\n        onClick={async e => {\n          e.preventDefault();\n          e.stopPropagation();\n          onClick();\n          const workspaceId = await openDialog(NewWorkspaceDialog);\n          if (workspaceId) {\n            setWorkspaceId(workspaceId);\n            onCreated?.(workspaceId);\n          }\n        }}\n        variant=\"outline\"\n        startIcon={<AddIcon />}\n        color=\"primary\"\n        className=\"h-40 w-full\"\n      >\n        <Trans message=\"Create new workspace\" />\n      </Button>\n      {overQuotaOrNoPermission && (\n        <PolicyFailMessage\n          size=\"sm\"\n          className=\"mt-12 max-w-288\"\n          resourceName={<Trans message=\"worksapces\" />}\n        />\n      )}\n    </Fragment>\n  );\n}\n\ninterface DefaultTriggerProps {\n  onClick: () => void;\n  workspace: Workspace;\n  className?: string;\n}\nconst DefaultTrigger = forwardRef<HTMLButtonElement, DefaultTriggerProps>(\n  ({workspace, className, onClick, ...other}, ref) => {\n    return (\n      <ButtonBase\n        ref={ref}\n        onClick={onClick}\n        className={clsx(\n          'flex items-center gap-10 rounded ring-inset hover:bg-hover focus-visible:ring-2',\n          className,\n        )}\n        {...other}\n      >\n        <span className=\"mr-auto block flex-auto overflow-hidden text-left\">\n          <span className=\"block overflow-hidden overflow-ellipsis text-sm font-medium text-main\">\n            {workspace.default ? (\n              <Trans message={workspace.name} />\n            ) : (\n              workspace.name\n            )}\n          </span>\n          <span className=\"block text-xs text-muted\">\n            {workspace.default ? (\n              <Trans message=\"Personal workspace\" />\n            ) : (\n              <Trans\n                message=\":count members\"\n                values={{count: workspace.members_count}}\n              />\n            )}\n          </span>\n        </span>\n        <UnfoldMoreIcon className=\"shrink-0 icon-md\" />\n      </ButtonBase>\n    );\n  },\n);\n\ninterface WorkspaceItemProps {\n  workspace: Workspace;\n  onChange: WorkspaceSelectorProps['onChange'];\n  setSelectorIsOpen: (value: boolean) => void;\n}\nfunction WorkspaceItem({\n  workspace,\n  onChange,\n  setSelectorIsOpen,\n}: WorkspaceItemProps) {\n  const {workspaceId, setWorkspaceId} = useActiveWorkspaceId();\n  const isActive = workspaceId === workspace.id;\n\n  return (\n    <div\n      onClick={() => {\n        setWorkspaceId(workspace.id);\n        onChange?.(workspace.id);\n        setSelectorIsOpen(false);\n      }}\n      className={clsx(\n        'mb-4 flex cursor-pointer items-center gap-12 rounded-lg p-10 text-left',\n        isActive && 'bg-primary/5',\n        !isActive && 'hover:bg-hover',\n      )}\n    >\n      <CheckIcon\n        size=\"sm\"\n        className={clsx('flex-shrink-0 text-primary', !isActive && 'invisible')}\n      />\n      <div className=\"flex-auto\">\n        <div className={clsx('text-sm', isActive && 'font-semibold')}>\n          {workspace.name}\n        </div>\n        <div className=\"text-sm text-muted\">\n          {workspace.default ? (\n            <Trans message=\"Personal workspace\" />\n          ) : (\n            <Trans\n              message=\":count members\"\n              values={{count: workspace.members_count}}\n            />\n          )}\n        </div>\n      </div>\n      {workspace.id !== 0 && (\n        <ManageButton\n          setSelectorIsOpen={setSelectorIsOpen}\n          workspace={workspace}\n          onChange={onChange}\n        />\n      )}\n    </div>\n  );\n}\n\ninterface LeaveWorkspaceDialogProps {\n  workspace: Workspace;\n  onChange?: (id: number) => void;\n}\nfunction LeaveWorkspaceDialog({\n  workspace,\n  onChange,\n}: LeaveWorkspaceDialogProps) {\n  const removeMember = useRemoveMember();\n  const {user} = useAuth();\n  const {close} = useDialogContext();\n  return (\n    <LeaveWorkspaceConfirmation\n      isLoading={removeMember.isPending}\n      onConfirm={() => {\n        removeMember.mutate(\n          {\n            workspaceId: workspace.id,\n            memberId: user!.id,\n            memberType: 'member',\n          },\n          {\n            onSuccess: () => {\n              close();\n              onChange?.(PersonalWorkspace.id);\n            },\n          },\n        );\n      }}\n    />\n  );\n}\n\ninterface DeleteWorkspaceConfirmationProps {\n  workspace: Workspace;\n  onChange?: (id: number) => void;\n}\nfunction DeleteWorkspaceConfirmation({\n  workspace,\n  onChange,\n}: DeleteWorkspaceConfirmationProps) {\n  const deleteWorkspace = useDeleteWorkspace();\n  const {close} = useDialogContext();\n  return (\n    <ConfirmationDialog\n      isDanger\n      title={<Trans message=\"Delete workspace\" />}\n      body={\n        <Trans\n          message=\"Are you sure you want to delete “:name“?\"\n          values={{name: workspace.name}}\n        />\n      }\n      confirm={<Trans message=\"Delete\" />}\n      isLoading={deleteWorkspace.isPending}\n      onConfirm={() => {\n        deleteWorkspace.mutate(\n          {id: workspace.id},\n          {\n            onSuccess: () => {\n              close();\n              onChange?.(PersonalWorkspace.id);\n            },\n          },\n        );\n      }}\n    />\n  );\n}\n\ninterface ManageButtonProps {\n  setSelectorIsOpen: (value: boolean) => void;\n  workspace: Workspace;\n  onChange?: (id: number) => void;\n}\nfunction ManageButton({\n  setSelectorIsOpen,\n  workspace,\n  onChange,\n}: ManageButtonProps) {\n  const {user} = useAuth();\n\n  return (\n    <MenuTrigger onItemSelected={() => setSelectorIsOpen(false)}>\n      <Button\n        onClick={e => {\n          e.preventDefault();\n          e.stopPropagation();\n        }}\n        color=\"primary\"\n        size=\"xs\"\n        variant=\"outline\"\n        endIcon={<KeyboardArrowDownIcon />}\n      >\n        <Trans message=\"Manage\" />\n      </Button>\n      <Menu>\n        <MenuItem\n          onClick={e => {\n            e.stopPropagation();\n            openDialog(WorkspaceMembersDialog, {workspace});\n          }}\n          value=\"workspaceMembers\"\n          startIcon={<PersonAddIcon />}\n        >\n          <Trans message=\"Members\" />\n        </MenuItem>\n        {workspace.owner_id === user?.id && (\n          <MenuItem\n            onClick={e => {\n              e.stopPropagation();\n              openDialog(RenameWorkspaceDialog, {workspace});\n            }}\n            value=\"updateWorkspace\"\n            startIcon={<EditIcon />}\n          >\n            <Trans message=\"Rename\" />\n          </MenuItem>\n        )}\n        {workspace.owner_id !== user?.id && (\n          <MenuItem\n            onClick={e => {\n              e.stopPropagation();\n              openDialog(LeaveWorkspaceDialog, {workspace, onChange});\n            }}\n            value=\"leaveWorkspace\"\n            startIcon={<ExitToAppIcon />}\n          >\n            <Trans message=\"Leave\" />\n          </MenuItem>\n        )}\n        {workspace.owner_id === user?.id && (\n          <MenuItem\n            onClick={e => {\n              e.stopPropagation();\n              openDialog(DeleteWorkspaceConfirmation, {workspace, onChange});\n            }}\n            value=\"deleteWorkspace\"\n            startIcon={<DeleteIcon />}\n          >\n            <Trans message=\"Delete\" />\n          </MenuItem>\n        )}\n      </Menu>\n    </MenuTrigger>\n  );\n}\n","export default \"__VITE_ASSET__fdd45f16__\"","export default \"__VITE_ASSET__189838f6__\"","export default \"__VITE_ASSET__bc08ea77__\"","export default \"__VITE_ASSET__94ef2bf1__\"","export default \"__VITE_ASSET__291df933__\"","export default \"__VITE_ASSET__5cc493df__\"","import type {DriveFolder} from '../files/drive-entry';\nimport {message} from '@ui/i18n/message';\nimport {MessageDescriptor} from '@ui/i18n/message-descriptor';\nimport addFilesSvg from './add-files.svg';\nimport timeManagement from './time-management.svg';\nimport fileSearching from './file-searching.svg';\nimport throwAwaySvg from './throw-away.svg';\nimport lovingItSvg from './loving-it.svg';\nimport shareSvg from './../shareable-link/shareable-link-page/folder-preview/share.svg';\nimport {DriveSortDescriptor} from '../drive-store';\nimport {getBootstrapData} from '@ui/bootstrap-data/bootstrap-data-store';\nimport {BootstrapData} from '@ui/bootstrap-data/bootstrap-data';\n\ninterface NoContentMessage {\n  title: MessageDescriptor;\n  description: MessageDescriptor;\n  image: string;\n}\n\nexport interface DrivePage {\n  uniqueId: string;\n  name: string;\n  label: MessageDescriptor | string;\n  path: string;\n  hasActions?: boolean;\n  canUpload?: boolean;\n  disableSort?: boolean;\n  sortDescriptor: DriveSortDescriptor;\n  queryParams?: Record<string, string | number | boolean>;\n  folder?: DriveFolder;\n  isFolderPage?: boolean;\n  noContentMessage: (isSearchingOrFiltering: boolean) => NoContentMessage;\n}\n\nconst defaultSortDescriptor: DriveSortDescriptor = {\n  orderBy: 'updated_at',\n  orderDir: 'desc',\n};\n\nexport function makeFolderPage(folder: DriveFolder, userId?: number): DrivePage {\n  return {\n    ...makePartialFolderPage(folder.hash, userId),\n    canUpload: folder.permissions['files.create'] || folder.permissions['files.update'],\n    label: folder.name,\n    folder,\n  };\n}\n\nexport function makePartialFolderPage(hash: string, userId?: number): DrivePage {\n  return {\n    name: 'folder',\n    uniqueId: hash,\n    label: '',\n    path: getPathForFolder(hash, userId),\n    hasActions: true,\n    canUpload: false,\n    sortDescriptor: defaultSortDescriptor,\n    isFolderPage: true,\n    noContentMessage: () => ({\n      title: message('Drop files or folders here'),\n      description: message('Or use the \"Upload\" button'),\n      image: addFilesSvg,\n    }),\n  };\n}\n\nexport function getPathForFolder(hash: string, userId?: number): string {\n  if (userId != null) {\n    // When viewing a specific user's drive\n    if (hash === '0') {\n      return `/drive/users/${userId}`;\n    }\n    return `/drive/users/${userId}/folders/${hash}`;\n  }\n  \n  // Normal workspace view\n  if (hash === '0') {\n    return '/drive';\n  }\n  return `/drive/folders/${hash}`;\n}\n\n// bootstrap data will always be available at this point\ninterface BootstrapDataWithRootFolder extends BootstrapData {\n  rootFolder: DriveFolder;\n}\nconst rootFolder = (getBootstrapData() as BootstrapDataWithRootFolder)\n  .rootFolder;\nexport const RootFolderPage = {\n  ...makeFolderPage(rootFolder),\n  name: 'home',\n} as Required<DrivePage>;\n\nexport const RecentPage: DrivePage = {\n  name: 'recent',\n  uniqueId: 'recent',\n  label: message('Recent'),\n  path: '/drive/recent',\n  disableSort: true,\n  sortDescriptor: {\n    orderBy: 'created_at',\n    orderDir: 'desc',\n  },\n  queryParams: {\n    recentOnly: true,\n  },\n  noContentMessage: () => ({\n    title: message('No recent entries'),\n    description: message('You have not uploaded any files or folders yet'),\n    image: timeManagement,\n  }),\n};\n\nexport const SearchPage: DrivePage = {\n  name: 'search',\n  uniqueId: 'search',\n  label: message('Search results'),\n  path: '/drive/search',\n  sortDescriptor: defaultSortDescriptor,\n  noContentMessage: isSearchingOrFiltering => {\n    if (isSearchingOrFiltering) {\n      return {\n        title: message('No matching results'),\n        description: message('Try changing your search query or filters'),\n        image: fileSearching,\n      };\n    }\n    return {\n      title: message('Begin typing or select a filter to search'),\n      description: message('Search for files, folders and other content'),\n      image: fileSearching,\n    };\n  },\n};\n\nexport const SharesPage: DrivePage = {\n  name: 'sharedWithMe',\n  uniqueId: 'sharedWithMe',\n  label: message('Shared'),\n  path: '/drive/shares',\n  sortDescriptor: defaultSortDescriptor,\n  queryParams: {\n    sharedOnly: true,\n  },\n  noContentMessage: () => ({\n    title: message('Shared with me'),\n    description: message('Files and folders other people have shared with you'),\n    image: shareSvg,\n  }),\n};\n\nexport const TrashPage: DrivePage = {\n  name: 'trash',\n  uniqueId: 'trash',\n  label: message('Trash'),\n  path: '/drive/trash',\n  sortDescriptor: defaultSortDescriptor,\n  hasActions: true,\n  queryParams: {\n    deletedOnly: true,\n  },\n  noContentMessage: () => ({\n    title: message('Trash is empty'),\n    description: message(\n      'There are no files or folders in your trash currently',\n    ),\n    image: throwAwaySvg,\n  }),\n};\n\nexport const StarredPage: DrivePage = {\n  name: 'starred',\n  uniqueId: 'starred',\n  label: message('Starred'),\n  path: '/drive/starred',\n  sortDescriptor: defaultSortDescriptor,\n  queryParams: {\n    starredOnly: true,\n  },\n  noContentMessage: () => ({\n    title: message('Nothing is starred'),\n    description: message(\n      'Add stars to files and folders that you want to easily find later',\n    ),\n    image: lovingItSvg,\n  }),\n};\n\nexport const DRIVE_PAGES = [\n  RootFolderPage,\n  RecentPage,\n  SearchPage,\n  SharesPage,\n  TrashPage,\n  StarredPage,\n];\n","export enum MenuPositions {\n  DriveSidebar = 'drive-sidebar',\n}\n","\"use strict\";var __assign=this&&this.__assign||function(){return(__assign=Object.assign||function(e){for(var r,t=1,n=arguments.length;t<n;t++)for(var o in r=arguments[t])Object.prototype.hasOwnProperty.call(r,o)&&(e[o]=r[o]);return e}).apply(this,arguments)},defaultConfig=(Object.defineProperty(exports,\"__esModule\",{value:!0}),{id:\"id\",parentId:\"parentId\",dataField:\"data\",childrenField:\"children\",throwIfOrphans:!1,rootParentIds:{\"\":!(exports.countNodes=exports.arrayToTree=void 0)},nestedIds:!0,assign:!1});function arrayToTree(c,e){void 0===e&&(e={});for(var r,t=__assign(__assign({},defaultConfig),e),n=[],o={},a=t.throwIfOrphans?new Set:null,s=0,h=c;s<h.length;s++){var i=h[s],d=t.nestedIds?getNestedProperty(i,t.id):i[t.id],l=t.nestedIds?getNestedProperty(i,t.parentId):i[t.parentId];if(t.rootParentIds[d])throw new Error(\"The item array contains a node whose parentId both exists in another node and is in \"+'`rootParentIds` (`itemId`: \"'.concat(d,'\", `rootParentIds`: ').concat(Object.keys(t.rootParentIds).map(function(e){return'\"'.concat(e,'\"')}).join(\", \"),\").\"));Object.prototype.hasOwnProperty.call(o,d)||(o[d]=((r={})[t.childrenField]=[],r)),a&&a.delete(d),t.dataField?o[d][t.dataField]=i:t.assign?o[d]=Object.assign(i,((r={})[t.childrenField]=o[d][t.childrenField],r)):o[d]=__assign(__assign({},i),((i={})[t.childrenField]=o[d][t.childrenField],i));i=o[d];null==l||t.rootParentIds[l]?n.push(i):(Object.prototype.hasOwnProperty.call(o,l)||(o[l]=((d={})[t.childrenField]=[],d),a&&a.add(l)),o[l][t.childrenField].push(i))}if(null!=a&&a.size)throw new Error(\"The items array contains orphans that point to the following parentIds: \"+\"[\".concat(Array.from(a),\"]. These parentIds do not exist in the items array. Hint: prevent orphans to result \")+\"in an error by passing the following option: { throwIfOrphans: false }\");if(t.throwIfOrphans&&countNodes(n,t.childrenField)<Object.keys(o).length)throw new Error(\"The items array contains nodes with a circular parent/child relationship.\");return n}function countNodes(e,t){return e.reduce(function(e,r){return e+1+(r[t]&&countNodes(r[t],t))},0)}function getNestedProperty(e,r){return r.split(\".\").reduce(function(e,r){return e&&e[r]},e)}exports.arrayToTree=arrayToTree,exports.countNodes=countNodes;","import {useQuery} from '@tanstack/react-query';\nimport {DriveFolder} from '../drive-entry';\nimport {useAuth} from '@common/auth/use-auth';\nimport {DriveQueryKeys} from '../../drive-query-keys';\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\nimport {apiClient} from '@common/http/query-client';\nimport {useActiveWorkspaceId} from '@common/workspace/active-workspace-id-context';\n\nexport interface UserFoldersApiParams {\n  userId: number;\n  workspaceId: number | null;\n}\n\ninterface UserFoldersResponse extends BackendResponse {\n  folders: DriveFolder[];\n  rootFolder: DriveFolder;\n}\n\nfunction fetchUserFolders(\n  params: UserFoldersApiParams,\n): Promise<UserFoldersResponse> {\n  return apiClient\n    .get(`users/${params.userId}/folders`, {params})\n    .then(response => response.data);\n}\n\nexport function useFolders(options: {userId?: number} = {}) {\n  const {user} = useAuth();\n  const {workspaceId} = useActiveWorkspaceId();\n  \n  // Use provided userId if available, otherwise use logged-in user's ID\n  const userId = options.userId ?? user!.id;\n  \n  const params: UserFoldersApiParams = {\n    userId,\n    workspaceId: options.userId ? null : workspaceId, // If viewing another user's folders, set workspaceId to null\n  };\n  \n  return useQuery({\n    queryKey: DriveQueryKeys.fetchUserFolders(params),\n    queryFn: () => fetchUserFolders(params),\n    enabled: !!user,\n  });\n}\n","import {enableMapSet} from 'immer';\nimport {create} from 'zustand';\nimport {immer} from 'zustand/middleware/immer';\nimport type {DrivePage} from './drive-page/drive-page';\nimport {Key} from 'react';\nimport {DriveEntry} from './files/drive-entry';\nimport {SortColumn, SortDirection} from './layout/sorting/available-sorts';\nimport {\n  getFromLocalStorage,\n  setInLocalStorage,\n} from '@ui/utils/hooks/local-storage';\nimport {getBootstrapData} from '@ui/bootstrap-data/bootstrap-data-store';\n\nconst stableArray: DriveEntry[] = [];\nenableMapSet();\n\nexport type DriveDialog =\n  | 'rename'\n  | 'newFolder'\n  | 'preview'\n  | 'share'\n  | 'getLink'\n  | 'moveTo'\n  | 'confirmAndDeleteForever'\n  | 'trashFolderBlock';\n\nexport interface ActiveActionDialog {\n  name: DriveDialog;\n  entries: DriveEntry[];\n}\n\nexport interface DriveSortDescriptor {\n  orderBy?: SortColumn;\n  orderDir?: SortDirection;\n}\n\ninterface State {\n  uploadQueueIsOpen: boolean;\n  selectedEntries: Set<number>;\n  sidebarExpandedKeys: Key[];\n  activePage?: DrivePage;\n  activeActionDialog?: {\n    name: DriveDialog;\n    entries: DriveEntry[];\n  } | null;\n  entriesBeingDragged: number[];\n  viewMode: 'grid' | 'list';\n  sortDescriptor: DriveSortDescriptor;\n  contextMenuData: {x: number; y: number; entry?: DriveEntry} | null;\n}\n\ninterface Actions {\n  setUploadQueueIsOpen: (isOpen: boolean) => void;\n  setSidebarExpandedKeys: (keys: Key[]) => void;\n  expandSidebarItem: (key: Key) => void;\n  collapseSidebarItem: (key: Key) => void;\n  toggleSidebarItem: (key: Key) => void;\n  setActivePage: (page: DrivePage) => void;\n  setActiveActionDialog: (\n    name: DriveDialog | null,\n    entries?: DriveEntry[],\n  ) => void;\n  setViewMode: (mode: 'grid' | 'list') => void;\n  setSortDescriptor: (value: DriveSortDescriptor) => void;\n  setContextMenuData: (\n    position: {x: number; y: number; entry?: DriveEntry} | null,\n  ) => void;\n  setEntriesBeingDragged: (value: number[]) => void;\n  selectEntries: (\n    entries: (number | undefined | null)[],\n    merge?: boolean,\n  ) => void;\n  deselectEntries: (entries: number[] | 'all') => void;\n  reset: () => void;\n}\n\nconst initialState: State = {\n  uploadQueueIsOpen: false,\n  contextMenuData: null,\n  selectedEntries: new Set(),\n  entriesBeingDragged: [],\n  activeActionDialog: null,\n  sidebarExpandedKeys: [],\n  viewMode: getFromLocalStorage<'list' | 'grid'>(\n    'drive.viewMode',\n    getBootstrapData().settings?.drive?.default_view || 'grid',\n  ),\n  sortDescriptor: {\n    orderBy: 'updated_at',\n    orderDir: 'desc',\n  },\n};\n\nexport const useDriveStore = create<State & Actions>()(\n  immer((set, get) => ({\n    ...initialState,\n    setUploadQueueIsOpen: isOpen => {\n      set(state => {\n        state.uploadQueueIsOpen = isOpen;\n      });\n    },\n    setContextMenuData: data => {\n      set(state => {\n        state.contextMenuData = data;\n      });\n    },\n    setSortDescriptor: value => {\n      set(state => {\n        const activePageId = get().activePage?.uniqueId;\n        if (activePageId) {\n          setInLocalStorage('selectedSorting', {\n            ...getFromLocalStorage('selectedSorting'),\n            [activePageId]: value,\n          });\n        }\n        state.sortDescriptor = value;\n      });\n    },\n    setActivePage: value => {\n      set(state => {\n        state.activePage = value;\n        const storedDescriptor =\n          getFromLocalStorage('selectedSorting')?.[value.uniqueId];\n        state.sortDescriptor = storedDescriptor\n          ? storedDescriptor\n          : value.sortDescriptor;\n\n        // deselect entries when page changes\n        if (\n          value.uniqueId !== get().activePage?.uniqueId &&\n          state.selectedEntries.size\n        ) {\n          state.selectedEntries.clear();\n        }\n      });\n    },\n    setEntriesBeingDragged: value => {\n      set(state => {\n        state.entriesBeingDragged = value;\n      });\n    },\n    setActiveActionDialog: (name, entries = stableArray) => {\n      set(state => {\n        const current = get().activeActionDialog;\n        // prevent creating a new object, if neither name nor entries changed\n        if (current?.name !== name || current.entries !== entries) {\n          state.activeActionDialog = name ? {name, entries} : null;\n        }\n      });\n    },\n    setViewMode: mode => {\n      set(state => {\n        state.viewMode = mode;\n        setInLocalStorage('drive.viewMode', mode);\n      });\n    },\n    setSidebarExpandedKeys: value =>\n      set(state => {\n        state.sidebarExpandedKeys = value;\n      }),\n    expandSidebarItem: key =>\n      set(state => {\n        if (!state.sidebarExpandedKeys.includes(key)) {\n          state.sidebarExpandedKeys.push(key);\n        }\n      }),\n    collapseSidebarItem: key =>\n      set(state => {\n        const index = state.sidebarExpandedKeys.indexOf(key);\n        if (index > -1) {\n          state.sidebarExpandedKeys.splice(index, 1);\n        }\n      }),\n    toggleSidebarItem: key =>\n      set(state => {\n        if (state.sidebarExpandedKeys.includes(key)) {\n          state.expandSidebarItem(key);\n        } else {\n          state.collapseSidebarItem(key);\n        }\n      }),\n    selectEntries: (entries, merge) => {\n      set(state => {\n        if (!merge) {\n          state.selectedEntries.clear();\n        }\n        entries.forEach(e => e && state.selectedEntries.add(e));\n      });\n    },\n    deselectEntries: entries => {\n      set(state => {\n        if (!state.selectedEntries.size) return;\n        if (entries === 'all') {\n          state.selectedEntries = new Set();\n        } else {\n          entries.forEach(e => state.selectedEntries.delete(e));\n        }\n      });\n    },\n    reset: () => {\n      set(initialState);\n    },\n  })),\n);\n\nexport function driveState() {\n  return useDriveStore.getState();\n}\n\nexport function useActiveDialogEntry() {\n  const dialog = useDriveStore(s => s.activeActionDialog);\n  // this will only be used inside dialog, so entry will always be set in that case\n  return dialog?.entries[0]!;\n}\n","import {useMutation} from '@tanstack/react-query';\nimport {apiClient} from '@common/http/query-client';\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\nimport {DriveEntry} from '../drive-entry';\nimport {toast} from '@ui/toast/toast';\nimport {invalidateEntryQueries} from '../../drive-query-keys';\nimport {message} from '@ui/i18n/message';\nimport {FileEntry} from '@common/uploads/file-entry';\nimport {RootFolderPage} from '../../drive-page/drive-page';\nimport {showHttpErrorToast} from '@common/http/show-http-error-toast';\n\ninterface Response extends BackendResponse {\n  entries: DriveEntry[];\n  destination: FileEntry | null;\n}\n\ninterface Payload {\n  entryIds: number[];\n  destinationId?: number | null;\n}\n\nexport function useMoveEntries() {\n  return useMutation({\n    mutationFn: (payload: Payload) => {\n      toast.loading(\n        message('Moving [one 1 item|other :count items]...', {\n          values: {\n            count: payload.entryIds.length,\n          },\n        }),\n        {disableExitAnimation: true},\n      );\n      return moveEntries(payload);\n    },\n    onSuccess: (r, p) => {\n      invalidateEntryQueries();\n      toast(\n        message('Moved [one 1 item|other :count items] to \":destination\"', {\n          values: {\n            count: p.entryIds.length,\n            destination: (r.destination || RootFolderPage.folder).name,\n          },\n        }),\n        {disableEnterAnimation: true},\n      );\n    },\n    onError: err =>\n      showHttpErrorToast(err, message('Could not move items'), null, {\n        disableEnterAnimation: true,\n      }),\n  });\n}\n\nfunction moveEntries(payload: Payload): Promise<Response> {\n  // backend expects null for root folder, it might be zero or empty string on frontend\n  payload.destinationId = !payload.destinationId ? null : payload.destinationId;\n  return apiClient\n    .post('file-entries/move', payload)\n    .then(response => response.data);\n}\n","import {useFileUploadStore} from '@common/uploads/uploader/file-upload-provider';\r\nimport {useCallback} from 'react';\r\nimport {driveState} from '../drive-store';\r\nimport {UploadedFile} from '@ui/utils/files/uploaded-file';\r\nimport {UploadStrategyConfig} from '@common/uploads/uploader/strategy/upload-strategy';\r\nimport {queryClient} from '@common/http/query-client';\r\nimport {DriveQueryKeys, invalidateEntryQueries} from '../drive-query-keys';\r\nimport {useStorageSummary} from '../layout/sidebar/storage-summary/storage-summary';\r\nimport {toast} from '@ui/toast/toast';\r\nimport {message} from '@ui/i18n/message';\r\nimport {useSettings} from '@ui/settings/use-settings';\r\nimport {getActiveWorkspaceId} from '@common/workspace/active-workspace-id';\r\n\r\nexport type UploadFilesFn = (\r\n  files: (File | UploadedFile)[] | FileList,\r\n  options?: UploadStrategyConfig,\r\n) => void;\r\n\r\nconst EightMB = 8388608;\r\n\r\nexport function useDriveUploadQueue() {\r\n  const uploadMultiple = useFileUploadStore(s => s.uploadMultiple);\r\n  const {data: usage} = useStorageSummary();\r\n\r\n  const {uploads} = useSettings();\r\n\r\n  const maxFileSize = uploads.max_size || EightMB;\r\n  const allowedFileTypes = uploads.allowed_extensions;\r\n  const blockedFileTypes = uploads.blocked_extensions;\r\n\r\n  const uploadFiles: UploadFilesFn = useCallback(\r\n    (files, options = {}) => {\r\n      if (!options.metadata) {\r\n        options.metadata = {};\r\n      }\r\n      options.metadata.workspaceId = getActiveWorkspaceId();\r\n      if (!options.metadata.parentId) {\r\n        options.metadata.parentId = driveState().activePage?.folder?.id ?? null;\r\n      }\r\n\r\n      files = [...files].map(file => {\r\n        return file instanceof UploadedFile ? file : new UploadedFile(file);\r\n      });\r\n\r\n      // check if this upload will not put user over their allowed storage space\r\n      if (usage) {\r\n        const sizeOfFiles = files.reduce((sum, file) => sum + file.size, 0);\r\n        const currentlyUsing = usage.used;\r\n        const availableSpace = usage.available;\r\n\r\n        if (sizeOfFiles + currentlyUsing > availableSpace) {\r\n          toast.danger(\r\n            message(\r\n              'You have exhausted your allowed space of :space. Delete some files or upgrade your plan.',\r\n              {values: {space: usage.availableFormatted}},\r\n            ),\r\n            {action: {action: '/pricing', label: message('Upgrade')}},\r\n          );\r\n          return;\r\n        }\r\n      }\r\n\r\n      uploadMultiple(files, {\r\n        ...options,\r\n        restrictions: {\r\n          maxFileSize,\r\n          allowedFileTypes,\r\n          blockedFileTypes,\r\n        },\r\n        onSuccess: (entry, file) => {\r\n          options?.onSuccess?.(entry, file);\r\n          invalidateEntryQueries();\r\n          queryClient.invalidateQueries({\r\n            queryKey: DriveQueryKeys.fetchStorageSummary,\r\n          });\r\n        },\r\n      });\r\n      driveState().setUploadQueueIsOpen(true);\r\n    },\r\n    [uploadMultiple, allowedFileTypes, blockedFileTypes, maxFileSize, usage],\r\n  );\r\n  return {uploadFiles};\r\n}\r\n","import {FileEntry} from '@common/uploads/file-entry';\nimport {DriveEntry, DriveFolder} from '@app/drive/files/drive-entry';\n\nexport interface PartialFolder {\n  id: number;\n  hash: string;\n  name: string;\n  path: string;\n  parent_id: number | null;\n  type: string;\n}\n\nexport function canMoveEntriesInto(\n  targets: DriveEntry[],\n  destination: DriveFolder,\n) {\n  if (destination.type !== 'folder') return false;\n\n  // prevent moving if user does not have permissions\n  if (\n    !destination.permissions['files.update'] &&\n    !targets.every(t => t.permissions['files.update'])\n  ) {\n    return false;\n  }\n\n  // should not be able to move folder into its\n  // own child or folder it's already in\n  return targets.every(target => {\n    if (!target) return false;\n    // entry is already in this folder\n    if (\n      destination.id === target.parent_id ||\n      // root folder check\n      (!target.parent_id && destination.id === 0)\n    ) {\n      return false;\n    }\n\n    return !destinationIsInTarget(destination, target);\n  });\n}\n\nfunction destinationIsInTarget(destination: PartialFolder, target: FileEntry) {\n  const destinationPath = (destination.path || '').split('/');\n  const targetPath = (target.path || '').split('/');\n  return targetPath.every((part, index) => {\n    return destinationPath[index] === part;\n  });\n}\n","import {useMoveEntries} from './queries/use-move-entries';\nimport {useDriveUploadQueue} from '../uploading/use-drive-upload-queue';\nimport {canMoveEntriesInto} from './utils/can-move-entries-into';\nimport {\n  ConnectedDraggable,\n  MixedDraggable,\n} from '@ui/interactions/dnd/use-draggable';\nimport {NativeFileDraggable} from '@ui/interactions/dnd/use-droppable';\nimport {driveState} from '@app/drive/drive-store';\nimport {DriveEntry, DriveFolder} from '@app/drive/files/drive-entry';\n\nexport function useFolderDropAction(folder: DriveEntry) {\n  const moveEntries = useMoveEntries();\n  const {uploadFiles} = useDriveUploadQueue();\n\n  const onDrop = async (target: ConnectedDraggable | NativeFileDraggable) => {\n    if (folder.type !== 'folder') return;\n    if (target.type === 'nativeFile') {\n      uploadFiles(await target.getData(), {\n        metadata: {parentId: folder.id},\n      });\n    } else if (target.type === 'fileEntry') {\n      const entries = target.getData() as DriveEntry[];\n      if (\n        entries?.length &&\n        canMoveEntriesInto(entries, folder as DriveFolder)\n      ) {\n        moveEntries.mutate({\n          destinationId: folder.id,\n          entryIds: entries.map(e => e.id),\n        });\n        driveState().deselectEntries('all');\n      }\n    }\n  };\n\n  return {onDrop};\n}\n\nexport function folderAcceptsDrop(\n  target: MixedDraggable,\n  destination: DriveFolder,\n) {\n  if (target.type === 'fileEntry') {\n    const entries = target.getData() as DriveEntry[];\n    return canMoveEntriesInto(entries, destination);\n  }\n  return true;\n}\n","import {FileEntry} from '@common/uploads/file-entry';\n\nexport function makeFolderTreeDragId(entry: FileEntry) {\n  return `${entry.id}-tree`;\n}\n\nexport function isFolderTreeDragId(id: string | number): boolean {\n  return `${id}`.endsWith('-tree');\n}\n","import {useDroppable} from '@ui/interactions/dnd/use-droppable';\nimport {driveState} from '../../drive-store';\nimport {RefObject, useState} from 'react';\nimport {\n  folderAcceptsDrop,\n  useFolderDropAction,\n} from '../../files/use-folder-drop-action';\nimport {DriveFolder} from '../../files/drive-entry';\nimport {makeFolderTreeDragId} from './folder-tree-drag-id';\n\ninterface Props {\n  folder: DriveFolder;\n  ref: RefObject<HTMLDivElement>;\n}\nexport function useSidebarTreeDropTarget({folder, ref}: Props) {\n  const [isDragOver, setIsDragOver] = useState(false);\n  const {onDrop} = useFolderDropAction(folder);\n\n  const dropProps = useDroppable({\n    id: makeFolderTreeDragId(folder),\n    ref,\n    types: ['fileEntry', 'nativeFile'],\n    acceptsDrop: draggable => folderAcceptsDrop(draggable, folder),\n    onDragEnter: draggable => {\n      if (folderAcceptsDrop(draggable, folder)) {\n        setIsDragOver(true);\n      }\n    },\n    onDragLeave: () => {\n      setIsDragOver(false);\n    },\n    onDropActivate: () => {\n      if (!driveState().sidebarExpandedKeys.includes(folder.id)) {\n        driveState().setSidebarExpandedKeys([\n          ...driveState().sidebarExpandedKeys,\n          folder.id,\n        ]);\n      }\n    },\n    onDrop,\n  });\n\n  return {...dropProps, isDragOver};\n}\n","import {createContext, Key} from 'react';\n\nexport interface TreeContextValue {\n  expandedKeys: Key[];\n  setExpandedKeys: (value: Key[]) => void;\n  selectedKeys: Key[];\n  setSelectedKeys: (value: Key[]) => void;\n  focusedNode?: Key;\n  setFocusedNode: (node?: Key) => void;\n}\n\nexport const TreeContext = createContext<TreeContextValue>(null!);\n","import {TreeItemRenderer} from './tree-item';\nimport {cloneElement} from 'react';\nimport {TreeNode} from './tree';\n\ninterface RenderTreeProps<T extends TreeNode> {\n  nodes: T[];\n  parentNode?: T;\n  itemRenderer: TreeItemRenderer<T>;\n  level?: number;\n}\nexport function renderTree<T extends TreeNode>({\n  nodes,\n  itemRenderer,\n  parentNode,\n  level,\n}: RenderTreeProps<T>) {\n  return nodes.map((node, index) => {\n    return cloneElement(itemRenderer(node), {\n      level: level == undefined ? 0 : level + 1,\n      index,\n      node,\n      parentNode,\n      key: node.id,\n      itemRenderer,\n    });\n  });\n}\n","import React, {Key, useState} from 'react';\nimport {useControlledState} from '@react-stately/utils';\nimport {FocusScope} from '@react-aria/focus';\nimport {TreeContext, TreeContextValue} from './tree-context';\nimport {TreeItemRenderer} from './tree-item';\nimport {renderTree} from './render-tree';\n\nexport interface TreeNode {\n  id: number | string;\n  children: TreeNode[];\n}\n\ninterface TreeProps<T extends TreeNode> {\n  children: TreeItemRenderer<T>;\n  nodes: T[];\n  selectedKeys?: Key[];\n  expandedKeys?: Key[];\n  defaultExpandedKeys?: Key[];\n  onExpandedKeysChange?: (value: Key[]) => void;\n  defaultSelectedKeys?: Key[];\n  onSelectedKeysChange?: (value: Key[]) => void;\n}\nexport function Tree<T extends TreeNode>({\n  children,\n  nodes,\n  ...props\n}: TreeProps<T>) {\n  const [expandedKeys, setExpandedKeys] = useControlledState(\n    props.expandedKeys,\n    props.defaultSelectedKeys,\n    props.onExpandedKeysChange\n  );\n  const [selectedKeys, setSelectedKeys] = useControlledState(\n    props.selectedKeys,\n    props.defaultSelectedKeys,\n    props.onSelectedKeysChange\n  );\n  const [focusedNode, setFocusedNode] = useState<Key | undefined>();\n\n  const value: TreeContextValue = {\n    expandedKeys,\n    setExpandedKeys,\n    selectedKeys,\n    setSelectedKeys,\n    focusedNode,\n    setFocusedNode,\n  };\n\n  return (\n    <TreeContext.Provider value={value}>\n      <FocusScope>\n        <TreeRoot nodes={nodes} itemRenderer={children} />\n      </FocusScope>\n    </TreeContext.Provider>\n  );\n}\n\ninterface TreeRootProps<T extends TreeNode> {\n  nodes: TreeNode[];\n  itemRenderer: TreeItemRenderer<T>;\n}\nfunction TreeRoot<T extends TreeNode>(props: TreeRootProps<T>) {\n  return (\n    <ul className=\"overflow-hidden text-sm\" role=\"tree\">\n      {renderTree(props)}\n    </ul>\n  );\n}\n","import React, {\n  forwardRef,\n  MouseEventHandler,\n  ReactNode,\n  useContext,\n} from 'react';\nimport {TreeContext} from './tree-context';\nimport clsx from 'clsx';\nimport {ArrowRightIcon} from '@ui/icons/material/ArrowRight';\n\ninterface TreeLabelProps {\n  level?: number;\n  node: any;\n  icon?: ReactNode;\n  label?: ReactNode;\n  className?: string;\n}\nexport const TreeLabel = forwardRef<HTMLDivElement, TreeLabelProps>(\n  ({icon, label, level = 0, node, className, ...domProps}, ref) => {\n    const {expandedKeys, setExpandedKeys, selectedKeys, setSelectedKeys} =\n      useContext(TreeContext);\n    const isExpanded = expandedKeys.includes(node.id);\n    const isSelected = selectedKeys.includes(node.id);\n\n    const handleExpandIconClick: MouseEventHandler = e => {\n      e.stopPropagation();\n      const index = expandedKeys.indexOf(node.id);\n      const newExpandedKeys = [...expandedKeys];\n      if (index > -1) {\n        newExpandedKeys.splice(index, 1);\n      } else {\n        newExpandedKeys.push(node.id);\n      }\n      setExpandedKeys(newExpandedKeys);\n    };\n\n    return (\n      <div\n        {...domProps}\n        ref={ref}\n        onClick={e => {\n          e.stopPropagation();\n          setSelectedKeys([node.id]);\n        }}\n        className={clsx(\n          'header tree-label flex cursor-pointer flex-nowrap items-center gap-4 overflow-hidden text-ellipsis whitespace-nowrap rounded py-6',\n          className,\n          isSelected && 'bg-primary/selected font-bold text-primary',\n          !isSelected && 'hover:bg-hover',\n        )}\n      >\n        {level > 0 && (\n          <div className=\"flex\">\n            {Array.from({length: level}).map((_, i) => {\n              return <div key={i} className=\"h-24 w-24\" />;\n            })}\n          </div>\n        )}\n        <div onClick={handleExpandIconClick}>\n          <ArrowRightIcon\n            className={clsx(\n              'cursor-default transition-transform icon-sm',\n              isExpanded && 'rotate-90',\n            )}\n          />\n        </div>\n        {icon}\n        <div className=\"overflow-hidden text-ellipsis pr-6\">{label}</div>\n      </div>\n    );\n  },\n);\nTreeLabel.displayName = 'TreeLabel';\n","import React, {\n  HTMLAttributes,\n  ReactElement,\n  ReactNode,\n  Ref,\n  useContext,\n  useEffect,\n} from 'react';\nimport {useFocusManager} from '@react-aria/focus';\nimport {TreeContext} from './tree-context';\nimport {createEventHandler} from '@ui/utils/dom/create-event-handler';\nimport clsx from 'clsx';\nimport {AnimatePresence, m} from 'framer-motion';\nimport {TreeNode} from './tree';\nimport {renderTree} from './render-tree';\nimport {TreeLabel} from './tree-label';\n\nexport type TreeItemRenderer<T extends TreeNode> = (\n  node: any,\n) => ReactElement<TreeItemProps<T>>;\n\nexport interface TreeItemProps<T extends TreeNode>\n  extends HTMLAttributes<HTMLElement> {\n  label: ReactNode;\n  icon: ReactNode;\n  node?: T;\n  parentNode?: T;\n  level?: number;\n  index?: number;\n  itemRenderer?: TreeItemRenderer<T>;\n  labelRef?: Ref<HTMLDivElement>;\n  labelClassName?: string;\n  className?: string;\n}\nexport function TreeItem<T extends TreeNode>({\n  label,\n  icon,\n  node,\n  level,\n  index,\n  itemRenderer,\n  labelRef,\n  labelClassName,\n  className,\n  parentNode,\n  ...domProps\n}: TreeItemProps<T>) {\n  const focusManager = useFocusManager();\n  const {\n    expandedKeys,\n    selectedKeys,\n    focusedNode,\n    setFocusedNode,\n    setExpandedKeys,\n    setSelectedKeys,\n  } = useContext(TreeContext);\n\n  // clear focused node on unmount\n  useEffect(() => {\n    return () => {\n      if (focusedNode === node?.id) {\n        setFocusedNode(undefined);\n      }\n    };\n  }, [focusedNode, node?.id, setFocusedNode]);\n\n  if (!node || !itemRenderer) return null;\n\n  const hasChildren = node.children.length;\n  const isExpanded = hasChildren && expandedKeys.includes(node.id);\n  const isSelected = selectedKeys.includes(node.id);\n  const isFirstNode = level === 0 && index === 0;\n  const isFocused =\n    focusedNode == undefined ? isFirstNode : focusedNode === node.id;\n\n  const onKeyDown = (e: React.KeyboardEvent<HTMLUListElement>) => {\n    if (focusedNode == null) return;\n    switch (e.key) {\n      // select the node\n      case 'Enter':\n      case ' ':\n        e.stopPropagation();\n        e.preventDefault();\n        setSelectedKeys([focusedNode]);\n        break;\n\n      // expand node, or move focus to first (and only first) child\n      case 'ArrowRight':\n        e.stopPropagation();\n        e.preventDefault();\n\n        if (!hasChildren) return;\n\n        if (!isExpanded) {\n          setExpandedKeys([...expandedKeys, focusedNode]);\n        } else {\n          focusManager?.focusNext();\n        }\n        break;\n\n      // collapse node, or move focus to parent node\n      case 'ArrowLeft':\n        e.stopPropagation();\n        e.preventDefault();\n\n        if (isExpanded) {\n          const index = expandedKeys.indexOf(focusedNode);\n          const newKeys = [...expandedKeys];\n          newKeys.splice(index, 1);\n          setExpandedKeys(newKeys);\n        } else if (parentNode) {\n          const parentEl =\n            document.activeElement?.parentElement?.closest('[tabindex]');\n          if (parentEl) {\n            (parentEl as HTMLElement).focus();\n          }\n        }\n        break;\n\n      // focus next visible node, recursively\n      case 'ArrowDown':\n        e.stopPropagation();\n        e.preventDefault();\n        focusManager?.focusNext();\n        break;\n\n      // focus previous visible node, recursively\n      case 'ArrowUp':\n        e.stopPropagation();\n        e.preventDefault();\n        focusManager?.focusPrevious();\n        break;\n\n      // focus first visible node\n      case 'Home':\n        e.stopPropagation();\n        e.preventDefault();\n        focusManager?.focusFirst();\n        break;\n\n      // focus last visible node\n      case 'End':\n        e.stopPropagation();\n        e.preventDefault();\n        focusManager?.focusLast();\n        break;\n\n      // expand all sibling nodes\n      case '*':\n        e.stopPropagation();\n        e.preventDefault();\n\n        if (parentNode?.children) {\n          const newKeys = [...expandedKeys];\n          parentNode.children.forEach(childNode => {\n            if (\n              childNode.children.length &&\n              !expandedKeys.includes(childNode.id)\n            ) {\n              newKeys.push(childNode.id);\n            }\n          });\n          if (newKeys.length !== expandedKeys.length) {\n            setExpandedKeys(newKeys);\n          }\n        }\n        break;\n    }\n  };\n\n  return (\n    <li\n      role=\"treeitem\"\n      aria-expanded={isExpanded ? 'true' : 'false'}\n      aria-selected={isSelected}\n      tabIndex={isFocused ? 0 : -1}\n      onKeyDown={createEventHandler(onKeyDown)}\n      onFocus={e => {\n        e.stopPropagation();\n        setFocusedNode(node.id);\n      }}\n      onBlur={e => {\n        e.stopPropagation();\n        // only clear focus state when focus moves outside the tree\n        if (!e.currentTarget.contains(e.relatedTarget)) {\n          setFocusedNode(undefined);\n        }\n      }}\n      className={clsx(\n        'outline-none',\n        // focus direct .tree-label child when this element has :focus-visible\n        '[&>.tree-label]:focus-visible:ring [&>.tree-label]:focus-visible:ring-2 [&>.tree-label]:focus-visible:ring-inset',\n        className,\n      )}\n    >\n      <TreeLabel\n        ref={labelRef}\n        className={labelClassName}\n        node={node}\n        level={level}\n        label={label}\n        icon={icon}\n        {...domProps}\n      />\n      <AnimatePresence initial={false}>\n        {isExpanded ? (\n          <m.ul\n            key={`${node.id}-group`}\n            role=\"group\"\n            initial=\"closed\"\n            animate=\"open\"\n            exit=\"closed\"\n            variants={{\n              open: {opacity: 1, height: 'auto'},\n              closed: {opacity: 0, height: 0, overflow: 'hidden'},\n            }}\n          >\n            {renderTree({\n              nodes: node.children,\n              parentNode: node,\n              itemRenderer,\n              level,\n            })}\n          </m.ul>\n        ) : null}\n      </AnimatePresence>\n    </li>\n  );\n}\n","import React, {useMemo, useRef} from 'react';\nimport {arrayToTree} from 'performant-array-to-tree';\nimport {useFolders} from '../../files/queries/use-folders';\nimport {DriveFolder} from '../../files/drive-entry';\nimport {driveState, useDriveStore} from '../../drive-store';\nimport {FolderIcon} from '@ui/icons/material/Folder';\nimport {getPathForFolder, RootFolderPage} from '../../drive-page/drive-page';\nimport {mergeProps} from '@react-aria/utils';\nimport {\n  ConnectedDraggable,\n  useDraggable,\n} from '@ui/interactions/dnd/use-draggable';\nimport {useSidebarTreeDropTarget} from './use-sidebar-tree-drop-target';\nimport {makeFolderTreeDragId} from './folder-tree-drag-id';\nimport {FileEntry} from '@common/uploads/file-entry';\nimport clsx from 'clsx';\nimport {BackupIcon} from '@ui/icons/material/Backup';\nimport {useNavigate} from '@common/ui/navigation/use-navigate';\nimport {Tree} from '@ui/tree/tree';\nimport {TreeItem, TreeItemProps} from '@ui/tree/tree-item';\n\ninterface TreeFolder extends DriveFolder {\n  children: TreeFolder[];\n}\n\nexport function FolderTree() {\n  const navigate = useNavigate();\n  const {data} = useFolders();\n  const expandedKeys = useDriveStore(s => s.sidebarExpandedKeys);\n\n  const activePage = useDriveStore(s => s.activePage);\n  let selectedKeys: number[] = [];\n  if (activePage?.isFolderPage) {\n    selectedKeys = activePage.folder ? [activePage.folder.id] : [];\n  }\n\n  const tree = useMemo(() => {\n    const folders = arrayToTree(data?.folders || [], {\n      parentId: 'parent_id',\n      dataField: null,\n    }) as TreeFolder[];\n    const rootFolder = {\n      ...RootFolderPage.folder,\n      children: folders,\n    };\n    return [rootFolder];\n  }, [data?.folders]);\n\n  return (\n    <Tree\n      nodes={tree}\n      expandedKeys={expandedKeys}\n      onExpandedKeysChange={keys => {\n        driveState().setSidebarExpandedKeys(keys);\n      }}\n      selectedKeys={selectedKeys}\n      onSelectedKeysChange={([id]) => {\n        const entryHash = findHash(id as number, tree);\n        if (entryHash) {\n          navigate(getPathForFolder(entryHash));\n        } else {\n          navigate(RootFolderPage.path);\n        }\n      }}\n    >\n      {() => <FolderTreeItem />}\n    </Tree>\n  );\n}\n\n// props will be passed by tree via cloneElement\nfunction FolderTreeItem(props: Partial<TreeItemProps<TreeFolder>>) {\n  const {node} = props as Required<TreeItemProps<TreeFolder>>;\n  const labelRef = useRef<HTMLDivElement>(null);\n  const isRootFolder = node.id === 0;\n  const isDragging = useDriveStore(s =>\n    s.entriesBeingDragged.includes(node.id),\n  );\n\n  const {draggableProps} = useDraggable({\n    type: 'fileEntry',\n    id: makeFolderTreeDragId(node),\n    ref: labelRef,\n    disabled: isRootFolder,\n    hidePreview: true,\n    onDragStart: (e, draggable) => {\n      const d = draggable as ConnectedDraggable<FileEntry[]>;\n      driveState().setEntriesBeingDragged(d.getData().map(e => e.id));\n      driveState().selectEntries([]);\n    },\n    onDragEnd: () => {\n      driveState().setEntriesBeingDragged([]);\n    },\n    getData: () => [node],\n  });\n\n  const {droppableProps, isDragOver} = useSidebarTreeDropTarget({\n    folder: node,\n    ref: labelRef,\n  });\n\n  return (\n    <TreeItem\n      {...mergeProps(draggableProps, droppableProps, props)}\n      onContextMenu={e => {\n        e.preventDefault();\n        e.stopPropagation();\n        driveState().deselectEntries('all');\n        driveState().setContextMenuData({\n          x: e.clientX,\n          y: e.clientY,\n          entry: node,\n        });\n      }}\n      labelRef={labelRef}\n      className={isRootFolder ? 'focus-visible:ring-2' : undefined}\n      labelClassName={clsx(\n        isDragOver && 'bg-primary/selected ring ring-2 ring-inset ring-primary',\n        isDragging && 'opacity-30',\n        isRootFolder && 'h-40',\n      )}\n      icon={\n        isRootFolder ? (\n          <BackupIcon size=\"md\" className=\"mr-6\" />\n        ) : (\n          <FolderIcon size=\"sm\" className=\"mr-4\" />\n        )\n      }\n      label={node.name}\n    />\n  );\n}\n\nconst findHash = (id: number, nodes: FileEntry[]): string | undefined => {\n  for (const item of nodes) {\n    if (item.id === id) {\n      return item.hash;\n    } else if (item.children) {\n      const hash = findHash(id, item.children);\n      if (hash) {\n        return hash;\n      }\n    }\n  }\n};\n","import {useMutation} from '@tanstack/react-query';\nimport {apiClient, queryClient} from '@common/http/query-client';\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\nimport {toast} from '@ui/toast/toast';\nimport {DriveQueryKeys, invalidateEntryQueries} from '../../drive-query-keys';\nimport {message} from '@ui/i18n/message';\nimport {MessageDescriptor} from '@ui/i18n/message-descriptor';\nimport {getAxiosErrorMessage} from '@common/http/get-axios-error-message';\n\ninterface Response extends BackendResponse {}\n\ninterface Payload {\n  entryIds: number[];\n  emptyTrash?: boolean;\n  deleteForever?: boolean;\n}\n\nfunction deleteEntries(payload: Payload): Promise<Response> {\n  return apiClient\n    .post('file-entries/delete', payload)\n    .then(response => response.data);\n}\n\nexport function useDeleteEntries() {\n  return useMutation({\n    mutationFn: (payload: Payload) => {\n      toast.loading(getLoaderMessage(payload), {disableExitAnimation: true});\n      return deleteEntries(payload);\n    },\n    onSuccess: (r, {entryIds, emptyTrash, deleteForever}) => {\n      invalidateEntryQueries();\n      queryClient.invalidateQueries({\n        queryKey: DriveQueryKeys.fetchStorageSummary,\n      });\n      if (emptyTrash) {\n        toast(message('Emptied trash'), {disableEnterAnimation: true});\n      } else if (deleteForever) {\n        toast(\n          message('Permanently deleted [one 1 item|other :count items]', {\n            values: {count: entryIds.length},\n          }),\n          {disableEnterAnimation: true},\n        );\n      } else {\n        toast(\n          message('Moved [one 1 item|other :count items] to trash', {\n            values: {count: entryIds.length},\n          }),\n          {disableEnterAnimation: true},\n        );\n      }\n    },\n    onError: (err, {emptyTrash}) => {\n      const backendError = getAxiosErrorMessage(err);\n      if (backendError) {\n        toast.danger(backendError, {disableEnterAnimation: true});\n      } else if (emptyTrash) {\n        toast.danger('could not empty trash', {disableEnterAnimation: true});\n      } else {\n        toast.danger('Could not delete items', {disableEnterAnimation: true});\n      }\n    },\n  });\n}\n\nfunction getLoaderMessage(payload: Payload): MessageDescriptor {\n  if (payload.emptyTrash) {\n    return message('Emptying trash...');\n  } else if (payload.deleteForever) {\n    return message('Deleting files...');\n  } else {\n    return message('Moving to trash...');\n  }\n}\n","import {CustomMenu, CustomMenuItem} from '@common/menus/custom-menu';\nimport {MenuPositions} from '../../menu-positions';\nimport React, {\n  ComponentPropsWithoutRef,\n  forwardRef,\n  useRef,\n  useState,\n} from 'react';\nimport clsx from 'clsx';\nimport {FileEntry} from '@common/uploads/file-entry';\nimport {FolderTree} from '@app/drive/layout/sidebar/folder-tree';\nimport {useDeleteEntries} from '@app/drive/files/queries/use-delete-entries';\nimport {useDroppable} from '@common/ui/library/interactions/dnd/use-droppable';\nimport {MenuItemConfig} from '@common/menus/menu-config';\n\nexport function SidebarMenu() {\n  return (\n    <div className=\"mt-26 px-12 text-muted\">\n      <FolderTree />\n      <CustomMenu\n        menu={MenuPositions.DriveSidebar}\n        orientation=\"vertical\"\n        gap=\"gap-0\"\n      >\n        {item => {\n          if (item.action === '/drive/trash') {\n            return <TrashMenuItem key={item.id} item={item} />;\n          }\n          return <MenuItem key={item.id} item={item} />;\n        }}\n      </CustomMenu>\n    </div>\n  );\n}\n\ninterface MenuItemProps extends ComponentPropsWithoutRef<'a'> {\n  item: MenuItemConfig;\n  className?: string;\n}\nexport const MenuItem = forwardRef<HTMLAnchorElement, MenuItemProps>(\n  ({item, className, ...domProps}, ref) => {\n    return (\n      <CustomMenuItem\n        className={({isActive}) =>\n          clsx(\n            className,\n            'my-4 h-40 w-full rounded px-24',\n            isActive\n              ? 'cursor-default bg-primary/selected font-bold text-primary'\n              : 'hover:bg-hover',\n          )\n        }\n        item={item}\n        ref={ref}\n        {...domProps}\n      />\n    );\n  },\n);\n\ninterface TrashMenuItemProps {\n  item: MenuItemConfig;\n}\nfunction TrashMenuItem({item}: TrashMenuItemProps) {\n  const deleteEntries = useDeleteEntries();\n  const [isDragOver, setIsDragOver] = useState(false);\n  const ref = useRef<HTMLAnchorElement>(null);\n\n  const {droppableProps} = useDroppable({\n    id: 'trash',\n    types: ['fileEntry'],\n    ref,\n    onDragEnter: () => {\n      setIsDragOver(true);\n    },\n    onDragLeave: () => {\n      setIsDragOver(false);\n    },\n    onDrop: draggable => {\n      const entryIds = (draggable.getData() as FileEntry[]).map(e => e.id);\n      deleteEntries.mutate({entryIds, deleteForever: false});\n    },\n  });\n  return (\n    <MenuItem\n      className={clsx(isDragOver && 'bg-primary/selected')}\n      ref={ref}\n      {...droppableProps}\n      item={item}\n    />\n  );\n}\n","import {driveState, useDriveStore} from '../drive-store';\nimport {useDriveUploadQueue} from '../uploading/use-drive-upload-queue';\nimport {Button} from '@ui/buttons/button';\nimport {FileUploadIcon} from '@ui/icons/material/FileUpload';\nimport {Trans} from '@ui/i18n/trans';\nimport {CreateNewFolderIcon} from '@ui/icons/material/CreateNewFolder';\nimport {UploadFileIcon} from '@ui/icons/material/UploadFile';\nimport {DriveFolderUploadIcon} from '@ui/icons/material/DriveFolderUpload';\nimport React from 'react';\nimport {IconButton} from '@ui/buttons/icon-button';\nimport {AddIcon} from '@ui/icons/material/Add';\nimport {Menu, MenuItem, MenuTrigger} from '@ui/menu/menu-trigger';\nimport {openUploadWindow} from '@ui/utils/files/open-upload-window';\n\ninterface CreateNewButtonProps {\n  isCompact?: boolean;\n  className?: string;\n}\nexport function CreateNewButton({isCompact, className}: CreateNewButtonProps) {\n  const activePage = useDriveStore(s => s.activePage);\n  const {uploadFiles} = useDriveUploadQueue();\n\n  const button = isCompact ? (\n    <IconButton size=\"md\" disabled={!activePage?.canUpload}>\n      <AddIcon />\n    </IconButton>\n  ) : (\n    <Button\n      className=\"min-w-160\"\n      color=\"primary\"\n      variant=\"flat\"\n      size=\"sm\"\n      startIcon={<FileUploadIcon />}\n      disabled={!activePage?.canUpload}\n    >\n      <Trans message=\"Upload\" />\n    </Button>\n  );\n\n  return (\n    <div className={className}>\n      <MenuTrigger\n        onItemSelected={async value => {\n          if (value === 'uploadFiles') {\n            uploadFiles(await openUploadWindow({multiple: true}));\n          } else if (value === 'uploadFolder') {\n            uploadFiles(await openUploadWindow({directory: true}));\n          } else if (value === 'newFolder') {\n            const activeFolder = driveState().activePage?.folder;\n            driveState().setActiveActionDialog(\n              'newFolder',\n              activeFolder ? [activeFolder] : [],\n            );\n          }\n        }}\n      >\n        {button}\n        <Menu>\n          <MenuItem value=\"uploadFiles\" startIcon={<UploadFileIcon />}>\n            <Trans message=\"Upload files\" />\n          </MenuItem>\n          <MenuItem value=\"uploadFolder\" startIcon={<DriveFolderUploadIcon />}>\n            <Trans message=\"Upload folder\" />\n          </MenuItem>\n          <MenuItem value=\"newFolder\" startIcon={<CreateNewFolderIcon />}>\n            <Trans message=\"Create folder\" />\n          </MenuItem>\n        </Menu>\n      </MenuTrigger>\n    </div>\n  );\n}\n","import React from 'react';\nimport {StorageMeter} from './storage-summary/storage-meter';\nimport {WorkspaceSelector} from '@common/workspace/workspace-selector';\nimport {RootFolderPage} from '../../drive-page/drive-page';\nimport {SidebarMenu} from './sidebar-menu';\nimport {useNavigate} from '@common/ui/navigation/use-navigate';\nimport {CreateNewButton} from '../create-new-button';\nimport {Button} from '@ui/buttons/button';\nimport {Link} from 'react-router';\nimport {Trans} from '@ui/i18n/trans';\nimport {useAuth} from '@common/auth/use-auth';\nimport clsx from 'clsx';\nimport {useSettings} from '@ui/settings/use-settings';\n\ninterface SidebarProps {\n  className?: string;\n}\nexport function Sidebar({className}: SidebarProps) {\n  const {isSubscribed} = useAuth();\n  const {billing} = useSettings();\n  return (\n    <div\n      className={clsx(\n        className,\n        'flex flex-col gap-20 border-r bg-alt text-sm font-medium text-muted',\n      )}\n    >\n      <div className=\"compact-scrollbar flex-auto overflow-y-auto\">\n        <CreateNewButton className=\"px-12 pt-28 text-center\" />\n        <SidebarMenu />\n        <StorageMeter />\n        {billing.enable ? (\n          <div className=\"mt-14 pl-60\">\n            <Button\n              elementType={Link}\n              to={isSubscribed ? '/billing/change-plan' : '/pricing'}\n              variant=\"outline\"\n              color=\"primary\"\n              size=\"xs\"\n            >\n              <Trans message=\"Upgrade\" />\n            </Button>\n          </div>\n        ) : null}\n      </div>\n      <WorkspaceSwitcher />\n    </div>\n  );\n}\n\nfunction WorkspaceSwitcher() {\n  const navigate = useNavigate();\n  return (\n    <WorkspaceSelector\n      onChange={() => {\n        navigate(RootFolderPage.path);\n      }}\n      className=\"mt-auto w-full flex-shrink-0 border-t px-24 py-18\"\n    />\n  );\n}\n","import {InfiniteData, useInfiniteQuery} from '@tanstack/react-query';\nimport {useSearchParams, useParams} from 'react-router';\nimport {hasNextPage} from '@common/http/backend-response/pagination-response';\nimport {DriveEntry, DriveFolder} from '../drive-entry';\nimport {driveState, useDriveStore} from '../../drive-store';\nimport {apiClient, queryClient} from '@common/http/query-client';\nimport {DriveQueryKeys} from '../../drive-query-keys';\nimport {SearchPage, makeFolderPage} from '../../drive-page/drive-page';\nimport {useEffect} from 'react';\nimport {useActiveWorkspaceId} from '@common/workspace/active-workspace-id-context';\n\nexport interface DriveApiIndexParams {\n  orderBy?: string;\n  orderDir?: string;\n  folderId?: string | number | null;\n  query?: string;\n  filters?: string;\n  deletedOnly?: boolean;\n  starredOnly?: boolean;\n  sharedOnly?: boolean;\n  perPage?: number;\n  page?: number;\n  recentOnly?: boolean;\n  workspaceId?: number | null;\n  section?: string;\n  userId?: number;\n}\n\nexport interface EntriesPaginationResponse {\n  data: DriveEntry[];\n  current_page: number;\n  last_page: number;\n  folder?: DriveFolder;\n}\n\nexport function usePaginatedEntries(options: {userId?: number} = {}) {\n  const page = useDriveStore(s => s.activePage);\n  const sortDescriptor = useDriveStore(s => s.sortDescriptor);\n  const [searchParams] = useSearchParams();\n  const {workspaceId} = useActiveWorkspaceId();\n  const {userId} = useParams();\n  const {userId: optionsUserId} = options;\n\n  // Base params without workspaceId\n  const params: DriveApiIndexParams = {\n    orderBy: sortDescriptor?.orderBy,\n    orderDir: sortDescriptor?.orderDir,\n    section: page?.name || 'folder',\n    ...page?.queryParams,\n    ...Object.fromEntries(searchParams),\n    folderId: page?.isFolderPage ? page.uniqueId : '0',\n  };\n\n  // When viewing user files, ONLY use userId and never workspaceId\n  if (optionsUserId != null || userId != null) {\n    params.userId = optionsUserId ?? (userId ? parseInt(userId) : undefined);\n    // Ensure workspaceId is not present\n    delete params.workspaceId;\n  } else {\n    // When not viewing user files, ONLY use workspaceId\n    params.workspaceId = workspaceId;\n  }\n\n  const isDisabledInSearch = page === SearchPage && !params.query && !params.filters;\n\n  const query = useInfiniteQuery({\n    queryKey: DriveQueryKeys.fetchEntries(params),\n    queryFn: ({pageParam = 1}) => {\n      const queryParams = {\n        ...params,\n        page: pageParam,\n      };\n      \n      // Use user-specific endpoint when userId is provided\n      const endpoint = params.userId != null\n        ? `drive/users/${params.userId}/file-entries`\n        : 'drive/file-entries';\n\n      return apiClient\n        .get(endpoint, {\n          params: queryParams,\n        })\n        .then(response => response.data);\n    },\n    initialPageParam: 1,\n    getNextPageParam: lastResponse => {\n      const currentPage = lastResponse.current_page;\n      if (!hasNextPage(lastResponse)) {\n        return undefined;\n      }\n      return currentPage + 1;\n    },\n    enabled: !isDisabledInSearch,\n    gcTime: 0,\n    refetchOnMount: false,\n    refetchOnWindowFocus: false,\n    refetchOnReconnect: false,\n    staleTime: 30000, // Consider data fresh for 30 seconds\n  });\n\n  // Update active folder if needed\n  useEffect(() => {\n    if (query.data?.pages[0]?.folder) {\n      const folder = query.data.pages[0].folder;\n      const currentFolder = useDriveStore.getState().activePage?.folder;\n      \n      if (!currentFolder || currentFolder.id !== folder.id || currentFolder.hash !== folder.hash) {\n        driveState().setActivePage(makeFolderPage(folder, params.userId));\n      }\n    }\n  }, [query.data, params.userId]);\n\n  return query;\n}\n\nexport function getAllEntries(): DriveEntry[] {\n  const caches = queryClient.getQueriesData<InfiniteData<EntriesPaginationResponse>>({\n    queryKey: DriveQueryKeys.fetchEntries(),\n  });\n  return caches.reduce<DriveEntry[]>((all, cache) => {\n    const current = cache[1] ? cache[1].pages.flatMap(p => p.data) : [];\n    return [...all, ...current];\n  }, []);\n}\n","import {InteractableRect} from '../interactable-event';\n\nexport function restrictResizableWithinBoundary(\n  rect: InteractableRect,\n  boundaryRect: InteractableRect\n) {\n  const boundedRect = {...rect};\n\n  // restrict to left edge of boundary\n  boundedRect.left = Math.max(0, boundedRect.left);\n  // compensate width when left is bounded\n  const leftRestriction = boundedRect.left - rect.left;\n  if (leftRestriction > 0) {\n    boundedRect.width -= leftRestriction;\n  }\n\n  // restrict to top edge of boundary\n  boundedRect.top = Math.max(0, boundedRect.top);\n  // compensate height when top is bounded\n  const topRestriction = boundedRect.top - rect.top;\n  if (topRestriction > 0) {\n    boundedRect.height -= topRestriction;\n  }\n\n  // restrict to right edge of boundary\n  boundedRect.width = Math.min(\n    boundedRect.width,\n    boundaryRect.width - boundedRect.left\n  );\n\n  // restrict to bottom edge of boundary\n  boundedRect.height = Math.min(\n    boundedRect.height,\n    boundaryRect.height - boundedRect.top\n  );\n\n  return boundedRect;\n}\n","import {RefObject, useLayoutEffect, useRef} from 'react';\nimport {droppables} from '../drag-state';\nimport {InteractableRect} from '../../interactable-event';\nimport {DraggableId} from '../use-draggable';\n\nexport interface ConnectedMouseSelectable {\n  id: DraggableId;\n  onSelected?: () => void;\n  onDeselected?: () => void;\n  ref: RefObject<HTMLElement>;\n  rect?: InteractableRect;\n}\n\nexport const mouseSelectables = new Map<\n  DraggableId,\n  ConnectedMouseSelectable\n>();\n\nexport function useMouseSelectable(options: ConnectedMouseSelectable) {\n  const {id, ref} = options;\n  const optionsRef = useRef(options);\n  optionsRef.current = options;\n\n  useLayoutEffect(() => {\n    if (!ref.current) return;\n    // register droppable regardless if it's enabled or not, it might be used by mouse selection box\n    mouseSelectables.set(id, {\n      ...mouseSelectables.get(id),\n      id,\n      ref,\n      // avoid stale closures\n      onSelected: () => {\n        optionsRef.current.onSelected?.();\n      },\n      onDeselected: () => optionsRef.current.onDeselected?.(),\n    });\n    return () => {\n      droppables.delete(id);\n    };\n  }, [id, optionsRef, ref]);\n}\n","import {InteractableRect} from '../interactable-event';\n\nexport function rectsIntersect(\n  rectA?: InteractableRect,\n  rectB?: InteractableRect\n) {\n  if (!rectA || !rectB) return false;\n  return (\n    rectA.left <= rectB.left + rectB.width &&\n    rectA.left + rectA.width >= rectB.left &&\n    rectA.top <= rectB.top + rectB.height &&\n    rectA.top + rectA.height >= rectB.top\n  );\n}\n","import React, {RefObject, useRef} from 'react';\nimport {usePointerEvents} from '../../use-pointer-events';\nimport {InteractableRect} from '../../interactable-event';\nimport {restrictResizableWithinBoundary} from '../../utils/restrict-resizable-within-boundary';\nimport {activeInteraction} from '../../active-interaction';\nimport {updateRects} from '../update-rects';\nimport {mouseSelectables} from './use-mouse-selectable';\nimport {rectsIntersect} from '../../utils/rects-intersect';\nimport {DraggableId} from '../use-draggable';\n\ninterface SelectionState {\n  startPoint?: {x: number; y: number; scrollTop: number};\n  endPoint?: {x: number; y: number};\n  boundaryRect?: InteractableRect & {heightWithoutScroll: number};\n  scrollListener?: EventListener;\n  rafId?: number;\n  selectedIds?: Set<DraggableId>;\n}\n\ninterface Props {\n  onPointerDown?: (e: React.PointerEvent) => void;\n  containerRef?: RefObject<HTMLDivElement>;\n}\nexport function useMouseSelectionBox({onPointerDown, ...props}: Props = {}) {\n  const defaultRef = useRef<HTMLDivElement>(null);\n  const containerRef = props.containerRef || defaultRef;\n  const boxRef = useRef<HTMLDivElement>(null);\n\n  let state = useRef<SelectionState>({}).current;\n\n  const drawSelectionBox = () => {\n    if (state.rafId) {\n      cancelAnimationFrame(state.rafId);\n    }\n\n    if (!state.startPoint || !state.endPoint || !state.boundaryRect) return;\n\n    const startPoint = state.startPoint;\n    const endPoint = state.endPoint;\n    const initialScrollTop = startPoint.scrollTop || 0;\n    const currentScrollTop = containerRef.current?.scrollTop || 0;\n\n    const newRect = {\n      left: Math.min(startPoint.x, endPoint.x),\n      top: Math.min(startPoint.y, endPoint.y),\n      width: Math.abs(startPoint.x - endPoint.x),\n      height: Math.abs(startPoint.y - endPoint.y),\n    };\n\n    // convert box coords to be relative to container and not viewport\n    newRect.left -= state.boundaryRect.left;\n    newRect.top -= state.boundaryRect.top;\n\n    // take initial scroll of container into account\n    newRect.top += initialScrollTop;\n\n    // scroll diff between drag start and now (auto scroll or mouse wheel)\n    const scrollDiff = currentScrollTop - initialScrollTop;\n    const scrollValue = Math.abs(scrollDiff);\n\n    // top needs to be changed only if scroll direction is top\n    if (scrollDiff < 0) {\n      newRect.top -= scrollValue;\n    }\n\n    // height needs to be changed regardless of direction and method\n    newRect.height += scrollValue;\n\n    const boundedRect = state.boundaryRect\n      ? restrictResizableWithinBoundary(newRect, state.boundaryRect)\n      : {...newRect};\n\n    if (boxRef.current) {\n      state.rafId = requestAnimationFrame(() => {\n        if (boxRef.current) {\n          boxRef.current.style.display = `block`;\n          boxRef.current.style.transform = `translate(${boundedRect.left}px, ${boundedRect.top}px)`;\n          boxRef.current.style.width = `${boundedRect.width}px`;\n          boxRef.current.style.height = `${boundedRect.height}px`;\n        }\n        state.rafId = undefined;\n      });\n    }\n\n    // convert rect back to absolute for intersection testing\n    const absoluteRect = {\n      ...boundedRect,\n      left: boundedRect.left + state.boundaryRect.left,\n      top: boundedRect.top + state.boundaryRect.top - currentScrollTop,\n    };\n\n    for (const [, selectable] of mouseSelectables) {\n      const intersect = rectsIntersect(selectable.rect, absoluteRect);\n      if (intersect && !state.selectedIds?.has(selectable.id)) {\n        state.selectedIds?.add(selectable.id);\n        selectable.onSelected?.();\n      } else if (!intersect && state.selectedIds?.has(selectable.id)) {\n        state.selectedIds?.delete(selectable.id);\n        selectable.onDeselected?.();\n      }\n    }\n  };\n\n  const pointerEvents = usePointerEvents({\n    minimumMovement: 4,\n    onPointerDown,\n    onMoveStart: e => {\n      if (activeInteraction) {\n        return false;\n      }\n      updateRects(mouseSelectables);\n      state = {\n        selectedIds: new Set(),\n      };\n      const el = containerRef.current;\n      state.startPoint = {\n        x: e.clientX,\n        y: e.clientY,\n        scrollTop: el?.scrollTop || 0,\n      };\n\n      state.scrollListener = e => {\n        if (!state.startPoint) return;\n        // update rects on scroll, because we are using relative position\n        updateRects(mouseSelectables);\n        if (state.boundaryRect?.height) {\n          state.boundaryRect.height = (e.target as HTMLElement).scrollHeight;\n        }\n        // draw selection box (for autoscroll and mousewheel)\n        drawSelectionBox();\n      };\n\n      if (el) {\n        const rect = el.getBoundingClientRect();\n        el.addEventListener('scroll', state.scrollListener);\n        state.boundaryRect = {\n          top: rect.top,\n          left: rect.left,\n          height: el.scrollHeight,\n          heightWithoutScroll: rect.height,\n          width: el.scrollWidth,\n        };\n      }\n    },\n    onMove: e => {\n      state.endPoint = {x: e.clientX, y: e.clientY};\n\n      if (state.boundaryRect && containerRef.current) {\n        const reachedBottomEdge =\n          e.clientY + 20 >\n          state.boundaryRect.heightWithoutScroll + state.boundaryRect.top;\n        const reachedTopEdge = e.clientY - 20 < state.boundaryRect.top;\n\n        if (reachedBottomEdge) {\n          containerRef.current.scrollBy({top: 10});\n        } else if (reachedTopEdge) {\n          containerRef.current.scrollBy({top: -10});\n        }\n      }\n\n      drawSelectionBox();\n    },\n    onMoveEnd: () => {\n      if (state.rafId) {\n        cancelAnimationFrame(state.rafId);\n      }\n      if (containerRef.current && state.scrollListener) {\n        containerRef.current.removeEventListener(\n          'scroll',\n          state.scrollListener\n        );\n      }\n      if (boxRef.current) {\n        boxRef.current.style.display = `none`;\n        boxRef.current.style.transform = '';\n        boxRef.current.style.width = '';\n        boxRef.current.style.height = '';\n      }\n      state = {};\n    },\n  });\n\n  return {\n    containerProps: {\n      ...pointerEvents.domProps,\n      ref: containerRef,\n    },\n    boxProps: {ref: boxRef},\n  };\n}\n","import {DriveEntry} from '../drive-entry';\nimport {usePaginatedEntries} from './use-paginated-entries';\n\nexport function useEntries(options: {userId?: number} = {}): DriveEntry[] {\n  const query = usePaginatedEntries(options);\n  if (!query.data) return [];\n  return query.data.pages.flatMap(p => p.data);\n}\n","import {driveState, useDriveStore} from '../drive-store';\nimport {getAllEntries} from './queries/use-paginated-entries';\nimport {DriveEntry, DriveFolder} from './drive-entry';\nimport {useEntries} from './queries/use-entries';\nimport {useFolders} from './queries/use-folders';\n\nexport function useSelectedEntries(): DriveEntry[] {\n  const ids = useDriveStore(s => s.selectedEntries);\n  const entries = useEntries();\n  return Array.from(ids)\n    .map(id => entries.find((entry: DriveEntry) => entry.id === id))\n    .filter((e): e is DriveEntry => !!e);\n}\n\nexport function useSelectedEntry(): DriveEntry | null {\n  const entries = useSelectedEntries();\n  return entries[0];\n}\n\nexport function useSelectedEntryParent(): DriveFolder | null | undefined {\n  const entry = useSelectedEntry();\n  const {data} = useFolders();\n  if (!entry || !data?.folders) return;\n  return data.folders.find(e => e.id === entry.parent_id) as DriveFolder;\n}\n\nexport function getSelectedEntries(): DriveEntry[] {\n  const ids = Array.from(driveState().selectedEntries);\n  const allEntries = getAllEntries();\n  return ids\n    .map(id => allEntries.find((entry: DriveEntry) => entry.id === id))\n    .filter((e): e is DriveEntry => !!e);\n}\n","import {useMediaQuery} from '@ui/utils/hooks/use-media-query';\n\nexport function useIsTouchDevice() {\n  return useMediaQuery('((pointer: coarse))');\n}\n","import {\n  ConnectedDraggable,\n  useDraggable,\n} from '@ui/interactions/dnd/use-draggable';\nimport {driveState, useDriveStore} from '../drive-store';\nimport {getSelectedEntries} from '../files/use-selected-entries';\nimport {useDroppable} from '@ui/interactions/dnd/use-droppable';\nimport {\n  folderAcceptsDrop,\n  useFolderDropAction,\n} from '../files/use-folder-drop-action';\nimport {DriveEntry, DriveFolder} from '../files/drive-entry';\nimport {useRef, useState} from 'react';\nimport clsx from 'clsx';\nimport {FileEntry} from '@common/uploads/file-entry';\nimport {useMouseSelectable} from '@ui/interactions/dnd/mouse-selection/use-mouse-selectable';\nimport {TrashPage} from '@app/drive/drive-page/drive-page';\nimport {useIsTouchDevice} from '@ui/utils/hooks/is-touch-device';\n\nexport function useFileViewDnd<T extends HTMLElement = HTMLElement>(\n  destination: DriveEntry,\n) {\n  const isTouchDevice = useIsTouchDevice();\n  const ref = useRef<T>(null);\n  const {onDrop} = useFolderDropAction(destination);\n  const [isDragOver, setIsDragOver] = useState(false);\n  const isDragging = useDriveStore(s =>\n    s.entriesBeingDragged.includes(destination.id),\n  );\n  const activePage = useDriveStore(s => s.activePage);\n\n  const {draggableProps} = useDraggable({\n    disabled: !!isTouchDevice || activePage === TrashPage,\n    id: destination.id,\n    type: 'fileEntry',\n    ref,\n    hidePreview: true,\n    onDragStart: (e, target: ConnectedDraggable<FileEntry[]>) => {\n      if (!driveState().selectedEntries.has(destination.id)) {\n        driveState().selectEntries([destination.id]);\n      }\n      driveState().setEntriesBeingDragged(target.getData().map(e => e.id));\n    },\n    onDragEnd: () => {\n      driveState().setEntriesBeingDragged([]);\n    },\n    getData: () => getSelectedEntries(),\n  });\n\n  const {droppableProps} = useDroppable<T>({\n    id: destination.id,\n    disabled: isTouchDevice || destination.type !== 'folder',\n    ref,\n    types: ['fileEntry', 'nativeFile'],\n    acceptsDrop: target =>\n      folderAcceptsDrop(target, destination as DriveFolder),\n    onDragEnter: () => setIsDragOver(true),\n    onDragLeave: () => setIsDragOver(false),\n    onDrop,\n  });\n\n  useMouseSelectable({\n    id: destination.id,\n    ref,\n    onSelected: () => {\n      driveState().selectEntries([destination.id], true);\n    },\n    onDeselected: () => {\n      driveState().deselectEntries([destination.id]);\n    },\n  });\n\n  const itemClassName = clsx(\n    isDragging && 'opacity-20',\n    isDragOver && 'ring ring-offset-4 ring-primary bg-primary-light/10 rounded',\n  );\n\n  return {\n    draggableProps,\n    droppableProps,\n    isDragOver,\n    isDragging,\n    itemClassName,\n    ref,\n  };\n}\n","import {DriveEntry} from '../../files/drive-entry';\nimport {RowElementProps} from '@common/ui/tables/table-row';\nimport {mergeProps} from '@react-aria/utils';\nimport {useFileViewDnd} from '../use-file-view-dnd';\nimport clsx from 'clsx';\nimport React, {useContext} from 'react';\nimport {driveState} from '../../drive-store';\nimport {TableContext} from '@common/ui/tables/table-context';\n\nexport function FileTableRow({\n  item,\n  children,\n  className,\n  ...domProps\n}: RowElementProps<DriveEntry>) {\n  const {isCollapsedMode} = useContext(TableContext);\n  const {draggableProps, droppableProps, itemClassName, ref} =\n    useFileViewDnd<HTMLDivElement>(item);\n\n  return (\n    <div\n      className={clsx(className, itemClassName)}\n      ref={ref}\n      {...mergeProps(draggableProps, droppableProps, domProps, {\n        onContextMenu: (e: React.MouseEvent) => {\n          e.preventDefault();\n          e.stopPropagation();\n          if (!isCollapsedMode) {\n            if (!driveState().selectedEntries.has(item.id)) {\n              driveState().selectEntries([item.id]);\n            }\n            driveState().setContextMenuData({x: e.clientX, y: e.clientY});\n          }\n        },\n      })}\n    >\n      {children}\n    </div>\n  );\n}\n","import {useCallback} from 'react';\nimport {getPathForFolder, TrashPage} from '../drive-page/drive-page';\nimport {driveState} from '../drive-store';\nimport {DriveEntry} from '../files/drive-entry';\nimport {getSelectedEntries} from '../files/use-selected-entries';\nimport {useNavigate} from '@common/ui/navigation/use-navigate';\nimport {useParams} from 'react-router-dom';\n\nexport function useViewItemActionHandler() {\n  const navigate = useNavigate();\n  const {userId} = useParams();\n\n  const performViewItemAction = useCallback(\n    (entry: DriveEntry) => {\n      if (entry && entry.type === 'folder') {\n        if (driveState().activePage === TrashPage) {\n          driveState().setActiveActionDialog('trashFolderBlock', [entry]);\n        } else {\n          navigate(getPathForFolder(entry.hash, userId ? parseInt(userId) : undefined));\n        }\n      } else {\n        const selectedEntries = getSelectedEntries();\n        driveState().setActiveActionDialog(\n          'preview',\n          selectedEntries.length ? selectedEntries : [entry],\n        );\n      }\n    },\n    [navigate, userId],\n  );\n\n  return {performViewItemAction};\n}\n","import {useMutation} from '@tanstack/react-query';\nimport {apiClient, queryClient} from '@common/http/query-client';\nimport {FetchShareableLinkResponse} from './use-entry-shareable-link';\nimport {DriveQueryKeys} from '../../drive-query-keys';\nimport {message} from '@ui/i18n/message';\nimport {showHttpErrorToast} from '@common/http/show-http-error-toast';\n\nfunction createShareableLink(\n  entryId?: number | null,\n): Promise<FetchShareableLinkResponse> {\n  if (!entryId) {\n    return Promise.reject(new Error('Invalid entry id'));\n  }\n  return apiClient\n    .post(`file-entries/${entryId}/shareable-link`)\n    .then(response => response.data);\n}\n\ninterface Payload {\n  entryId: number;\n}\nexport function useCreateShareableLink() {\n  return useMutation({\n    mutationFn: ({entryId}: Payload) => createShareableLink(entryId),\n    onSuccess: (data, {entryId}) => {\n      queryClient.setQueryData<FetchShareableLinkResponse>(\n        DriveQueryKeys.fetchEntryShareableLink(entryId),\n        data,\n      );\n    },\n    onError: err => showHttpErrorToast(err, message('Could not create link')),\n  });\n}\n","import {apiClient} from '@common/http/query-client';\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\nimport {toast} from '@ui/toast/toast';\nimport {Tag} from '@common/tags/tag';\nimport {invalidateEntryQueries} from '../../drive-query-keys';\nimport {message} from '@ui/i18n/message';\nimport {useMutation} from '@tanstack/react-query';\nimport {showHttpErrorToast} from '@common/http/show-http-error-toast';\n\ninterface Response extends BackendResponse {\n  tag: Tag;\n}\n\ninterface Payload {\n  entryIds: number[];\n}\n\nfunction addStarToEntries({entryIds}: Payload): Promise<Response> {\n  return apiClient\n    .post('file-entries/star', {entryIds})\n    .then(response => response.data);\n}\n\nexport function useAddStarToEntries() {\n  return useMutation({\n    mutationFn: (payload: Payload) => addStarToEntries(payload),\n    onSuccess: (data, {entryIds}) => {\n      invalidateEntryQueries();\n      toast(\n        message('Starred [one 1 item|other :count items]', {\n          values: {count: entryIds.length},\n        }),\n      );\n    },\n    onError: err => showHttpErrorToast(err, message('Could not star items')),\n  });\n}\n","import {apiClient} from '@common/http/query-client';\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\nimport {toast} from '@ui/toast/toast';\nimport {Tag} from '@common/tags/tag';\nimport {invalidateEntryQueries} from '../../drive-query-keys';\nimport {message} from '@ui/i18n/message';\nimport {useMutation} from '@tanstack/react-query';\nimport {showHttpErrorToast} from '@common/http/show-http-error-toast';\n\ninterface Response extends BackendResponse {\n  tag: Tag;\n}\n\ninterface Payload {\n  entryIds: number[];\n}\n\nfunction removeStarFromEntries({entryIds}: Payload): Promise<Response> {\n  return apiClient\n    .post('file-entries/unstar', {entryIds})\n    .then(response => response.data);\n}\n\nexport function useRemoveStarFromEntries() {\n  return useMutation({\n    mutationFn: (payload: Payload) => removeStarFromEntries(payload),\n    onSuccess: (data, {entryIds}) => {\n      invalidateEntryQueries();\n      toast(\n        message('Removed star from [one 1 item|other :count items]', {\n          values: {count: entryIds.length},\n        }),\n      );\n    },\n    onError: err => showHttpErrorToast(err, message('Could not remove star')),\n  });\n}\n","import {useMutation} from '@tanstack/react-query';\nimport {apiClient, queryClient} from '@common/http/query-client';\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\nimport {DriveEntry} from '../drive-entry';\nimport {toast} from '@ui/toast/toast';\nimport {DriveQueryKeys, invalidateEntryQueries} from '../../drive-query-keys';\nimport {message} from '@ui/i18n/message';\nimport {showHttpErrorToast} from '@common/http/show-http-error-toast';\n\ninterface Response extends BackendResponse {\n  entries: DriveEntry[];\n}\n\ninterface Payload {\n  entryIds: number[];\n  destinationId?: number;\n}\n\nfunction duplicateEntries(payload: Payload): Promise<Response> {\n  return apiClient\n    .post('file-entries/duplicate', payload)\n    .then(response => response.data);\n}\n\nexport function useDuplicateEntries() {\n  return useMutation({\n    mutationFn: (payload: Payload) => {\n      toast.loading(\n        message('Duplicating [one 1 item|other :count items]...', {\n          values: {\n            count: payload.entryIds.length,\n          },\n        }),\n        {disableExitAnimation: true},\n      );\n      return duplicateEntries(payload);\n    },\n    onSuccess: (r, p) => {\n      invalidateEntryQueries();\n      queryClient.invalidateQueries({\n        queryKey: DriveQueryKeys.fetchStorageSummary,\n      });\n      toast(\n        message('Duplicated [one 1 item|other :count items]', {\n          values: {count: p.entryIds.length},\n        }),\n        {disableEnterAnimation: true},\n      );\n    },\n    onError: err =>\n      showHttpErrorToast(err, message('Could not duplicate items'), null, {\n        disableEnterAnimation: true,\n      }),\n  });\n}\n","import {useMutation} from '@tanstack/react-query';\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\nimport {DriveEntryUser} from '../../files/drive-entry';\nimport {apiClient} from '@common/http/query-client';\nimport {invalidateEntryQueries} from '../../drive-query-keys';\n\ninterface Response extends BackendResponse {\n  users: DriveEntryUser[];\n}\n\ninterface Payload {\n  userId: number | 'me';\n  entryIds: number[];\n}\n\nexport function useUnshareEntries() {\n  return useMutation({\n    mutationFn: (payload: Payload) => unshareEntries(payload),\n    onSuccess: () => {\n      return invalidateEntryQueries();\n    },\n  });\n}\n\nfunction unshareEntries({entryIds, ...payload}: Payload): Promise<Response> {\n  return apiClient\n    .post(`file-entries/${entryIds.join(',')}/unshare`, payload)\n    .then(response => response.data);\n}\n","import {useMutation} from '@tanstack/react-query';\nimport {apiClient} from '@common/http/query-client';\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\nimport {toast} from '@ui/toast/toast';\nimport {invalidateEntryQueries} from '../../drive-query-keys';\nimport {message} from '@ui/i18n/message';\nimport {showHttpErrorToast} from '@common/http/show-http-error-toast';\n\ninterface Response extends BackendResponse {}\n\ninterface Payload {\n  entryIds: number[];\n}\n\nexport function useRestoreEntries() {\n  return useMutation({\n    mutationFn: (payload: Payload) => restoreEntries(payload),\n    onSuccess: (r, p) => {\n      invalidateEntryQueries();\n      toast(\n        message('Restored [one 1 item|other :count items]', {\n          values: {count: p.entryIds.length},\n        }),\n      );\n    },\n    onError: err => showHttpErrorToast(err, message('Could not restore items')),\n  });\n}\n\nfunction restoreEntries(payload: Payload): Promise<Response> {\n  return apiClient\n    .post('file-entries/restore', payload)\n    .then(response => response.data);\n}\n","import {message} from '@ui/i18n/message';\nimport {PersonAddIcon} from '@ui/icons/material/PersonAdd';\nimport {driveState, useDriveStore} from '../drive-store';\nimport {EntryAction} from './entry-action';\nimport {DriveEntry} from '../files/drive-entry';\nimport {RemoveRedEyeIcon} from '@ui/icons/material/RemoveRedEye';\nimport {LinkIcon} from '@ui/icons/material/Link';\nimport {useCreateShareableLink} from '../shareable-link/queries/create-shareable-link';\nimport {StarIcon} from '@ui/icons/material/Star';\nimport {useAddStarToEntries} from '../files/queries/use-add-star-to-entries';\nimport {StarOutlineIcon} from '@ui/icons/material/StarOutline';\nimport {useRemoveStarFromEntries} from '../files/queries/use-remove-star-from-entries';\nimport {DriveFileMoveIcon} from '@ui/icons/material/DriveFileMove';\nimport {DriveFileRenameOutlineIcon} from '@ui/icons/material/DriveFileRenameOutline';\nimport {ContentCopyIcon} from '@ui/icons/material/ContentCopy';\nimport {useDuplicateEntries} from '../files/queries/use-duplicate-entries';\nimport {FileDownloadIcon} from '@ui/icons/material/FileDownload';\nimport {DeleteIcon} from '@ui/icons/material/Delete';\nimport {SharesPage, TrashPage} from '../drive-page/drive-page';\nimport {useDeleteEntries} from '../files/queries/use-delete-entries';\nimport {useUnshareEntries} from '../share-dialog/queries/use-unshare-entries';\nimport {toast} from '@ui/toast/toast';\nimport {showHttpErrorToast} from '@common/http/show-http-error-toast';\nimport {useFileEntryUrls} from '@common/uploads/file-entry-urls';\nimport {useRestoreEntries} from '../files/queries/use-restore-entries';\nimport {RestoreIcon} from '@ui/icons/material/Restore';\nimport {downloadFileFromUrl} from '@ui/utils/files/download-file-from-url';\n\nexport function useEntryActions(entries: DriveEntry[]): EntryAction[] {\n  const preview = usePreviewAction(entries);\n  const share = useShareAction(entries);\n  const getLink = useGetLinkAction(entries);\n  const addStar = useAddToStarredAction(entries);\n  const removeStar = useRemoveFromStarred(entries);\n  const moveTo = useMoveToAction(entries);\n  const rename = useRenameAction(entries);\n  const makeCopy = useMakeCopyAction(entries);\n  const download = useDownloadEntriesAction(entries);\n  const deleteAction = useDeleteEntriesAction(entries);\n  const removeSharedEntries = useRemoveSharedEntriesAction(entries);\n  const restoreEntries = useRestoreEntriesAction(entries);\n\n  return [\n    preview,\n    share,\n    getLink,\n    addStar,\n    removeStar,\n    moveTo,\n    rename,\n    makeCopy,\n    download,\n    deleteAction,\n    removeSharedEntries,\n    restoreEntries,\n  ].filter(action => !!action) as EntryAction[];\n}\n\nexport function usePreviewAction(\n  entries: DriveEntry[],\n): EntryAction | undefined {\n  if (!entries.some(e => e.type !== 'folder')) return;\n  return {\n    label: message('Preview'),\n    icon: RemoveRedEyeIcon,\n    key: 'preview',\n    execute: () => {\n      driveState().setActiveActionDialog('preview', entries);\n    },\n  };\n}\n\nexport function useShareAction(entries: DriveEntry[]): EntryAction | undefined {\n  const activePage = useDriveStore(s => s.activePage);\n  if (\n    entries.length > 1 ||\n    !entries.every(e => e.permissions['files.update']) ||\n    activePage === TrashPage\n  )\n    return;\n\n  return {\n    label: message('Share'),\n    icon: PersonAddIcon,\n    key: 'share',\n    execute: () => {\n      driveState().setActiveActionDialog('share', entries);\n    },\n  };\n}\n\nfunction useGetLinkAction(entries: DriveEntry[]): EntryAction | undefined {\n  const activePage = useDriveStore(s => s.activePage);\n  const createLink = useCreateShareableLink();\n  if (\n    entries.length > 1 ||\n    !entries.every(e => e.permissions['files.update']) ||\n    activePage === TrashPage\n  ) {\n    return;\n  }\n  return {\n    label: message('Get link'),\n    icon: LinkIcon,\n    key: 'getLink',\n    execute: () => {\n      createLink.mutate({entryId: entries[0].id});\n      driveState().setActiveActionDialog('getLink', entries);\n    },\n  };\n}\n\nfunction useAddToStarredAction(entries: DriveEntry[]): EntryAction | undefined {\n  const activePage = useDriveStore(s => s.activePage);\n  const starEntries = useAddStarToEntries();\n  if (\n    entries.every(e => e.tags?.find(tag => tag.name === 'starred')) ||\n    !entries.every(e => e.permissions['files.update']) ||\n    activePage === TrashPage\n  ) {\n    return;\n  }\n  return {\n    label: message('Add to starred'),\n    icon: StarIcon,\n    key: 'addToStarred',\n    execute: () => {\n      starEntries.mutate({entryIds: entries.map(e => e.id)});\n      driveState().selectEntries([]);\n    },\n  };\n}\n\nfunction useRemoveFromStarred(entries: DriveEntry[]): EntryAction | undefined {\n  const activePage = useDriveStore(s => s.activePage);\n  const removeStar = useRemoveStarFromEntries();\n  if (\n    !entries.every(e => e.tags?.find(tag => tag.name === 'starred')) ||\n    activePage === TrashPage\n  )\n    return;\n  return {\n    label: message('Remove from starred'),\n    icon: StarOutlineIcon,\n    key: 'removeFromStarred',\n    execute: () => {\n      removeStar.mutate({entryIds: entries.map(e => e.id)});\n      driveState().selectEntries([]);\n    },\n  };\n}\n\nfunction useMoveToAction(entries: DriveEntry[]): EntryAction | undefined {\n  const activePage = useDriveStore(s => s.activePage);\n  if (\n    !entries.every(e => e.permissions['files.update']) ||\n    activePage === SharesPage ||\n    activePage === TrashPage\n  ) {\n    return;\n  }\n\n  return {\n    label: message('Move to'),\n    icon: DriveFileMoveIcon,\n    key: 'moveTo',\n    execute: () => {\n      driveState().setActiveActionDialog('moveTo', entries);\n    },\n  };\n}\n\nfunction useRenameAction(entries: DriveEntry[]): EntryAction | undefined {\n  const activePage = useDriveStore(s => s.activePage);\n  if (\n    entries.length > 1 ||\n    !entries.every(e => e.permissions['files.update']) ||\n    activePage === TrashPage\n  )\n    return;\n  return {\n    label: message('Rename'),\n    icon: DriveFileRenameOutlineIcon,\n    key: 'rename',\n    execute: () => {\n      driveState().setActiveActionDialog('rename', entries);\n    },\n  };\n}\n\nfunction useMakeCopyAction(entries: DriveEntry[]): EntryAction | undefined {\n  const activePage = useDriveStore(s => s.activePage);\n  const duplicateEntries = useDuplicateEntries();\n  if (\n    entries.length > 1 ||\n    !entries.every(e => e.permissions['files.update']) ||\n    activePage === TrashPage\n  ) {\n    return;\n  }\n  return {\n    label: message('Make a copy'),\n    icon: ContentCopyIcon,\n    key: 'makeCopy',\n    execute: () => {\n      duplicateEntries.mutate({\n        entryIds: entries.map(e => e.id),\n        destinationId: activePage?.folder?.id,\n      });\n      driveState().selectEntries([]);\n    },\n  };\n}\n\nfunction useDownloadEntriesAction(\n  entries: DriveEntry[],\n): EntryAction | undefined {\n  const {downloadUrl} = useFileEntryUrls(entries[0], {\n    downloadHashes: entries.map(e => e.hash),\n  });\n  if (!entries.every(e => e.permissions['files.download'])) return;\n  return {\n    label: message('Download'),\n    icon: FileDownloadIcon,\n    key: 'download',\n    execute: () => {\n      if (downloadUrl) {\n        downloadFileFromUrl(downloadUrl);\n      }\n      driveState().selectEntries([]);\n    },\n  };\n}\n\nexport function useDeleteEntriesAction(\n  entries: DriveEntry[],\n): EntryAction | undefined {\n  const deleteEntries = useDeleteEntries();\n  const activePage = useDriveStore(s => s.activePage);\n  if (\n    activePage === SharesPage ||\n    !entries.every(e => e.permissions['files.delete'])\n  )\n    return;\n  return {\n    label:\n      activePage === TrashPage ? message('Delete forever') : message('Remove'),\n    icon: DeleteIcon,\n    key: 'delete',\n    execute: () => {\n      if (activePage === TrashPage) {\n        driveState().setActiveActionDialog('confirmAndDeleteForever', entries);\n      } else {\n        deleteEntries.mutate({\n          entryIds: entries.map(e => e.id),\n          deleteForever: activePage === TrashPage,\n        });\n        driveState().selectEntries([]);\n      }\n    },\n  };\n}\n\nexport function useRestoreEntriesAction(\n  entries: DriveEntry[],\n): EntryAction | undefined {\n  const restoreEntries = useRestoreEntries();\n  const activePage = useDriveStore(s => s.activePage);\n  if (\n    activePage !== TrashPage ||\n    !entries.every(e => e.permissions['files.delete'])\n  )\n    return;\n  return {\n    label: message('Restore'),\n    icon: RestoreIcon,\n    key: 'restore',\n    execute: () => {\n      restoreEntries.mutate({\n        entryIds: entries.map(e => e.id),\n      });\n      driveState().selectEntries([]);\n    },\n  };\n}\n\nexport function useRemoveSharedEntriesAction(\n  entries: DriveEntry[],\n): EntryAction | undefined {\n  const unshareEntries = useUnshareEntries();\n  const activePage = useDriveStore(s => s.activePage);\n  if (activePage !== SharesPage) return;\n  return {\n    label: message('Remove'),\n    icon: DeleteIcon,\n    key: 'removeSharedEntry',\n    execute: () => {\n      unshareEntries.mutate(\n        {entryIds: entries.map(e => e.id), userId: 'me'},\n        {\n          onSuccess: (r, p) => {\n            toast(\n              message('Removed [one 1 item|other {count} items]', {\n                values: {count: p.entryIds.length},\n              }),\n            );\n          },\n          onError: err =>\n            showHttpErrorToast(err, message('Could not remove items')),\n        },\n      );\n      driveState().selectEntries([]);\n    },\n  };\n}\n","import {EntryAction} from './entry-action';\nimport {message} from '@ui/i18n/message';\nimport {driveState, useDriveStore} from '../drive-store';\nimport {DrivePage, TrashPage} from '../drive-page/drive-page';\nimport {CreateNewFolderIcon} from '@ui/icons/material/CreateNewFolder';\nimport {useDriveUploadQueue} from '../uploading/use-drive-upload-queue';\nimport {FileUploadIcon} from '@ui/icons/material/FileUpload';\nimport {DriveFolderUploadIcon} from '@ui/icons/material/DriveFolderUpload';\nimport {useDeleteEntries} from '../files/queries/use-delete-entries';\nimport {DeleteForeverIcon} from '@ui/icons/material/DeleteForever';\nimport {openUploadWindow} from '@ui/utils/files/open-upload-window';\n\nexport function useDrivePageActions(page: DrivePage): EntryAction[] {\n  const newFolder = useNewFolderAction(page);\n  const uploadFiles = useUploadFilesAction(page);\n  const uploadFolder = useUploadFolderAction(page);\n  const emptyTrash = useEmptyTrashAction(page);\n  return [newFolder, uploadFiles, uploadFolder, emptyTrash].filter(\n    action => !!action,\n  ) as EntryAction[];\n}\n\nfunction useNewFolderAction(page: DrivePage): EntryAction | undefined {\n  if (!page.folder || !page.folder.permissions['files.update']) return;\n  return {\n    label: message('New folder'),\n    icon: CreateNewFolderIcon,\n    key: 'newFolder',\n    execute: () => {\n      if (page.folder) {\n        driveState().setActiveActionDialog('newFolder', [page.folder]);\n      }\n    },\n  };\n}\n\nfunction useUploadFilesAction(page: DrivePage): EntryAction | undefined {\n  const {uploadFiles} = useDriveUploadQueue();\n  if (!page.folder || !page.folder.permissions['files.update']) return;\n  return {\n    label: message('Upload files'),\n    icon: FileUploadIcon,\n    key: 'uploadFiles',\n    execute: async () => {\n      uploadFiles(await openUploadWindow({multiple: true}));\n    },\n  };\n}\n\nfunction useUploadFolderAction(page: DrivePage): EntryAction | undefined {\n  const {uploadFiles} = useDriveUploadQueue();\n  if (!page.folder || !page.folder.permissions['files.update']) return;\n  return {\n    label: message('Upload folder'),\n    icon: DriveFolderUploadIcon,\n    key: 'uploadFolder',\n    execute: async () => {\n      uploadFiles(await openUploadWindow({directory: true}));\n    },\n  };\n}\n\nfunction useEmptyTrashAction(page: DrivePage): EntryAction | undefined {\n  const deleteEntries = useDeleteEntries();\n  const activePage = useDriveStore(s => s.activePage);\n  if (activePage !== TrashPage) return;\n  return {\n    label: message('Empty trash'),\n    icon: DeleteForeverIcon,\n    key: 'emptyTrash',\n    execute: () => {\n      deleteEntries.mutate({entryIds: [], emptyTrash: true});\n      driveState().selectEntries([]);\n    },\n  };\n}\n","import React, {createElement, ReactElement} from 'react';\nimport {Trans} from '@ui/i18n/trans';\nimport {DriveEntry} from '../files/drive-entry';\nimport {useEntryActions} from './use-entry-actions';\nimport {EntryAction} from './entry-action';\nimport {DrivePage, RootFolderPage, TrashPage} from '../drive-page/drive-page';\nimport {useDrivePageActions} from './use-drive-page-actions';\nimport {Menu, MenuItem, MenuTrigger} from '@ui/menu/menu-trigger';\n\ninterface Props {\n  children: ReactElement;\n  entries?: DriveEntry[];\n  page?: DrivePage;\n  showIfNoActions?: boolean;\n}\nexport function EntryActionMenuTrigger({\n  children,\n  entries,\n  page,\n  showIfNoActions,\n}: Props) {\n  if (page?.name === RootFolderPage.name) {\n    return (\n      <PageMenu page={RootFolderPage} showIfNoActions={showIfNoActions}>\n        {children}\n      </PageMenu>\n    );\n  }\n\n  if (page === TrashPage) {\n    return (\n      <PageMenu page={TrashPage} showIfNoActions={showIfNoActions}>\n        {children}\n      </PageMenu>\n    );\n  }\n\n  if (page?.folder) {\n    return (\n      <EntriesMenu entries={[page.folder]} showIfNoActions={showIfNoActions}>\n        {children}\n      </EntriesMenu>\n    );\n  }\n\n  if (entries?.length) {\n    return (\n      <EntriesMenu entries={entries} showIfNoActions={showIfNoActions}>\n        {children}\n      </EntriesMenu>\n    );\n  }\n\n  return null;\n}\n\ninterface EntriesContextMenuProps extends Omit<BaseMenuProps, 'actions'> {\n  entries: DriveEntry[];\n}\nfunction EntriesMenu({\n  entries,\n  children,\n  showIfNoActions,\n}: EntriesContextMenuProps) {\n  const actions = useEntryActions(entries);\n  return (\n    <BaseMenu actions={actions} showIfNoActions={showIfNoActions}>\n      {children}\n    </BaseMenu>\n  );\n}\n\ninterface PageContextMenuProps extends Omit<BaseMenuProps, 'actions'> {\n  page: DrivePage;\n  showIfNoActions?: boolean;\n}\nfunction PageMenu({page, children, showIfNoActions}: PageContextMenuProps) {\n  const actions = useDrivePageActions(page);\n  return (\n    <BaseMenu actions={actions} showIfNoActions={showIfNoActions}>\n      {children}\n    </BaseMenu>\n  );\n}\n\ninterface BaseMenuProps {\n  actions: EntryAction[];\n  children: ReactElement;\n  showIfNoActions?: boolean;\n}\nfunction BaseMenu({actions, children, showIfNoActions}: BaseMenuProps) {\n  if (!actions.length && !showIfNoActions) {\n    return null;\n  }\n  return (\n    <MenuTrigger>\n      {children}\n      <Menu>\n        {actions.map(action => {\n          return (\n            <MenuItem\n              onSelected={() => {\n                action.execute();\n              }}\n              key={action.key}\n              value={action.key}\n              startIcon={createElement(action.icon)}\n            >\n              <Trans {...action.label} />\n            </MenuItem>\n          );\n        })}\n      </Menu>\n    </MenuTrigger>\n  );\n}\n","import {ColumnConfig} from '@common/datatable/column-config';\r\nimport {DriveEntry} from '../../files/drive-entry';\r\nimport {Trans} from '@ui/i18n/trans';\r\nimport {FormattedDate} from '@ui/i18n/formatted-date';\r\nimport React, {useContext} from 'react';\r\nimport memoize from 'nano-memoize';\r\nimport {TableContext} from '@common/ui/tables/table-context';\r\nimport {Checkbox} from '@ui/forms/toggle/checkbox';\r\nimport {EntryActionMenuTrigger} from '@app/drive/entry-actions/entry-action-menu-trigger';\r\nimport {IconButton} from '@ui/buttons/icon-button';\r\nimport {MoreVertIcon} from '@ui/icons/material/MoreVert';\r\nimport clsx from 'clsx';\r\nimport {prettyBytes} from '@ui/utils/files/pretty-bytes';\r\nimport {FileThumbnail} from '@common/uploads/components/file-type-icon/file-thumbnail';\r\n\r\nconst formatFileSize = memoize(bytes => {\r\n  return prettyBytes(bytes);\r\n});\r\n\r\nexport const fileTableColumns: ColumnConfig<DriveEntry>[] = [\r\n  {\r\n    key: 'name',\r\n    allowsSorting: true,\r\n    header: () => <Trans message=\"Name\" />,\r\n    visibleInMode: 'all',\r\n    width: 'flex-3 min-w-200',\r\n    body: entry => <FileNameColumn entry={entry} />,\r\n  },\r\n  {\r\n    key: 'updated_at',\r\n    allowsSorting: true,\r\n    maxWidth: 'max-w-184',\r\n    header: () => <Trans message=\"Last modified\" />,\r\n    body: user => <FormattedDate date={user.updated_at} />,\r\n  },\r\n  {\r\n    key: 'file_size',\r\n    allowsSorting: true,\r\n    header: () => <Trans message=\"Size\" />,\r\n    maxWidth: 'max-w-144',\r\n    body: entry => formatFileSize(entry.file_size) ?? '-',\r\n  },\r\n  {\r\n    key: 'actions',\r\n    hideHeader: true,\r\n    header: () => <Trans message=\"Actions\" />,\r\n    align: 'end',\r\n    width: 'w-42 flex-shrink-0',\r\n    visibleInMode: 'all',\r\n    body: entry => <ActionsColumn entry={entry} />,\r\n  },\r\n];\r\n\r\nfunction FileNameColumn({entry}: {entry: DriveEntry}) {\r\n  const {isCollapsedMode} = useContext(TableContext);\r\n  const sizeClassName = isCollapsedMode ? 'w-30 h-30' : 'w-24 h-24';\r\n  return (\r\n    <div className=\"flex items-center gap-14\">\r\n      <FileThumbnail\r\n        className={clsx('rounded', sizeClassName)}\r\n        iconClassName={sizeClassName}\r\n        file={entry}\r\n      />\r\n      <div className=\"min-w-0\">\r\n        <div className=\"overflow-hidden overflow-ellipsis\">{entry.name}</div>\r\n        {isCollapsedMode && (\r\n          <div className=\"mt-4 flex items-center text-xs text-muted\">\r\n            <FormattedDate date={entry.updated_at} />\r\n            <div>·</div>\r\n            <div>{formatFileSize(entry.file_size)}</div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\ninterface ActionsBodyProps {\r\n  entry: DriveEntry;\r\n}\r\nfunction ActionsColumn({entry}: ActionsBodyProps) {\r\n  const {selectedRows} = useContext(TableContext);\r\n  return selectedRows.length ? (\r\n    <Checkbox\r\n      className=\"mr-8 block\"\r\n      checked={selectedRows.includes(entry.id)}\r\n    />\r\n  ) : (\r\n    <EntryActionMenuTrigger entries={[entry]}>\r\n      <IconButton className=\"text-muted\">\r\n        <MoreVertIcon />\r\n      </IconButton>\r\n    </EntryActionMenuTrigger>\r\n  );\r\n}\r\n","import {DriveEntry} from '../../files/drive-entry';\r\nimport React, {useMemo} from 'react';\r\nimport {Table} from '@common/ui/tables/table';\r\nimport {\r\n  DriveSortDescriptor,\r\n  driveState,\r\n  useDriveStore,\r\n} from '../../drive-store';\r\nimport {FileTableRow} from './file-table-row';\r\nimport {useViewItemActionHandler} from '../use-view-item-action-handler';\r\nimport {fileTableColumns} from './file-table-columns';\r\n\r\ninterface Props {\r\n  entries: DriveEntry[];\r\n}\r\nexport function FileTable({entries}: Props) {\r\n  const {performViewItemAction} = useViewItemActionHandler();\r\n  const selectedEntries = useDriveStore(s => s.selectedEntries);\r\n  const sortDescriptor = useDriveStore(s => s.sortDescriptor);\r\n\r\n  const selectedRows = useMemo(() => {\r\n    return [...selectedEntries];\r\n  }, [selectedEntries]);\r\n\r\n  return (\r\n    <Table\r\n      columns={fileTableColumns}\r\n      data={entries}\r\n      sortDescriptor={sortDescriptor}\r\n      onSortChange={value => {\r\n        driveState().setSortDescriptor(value as DriveSortDescriptor);\r\n      }}\r\n      onAction={performViewItemAction}\r\n      selectedRows={selectedRows}\r\n      selectionStyle=\"highlight\"\r\n      renderRowAs={FileTableRow}\r\n      onSelectionChange={value => {\r\n        driveState().selectEntries(value as number[]);\r\n      }}\r\n    />\r\n  );\r\n}\r\n","import React, {ComponentPropsWithoutRef, ReactNode} from 'react';\r\nimport clsx from 'clsx';\r\nimport {FileThumbnail} from '@common/uploads/components/file-type-icon/file-thumbnail';\r\nimport {DriveEntry} from '../../files/drive-entry';\r\n\r\ninterface BaseFileGridItemProps extends ComponentPropsWithoutRef<'div'> {\r\n  entry: DriveEntry;\r\n  className?: string;\r\n  isSelected?: boolean;\r\n  isMobileMode?: boolean;\r\n  footerAdornment?: ReactNode;\r\n}\r\n\r\nexport const BaseFileGridItem = React.forwardRef<\r\n  HTMLDivElement,\r\n  BaseFileGridItemProps\r\n>(\r\n  (\r\n    {entry, className, isSelected, isMobileMode, footerAdornment, ...domProps},\r\n    ref,\r\n  ) => {\r\n    return (\r\n      <div\r\n        {...domProps}\r\n        ref={ref}\r\n        className={clsx(\r\n          'grid-item flex aspect-square select-none flex-col overflow-hidden rounded border shadow outline-none transition-shadow-opacity dark:bg-alt',\r\n          isSelected && 'border-primary',\r\n          className,\r\n        )}\r\n      >\r\n        <div className=\"relative min-h-0 flex-auto\">\r\n          <FileThumbnail\r\n            className=\"h-full w-full\"\r\n            iconClassName=\"block w-70 h-70 absolute m-auto inset-0\"\r\n            file={entry}\r\n          />\r\n        </div>\r\n        <Footer\r\n          entry={entry}\r\n          isSelected={isSelected}\r\n          isMobile={isMobileMode}\r\n          adornment={footerAdornment}\r\n        />\r\n      </div>\r\n    );\r\n  },\r\n);\r\n\r\ninterface FooterProps {\r\n  entry: DriveEntry;\r\n  isSelected?: boolean;\r\n  isMobile?: boolean;\r\n  adornment?: ReactNode;\r\n}\r\nfunction Footer({entry, isSelected, isMobile, adornment}: FooterProps) {\r\n  return (\r\n    <div\r\n      className={clsx(\r\n        'flex h-48 flex-shrink-0 items-center text-sm',\r\n        isMobile ? 'justify-between gap-10 pl-18 pr-2' : 'justify-center px-16',\r\n        isSelected && 'bg-primary-light/20',\r\n      )}\r\n    >\r\n      <div className=\"min-w-0 overflow-hidden overflow-ellipsis whitespace-nowrap\">\r\n        {entry.name}\r\n      </div>\r\n      {adornment}\r\n    </div>\r\n  );\r\n}\r\n","import React, {useContext} from 'react';\r\nimport {DriveEntry} from '../../files/drive-entry';\r\nimport {driveState, useDriveStore} from '../../drive-store';\r\nimport {mergeProps} from '@react-aria/utils';\r\nimport {useFileViewDnd} from '../use-file-view-dnd';\r\nimport {useViewItemActionHandler} from '../use-view-item-action-handler';\r\nimport {BaseFileGridItem} from './base-file-grid-item';\r\nimport {EntryActionMenuTrigger} from '../../entry-actions/entry-action-menu-trigger';\r\nimport {IconButton} from '@ui/buttons/icon-button';\r\nimport {MoreVertIcon} from '@ui/icons/material/MoreVert';\r\nimport {Checkbox} from '@ui/forms/toggle/checkbox';\r\nimport {DashboardLayoutContext} from '@common/ui/dashboard-layout/dashboard-layout-context';\r\nimport {isCtrlOrShiftPressed} from '@ui/utils/keybinds/is-ctrl-or-shift-pressed';\r\nimport {usePointerEvents} from '@ui/interactions/use-pointer-events';\r\nimport {createEventHandler} from '@ui/utils/dom/create-event-handler';\r\n\r\ninterface FileGridItemProps {\r\n  entry: DriveEntry;\r\n}\r\nexport function FileGridItem({entry}: FileGridItemProps) {\r\n  const isSelected = useDriveStore(s => s.selectedEntries.has(entry.id));\r\n  const {performViewItemAction} = useViewItemActionHandler();\r\n  const {isMobileMode} = useContext(DashboardLayoutContext);\r\n\r\n  const {draggableProps, droppableProps, itemClassName, ref} =\r\n    useFileViewDnd<HTMLDivElement>(entry);\r\n\r\n  const toggleEntry = () => {\r\n    if (isSelected) {\r\n      driveState().deselectEntries([entry.id]);\r\n    } else {\r\n      driveState().selectEntries([entry.id], true);\r\n    }\r\n  };\r\n\r\n  const pressHandler = (e: PointerEvent, el: HTMLElement) => {\r\n    if (isMobileMode) {\r\n      if (driveState().selectedEntries.size) {\r\n        toggleEntry();\r\n      } else {\r\n        performViewItemAction(entry);\r\n      }\r\n    } else {\r\n      if (isCtrlOrShiftPressed(e)) {\r\n        toggleEntry();\r\n      } else {\r\n        driveState().selectEntries([entry.id]);\r\n      }\r\n    }\r\n  };\r\n\r\n  const {domProps: pressProps} = usePointerEvents({\r\n    onLongPress: isMobileMode ? () => toggleEntry() : undefined,\r\n    onPress: pressHandler,\r\n  });\r\n\r\n  const keyboardHandler: React.KeyboardEventHandler = e => {\r\n    if (e.key === 'Enter' || e.key === ' ') {\r\n      e.preventDefault();\r\n      e.stopPropagation();\r\n      performViewItemAction(entry);\r\n    }\r\n  };\r\n\r\n  const contextMenuHandler: React.MouseEventHandler = e => {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n    if (!isMobileMode) {\r\n      if (!driveState().selectedEntries.has(entry.id)) {\r\n        driveState().selectEntries([entry.id]);\r\n      }\r\n      driveState().setContextMenuData({x: e.clientX, y: e.clientY});\r\n    }\r\n  };\r\n\r\n  return (\r\n    <BaseFileGridItem\r\n      {...mergeProps(draggableProps, droppableProps, pressProps, {\r\n        onKeyDown: createEventHandler(keyboardHandler),\r\n      })}\r\n      ref={ref}\r\n      entry={entry}\r\n      isSelected={isSelected}\r\n      isMobileMode={!!isMobileMode}\r\n      tabIndex={-1}\r\n      onDoubleClick={e => {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        if (!isMobileMode) {\r\n          performViewItemAction(entry);\r\n        }\r\n      }}\r\n      footerAdornment={\r\n        isMobileMode && (\r\n          <FooterAdornment entry={entry} isSelected={isSelected} />\r\n        )\r\n      }\r\n      onContextMenu={createEventHandler(contextMenuHandler)}\r\n      className={itemClassName}\r\n    />\r\n  );\r\n}\r\n\r\ninterface FooterProps {\r\n  entry: DriveEntry;\r\n  isSelected?: boolean;\r\n}\r\nfunction FooterAdornment({entry, isSelected}: FooterProps) {\r\n  const anySelected = useDriveStore(s => s.selectedEntries.size);\r\n\r\n  if (anySelected) {\r\n    return <Checkbox className=\"mr-8 block\" checked={isSelected} />;\r\n  }\r\n\r\n  return (\r\n    <EntryActionMenuTrigger entries={[entry]}>\r\n      <IconButton\r\n        className=\"text-muted\"\r\n        onPointerDown={e => {\r\n          e.stopPropagation();\r\n        }}\r\n      >\r\n        <MoreVertIcon />\r\n      </IconButton>\r\n    </EntryActionMenuTrigger>\r\n  );\r\n}\r\n","import {FileGridItem} from './file-grid-item';\r\nimport React from 'react';\r\nimport {DriveEntry} from '../../files/drive-entry';\r\n\r\ninterface FileGridProps {\r\n  entries: DriveEntry[];\r\n}\r\nexport function FileGrid({entries}: FileGridProps) {\r\n  return (\r\n    <div className=\"file-grid-container\">\r\n      <div className=\"file-grid\">\r\n        {entries.map(entry => {\r\n          return <FileGridItem key={entry.id} entry={entry} />;\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import {useQuery} from '@tanstack/react-query';\nimport {DriveFolder} from '../drive-entry';\nimport {DriveQueryKeys} from '../../drive-query-keys';\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\nimport {apiClient} from '@common/http/query-client';\n\ninterface FolderPathResponse extends BackendResponse {\n  path: DriveFolder[];\n}\n\ntype Params = Record<string, string | number | null>;\n\ninterface Props {\n  hash?: string;\n  params?: Params;\n  isEnabled?: boolean;\n}\nexport function useFolderPath({hash, params, isEnabled = true}: Props) {\n  return useQuery({\n    queryKey: DriveQueryKeys.fetchFolderPath(hash!, params),\n    queryFn: () => fetchFolderPath(hash!, params),\n    enabled: !!hash && isEnabled,\n  });\n}\n\nfunction fetchFolderPath(\n  hash: string,\n  params?: Params,\n): Promise<FolderPathResponse> {\n  return apiClient\n    .get(`folders/${hash}/path`, {params})\n    .then(response => response.data);\n}\n","import React, {ReactNode, useContext} from 'react';\r\nimport {useDriveStore} from './drive-store';\r\nimport {\r\n  DrivePage,\r\n  makeFolderPage,\r\n  RootFolderPage,\r\n  SharesPage,\r\n  TrashPage,\r\n} from './drive-page/drive-page';\r\nimport {Breadcrumb} from '@ui/breadcrumbs/breadcrumb';\r\nimport {useAuth} from '@common/auth/use-auth';\r\nimport {useFolderPath} from './files/queries/use-folder-path';\r\nimport {EntryActionMenuTrigger} from './entry-actions/entry-action-menu-trigger';\r\nimport {useActiveWorkspace} from '@common/workspace/active-workspace-id-context';\r\nimport {ButtonBase} from '@ui/buttons/button-base';\r\nimport {BreadcrumbItem} from '@ui/breadcrumbs/breadcrumb-item';\r\nimport {ArrowDropDownIcon} from '@ui/icons/material/ArrowDropDown';\r\nimport {MessageDescriptor} from '@ui/i18n/message-descriptor';\r\nimport {MixedText} from '@ui/i18n/mixed-text';\r\nimport {useNavigate} from '@common/ui/navigation/use-navigate';\r\nimport {DashboardLayoutContext} from '@common/ui/dashboard-layout/dashboard-layout-context';\r\n\r\ninterface ItemConfig {\r\n  page: DrivePage;\r\n  label: MessageDescriptor | string;\r\n}\r\n\r\ninterface PageBreadcrumbsProps {\r\n  className?: string;\r\n}\r\nexport function PageBreadcrumbs({className}: PageBreadcrumbsProps) {\r\n  const {isMobileMode} = useContext(DashboardLayoutContext);\r\n  const navigate = useNavigate();\r\n  const page = useDriveStore(s => s.activePage);\r\n  const folder = page?.folder;\r\n  const query = useFolderPath({\r\n    hash: folder?.hash,\r\n    isEnabled: folder?.hash !== RootFolderPage.folder.hash,\r\n  });\r\n  const workspace = useActiveWorkspace();\r\n  const rootItem = useRootItem();\r\n  // wait until path, folder and workspace load fully\r\n  const isLoading =\r\n    !page ||\r\n    !workspace ||\r\n    (page.isFolderPage && !folder) ||\r\n    query.fetchStatus !== 'idle';\r\n\r\n  let content: ReactNode;\r\n\r\n  if (isLoading) {\r\n    content = null;\r\n  } else {\r\n    const items: ItemConfig[] = rootItem ? [rootItem] : [];\r\n\r\n    if (query.data) {\r\n      query.data.path.forEach(parent => {\r\n        items.push({\r\n          page: makeFolderPage(parent),\r\n          label: parent.name,\r\n        });\r\n      });\r\n    }\r\n\r\n    content = (\r\n      <Breadcrumb\r\n        className={className}\r\n        size={isMobileMode ? 'md' : 'lg'}\r\n        currentIsClickable\r\n      >\r\n        {items.map((item, index) => {\r\n          const isLast = index === items.length - 1;\r\n          if (!isLast) {\r\n            return (\r\n              <BreadcrumbItem\r\n                key={item.page.uniqueId}\r\n                onSelected={() => {\r\n                  navigate(item.page.path);\r\n                }}\r\n              >\r\n                <MixedText value={item.label} />\r\n              </BreadcrumbItem>\r\n            );\r\n          }\r\n\r\n          return (\r\n            <BreadcrumbItem key={item.page.uniqueId}>\r\n              {({isMenuItem}) => {\r\n                if (\r\n                  isMenuItem ||\r\n                  (!item.page.folder && item.page !== TrashPage)\r\n                ) {\r\n                  return <MixedText value={item.label} />;\r\n                }\r\n                return (\r\n                  <EntryActionMenuTrigger page={item.page} showIfNoActions>\r\n                    <ButtonBase className=\"flex items-center gap-2 rounded focus-visible:ring-offset-4\">\r\n                      <MixedText value={item.label} />\r\n                      <ArrowDropDownIcon className=\"text-muted icon-md\" />\r\n                    </ButtonBase>\r\n                  </EntryActionMenuTrigger>\r\n                );\r\n              }}\r\n            </BreadcrumbItem>\r\n          );\r\n        })}\r\n      </Breadcrumb>\r\n    );\r\n  }\r\n\r\n  return content;\r\n}\r\n\r\nfunction useRootItem(): ItemConfig | null {\r\n  const page = useDriveStore(s => s.activePage);\r\n  const workspace = useActiveWorkspace();\r\n  const {user} = useAuth();\r\n\r\n  if (!page) return null;\r\n\r\n  // in workspace\r\n  if (workspace && !workspace.default) {\r\n    if (\r\n      page?.isFolderPage &&\r\n      (page?.name === RootFolderPage.name ||\r\n        page.folder?.workspace_id === workspace.id)\r\n    ) {\r\n      return {label: workspace.name, page: RootFolderPage};\r\n    }\r\n  }\r\n\r\n  if (page?.isFolderPage) {\r\n    const owner = page.folder?.users.find(u => u.owns_entry);\r\n    // inside shared folder\r\n    if (owner?.id !== user?.id) {\r\n      return {label: SharesPage.label, page: SharesPage};\r\n    }\r\n    // if folder is currently active, root item will always be root folder page\r\n    return {label: RootFolderPage.label, page: RootFolderPage};\r\n  }\r\n\r\n  // if folder page is not active, we are already at the root\r\n  return {label: page.label, page};\r\n}\r\n","import React, {ReactNode, useEffect, useRef, useState} from 'react';\nimport clsx from 'clsx';\nimport {UseInfiniteQueryResult} from '@tanstack/react-query/src/types';\nimport {Trans} from '@ui/i18n/trans';\nimport {Button} from '@ui/buttons/button';\nimport {AnimatePresence, m} from 'framer-motion';\nimport {opacityAnimation} from '@ui/animation/opacity-animation';\nimport {ProgressCircle} from '@ui/progress/progress-circle';\n\nexport interface InfiniteScrollSentinelProps {\n  loaderMarginTop?: string;\n  children?: ReactNode;\n  loadMoreExtraContent?: ReactNode;\n  query: UseInfiniteQueryResult;\n  style?: React.CSSProperties;\n  className?: string;\n  variant?: 'infiniteScroll' | 'loadMore';\n  size?: 'sm' | 'md';\n}\n\nexport function InfiniteScrollSentinel({\n  query: {isInitialLoading, fetchNextPage, isFetchingNextPage, hasNextPage},\n  children,\n  loaderMarginTop = 'mt-24',\n  style,\n  className,\n  variant: _variant = 'infiniteScroll',\n  loadMoreExtraContent,\n  size = 'sm',\n}: InfiniteScrollSentinelProps) {\n  const sentinelRef = useRef<HTMLDivElement>(null);\n  const isLoading = isFetchingNextPage || isInitialLoading;\n  const [loadMoreClickCount, setLoadMoreClickCount] = useState(0);\n  const innerVariant =\n    _variant === 'loadMore' && loadMoreClickCount < 3\n      ? 'loadMore'\n      : 'infiniteScroll';\n\n  // don't lazy load unless sentinel has left the view after last lazy load\n  // 1. will prevent lazy loading until initial data is rendered and pushes sentinel out of view\n  // 2. when sentinel is top (chat interface) prevent load until container is scrolled to the bottom\n  // 3. when sentinel is bottom, prevent double lazy load if \"isLoading\" is false, but sentinel is still in view\n  const leftViewAfterLoading = useRef(false);\n\n  useEffect(() => {\n    const sentinelEl = sentinelRef.current;\n    if (!sentinelEl || innerVariant === 'loadMore') return;\n    const observer = new IntersectionObserver(([entry]) => {\n      if (entry.isIntersecting) {\n        if (!leftViewAfterLoading.current) return;\n\n        if (hasNextPage && !isLoading) {\n          leftViewAfterLoading.current = false;\n          fetchNextPage();\n        }\n      } else {\n        leftViewAfterLoading.current = true;\n      }\n    });\n\n    observer.observe(sentinelEl);\n    return () => {\n      observer.unobserve(sentinelEl);\n    };\n  }, [fetchNextPage, hasNextPage, isLoading, innerVariant]);\n\n  let content: ReactNode;\n\n  if (children) {\n    // children might already be wrapped in AnimatePresence, so only wrap default loader with it\n    content = isFetchingNextPage ? children : null;\n  } else if (innerVariant === 'loadMore') {\n    content = !isInitialLoading && hasNextPage && (\n      <div className={clsx('flex items-center gap-8', loaderMarginTop)}>\n        {loadMoreExtraContent}\n        <Button\n          size={size === 'md' ? 'sm' : 'xs'}\n          className={clsx(\n            size === 'sm' ? 'min-h-24 min-w-96' : 'min-h-36 min-w-112',\n          )}\n          variant=\"outline\"\n          color=\"primary\"\n          onClick={() => {\n            fetchNextPage();\n            setLoadMoreClickCount(loadMoreClickCount + 1);\n          }}\n          disabled={isLoading}\n        >\n          {loadMoreClickCount >= 2 && !isFetchingNextPage ? (\n            <Trans message=\"Load all\" />\n          ) : (\n            <Trans message=\"Show more\" />\n          )}\n        </Button>\n      </div>\n    );\n  } else {\n    content = (\n      <AnimatePresence>\n        {isFetchingNextPage && (\n          <m.div\n            className={clsx('flex w-full justify-center', loaderMarginTop)}\n            {...opacityAnimation}\n          >\n            <ProgressCircle size={size} isIndeterminate aria-label=\"loading\" />\n          </m.div>\n        )}\n      </AnimatePresence>\n    );\n  }\n\n  return (\n    <div\n      style={style}\n      className={clsx('w-full', className, hasNextPage && 'min-h-36')}\n      role=\"presentation\"\n    >\n      <div ref={sentinelRef} aria-hidden />\n      {content}\n    </div>\n  );\n}\n","import {AnimatePresence, m} from 'framer-motion';\nimport {Trans} from '@ui/i18n/trans';\nimport React from 'react';\nimport {opacityAnimation} from '@ui/animation/opacity-animation';\n\ninterface DropTargetMaskProps {\n  isVisible: boolean;\n}\nexport function DropTargetMask({isVisible}: DropTargetMaskProps) {\n  const mask = (\n    <m.div\n      key=\"dragTargetMask\"\n      {...opacityAnimation}\n      transition={{duration: 0.3}}\n      className=\"pointer-events-none absolute inset-0 min-h-full w-full border-2 border-dashed border-primary bg-primary-light/30\"\n    >\n      <m.div\n        initial={{y: '100%', opacity: 0}}\n        animate={{y: '-10px', opacity: 1}}\n        exit={{y: '100%', opacity: 0}}\n        className=\"fixed bottom-0 left-0 right-0 mx-auto max-w-max rounded bg-primary p-10 text-on-primary\"\n      >\n        <Trans message=\"Drop files to upload them to this folder.\" />\n      </m.div>\n    </m.div>\n  );\n  return <AnimatePresence>{isVisible ? mask : null}</AnimatePresence>;\n}\n","import {message} from '@ui/i18n/message';\nimport {MessageDescriptor} from '@ui/i18n/message-descriptor';\n\nexport const AVAILABLE_SORTS: DriveSortOption[] = [\n  {id: 'file_size', label: message('Size')},\n  {id: 'name', label: message('Name')},\n  {id: 'updated_at', label: message('Last modified')},\n  {id: 'created_at', label: message('Upload date')},\n  {id: 'type', label: message('Type')},\n  {id: 'extension', label: message('Extension')},\n];\n\nexport interface DriveSortOption {\n  id: SortColumn;\n  label: MessageDescriptor;\n}\n\nexport type SortColumn =\n  | 'file_size'\n  | 'name'\n  | 'updated_at'\n  | 'created_at'\n  | 'type'\n  | 'extension';\n\nexport type SortDirection = 'desc' | 'asc';\n\nexport interface SortValue {\n  column: SortColumn;\n  direction: SortDirection;\n}\n","import {AVAILABLE_SORTS, SortColumn} from './available-sorts';\nimport {Button} from '@ui/buttons/button';\nimport {SortIcon} from '@ui/icons/material/Sort';\nimport {Trans} from '@ui/i18n/trans';\nimport type {DriveSortDescriptor} from '../../drive-store';\nimport {Menu, MenuItem, MenuSection, MenuTrigger} from '@ui/menu/menu-trigger';\n\ninterface Props {\n  descriptor: DriveSortDescriptor;\n  onChange: (value: DriveSortDescriptor) => void;\n  isDisabled?: boolean;\n}\nexport function EntriesSortButton({\n  descriptor,\n  onChange,\n  isDisabled = false,\n}: Props) {\n  const column = descriptor.orderBy;\n  const direction = descriptor.orderDir;\n  const sort = AVAILABLE_SORTS.find(s => s.id === column);\n\n  return (\n    <MenuTrigger\n      showCheckmark\n      selectionMode=\"multiple\"\n      selectedValue={[direction || 'desc', column || '']}\n      onItemSelected={key => {\n        if (key === 'asc' || key === 'desc') {\n          onChange({\n            orderBy: column,\n            orderDir: key,\n          });\n        } else {\n          onChange({\n            orderBy: key as SortColumn,\n            orderDir: direction,\n          });\n        }\n      }}\n    >\n      <Button\n        className=\"text-muted\"\n        variant=\"text\"\n        size=\"sm\"\n        startIcon={<SortIcon />}\n        disabled={isDisabled}\n      >\n        {sort ? <Trans {...sort.label} /> : null}\n      </Button>\n      <Menu>\n        <MenuSection label={<Trans message=\"Direction\" />}>\n          <MenuItem value=\"asc\">\n            <Trans message=\"Ascending\" />\n          </MenuItem>\n          <MenuItem value=\"desc\">\n            <Trans message=\"Descending\" />\n          </MenuItem>\n        </MenuSection>\n        <MenuSection label={<Trans message=\"Sort By\" />}>\n          {AVAILABLE_SORTS.map(item => (\n            <MenuItem key={item.id} value={item.id}>\n              <Trans {...item.label} />\n            </MenuItem>\n          ))}\n        </MenuSection>\n      </Menu>\n    </MenuTrigger>\n  );\n}\n","import {driveState, useDriveStore} from '../../drive-store';\nimport {EntriesSortButton} from './entries-sort-button';\nimport React from 'react';\n\ninterface DriveSortButtonProps {\n  isDisabled?: boolean;\n}\nexport function DriveSortButton({isDisabled}: DriveSortButtonProps) {\n  const descriptor = useDriveStore(s => s.sortDescriptor);\n  return (\n    <EntriesSortButton\n      isDisabled={isDisabled}\n      descriptor={descriptor}\n      onChange={value => {\n        driveState().setSortDescriptor(value);\n      }}\n    />\n  );\n}\n","import React, {createElement} from 'react';\nimport {IconButton} from '@ui/buttons/icon-button';\nimport {EntryActionMenuTrigger} from './entry-action-menu-trigger';\nimport {MoreVertIcon} from '@ui/icons/material/MoreVert';\nimport {Tooltip} from '@ui/tooltip/tooltip';\nimport {Trans} from '@ui/i18n/trans';\nimport {useSelectedEntries} from '../files/use-selected-entries';\nimport {\n  useDeleteEntriesAction,\n  usePreviewAction,\n  useRemoveSharedEntriesAction,\n  useShareAction,\n} from './use-entry-actions';\nimport {DriveEntry} from '../files/drive-entry';\nimport {EntryAction} from './entry-action';\n\ninterface EntryActionListProps {\n  className?: string;\n}\nexport function EntryActionList({className}: EntryActionListProps) {\n  const selectedEntries = useSelectedEntries();\n\n  if (!selectedEntries.length) {\n    return null;\n  }\n\n  return (\n    <div className={className}>\n      <ActionList entries={selectedEntries} />\n    </div>\n  );\n}\n\ninterface ActionListProps {\n  entries: DriveEntry[];\n}\nfunction ActionList({entries}: ActionListProps) {\n  const preview = usePreviewAction(entries);\n  const share = useShareAction(entries);\n  const deleteAction = useDeleteEntriesAction(entries);\n  const removeShared = useRemoveSharedEntriesAction(entries);\n\n  const actions = [preview, share, deleteAction, removeShared].filter(\n    action => !!action,\n  ) as EntryAction[];\n\n  return (\n    <div className=\"entry-action-list\">\n      {actions.map(action => (\n        <Tooltip key={action.key} label={<Trans {...action.label} />}>\n          <IconButton\n            size=\"sm\"\n            onClick={() => {\n              action.execute();\n            }}\n          >\n            {createElement(action.icon)}\n          </IconButton>\n        </Tooltip>\n      ))}\n      <EntryActionMenuTrigger entries={entries}>\n        <Tooltip label={<Trans message=\"More actions\" />}>\n          <IconButton>\n            <MoreVertIcon />\n          </IconButton>\n        </Tooltip>\n      </EntryActionMenuTrigger>\n    </div>\n  );\n}\n","import React from 'react';\r\nimport {useDriveStore} from '../drive-store';\r\nimport {DriveSortButton} from '../layout/sorting/drive-sort-button';\r\nimport {EntryActionList} from '../entry-actions/entry-action-list';\r\n\r\nexport function Toolbar() {\r\n  const activePage = useDriveStore(s => s.activePage);\r\n  return (\r\n    <div className=\"my-10 flex min-h-42 items-center justify-between gap-40 px-10 text-muted md:px-18\">\r\n      <DriveSortButton isDisabled={activePage?.disableSort} />\r\n      <EntryActionList className=\"text-muted\" />\r\n    </div>\r\n  );\r\n} ","import React, {useContext, useRef, useState} from 'react';\r\nimport {usePaginatedEntries} from '../files/queries/use-paginated-entries';\r\nimport {useDriveStore} from '../drive-store';\r\nimport {useMouseSelectionBox} from '@ui/interactions/dnd/mouse-selection/use-mouse-selection-box';\r\nimport {useDroppable} from '@ui/interactions/dnd/use-droppable';\r\nimport {mergeProps} from '@react-aria/utils';\r\nimport {FileTable} from './file-table/file-table';\r\nimport {FileGrid} from './file-grid/file-grid';\r\nimport {PageBreadcrumbs} from '../page-breadcrumbs';\r\nimport {InfiniteScrollSentinel} from '@common/ui/infinite-scroll/infinite-scroll-sentinel';\r\nimport {useEntries} from '../files/queries/use-entries';\r\nimport {DropTargetMask} from '../drop-target-mask';\r\nimport {useSearchParams, useParams} from 'react-router-dom';\r\nimport {useDeleteEntries} from '../files/queries/use-delete-entries';\r\nimport {DashboardLayoutContext} from '@common/ui/dashboard-layout/dashboard-layout-context';\r\nimport {IllustratedMessage} from '@ui/images/illustrated-message';\r\nimport {SvgImage} from '@ui/images/svg-image';\r\nimport {Trans} from '@ui/i18n/trans';\r\nimport {Toolbar} from './toolbar';\r\n\r\ninterface FileViewProps {\r\n  className?: string;\r\n}\r\n\r\nexport function FileView({className}: FileViewProps) {\r\n  const {userId} = useParams();\r\n  const [params] = useSearchParams();\r\n  const [isDragOver, setIsDragOver] = useState(false);\r\n  const containerRef = useRef<HTMLDivElement>(null);\r\n  const {selectedEntries, viewMode, activePage} = useDriveStore();\r\n  const {mutate: deleteEntriesMutation} = useDeleteEntries();\r\n  const {isMobileMode} = useContext(DashboardLayoutContext);\r\n\r\n  const options = {userId: userId ? parseInt(userId) : undefined};\r\n  \r\n  const query = usePaginatedEntries(options);\r\n  const entries = useEntries(options);\r\n\r\n  const {droppableProps} = useDroppable({\r\n    id: 'driveRoot',\r\n    ref: containerRef,\r\n    types: ['nativeFile'],\r\n    onDragEnter: () => setIsDragOver(true),\r\n    onDragLeave: () => setIsDragOver(false),\r\n    onDrop: () => setIsDragOver(false),\r\n  });\r\n\r\n  const handleKeybinds = (e: React.KeyboardEvent) => {\r\n    if (e.key === 'Delete' && selectedEntries.size > 0) {\r\n      deleteEntriesMutation({entryIds: Array.from(selectedEntries)});\r\n    }\r\n  };\r\n\r\n  const onPointerDown = (e: React.PointerEvent) => {\r\n    const target = e.target as HTMLElement;\r\n    return (\r\n      e.button === 2 ||\r\n      target.closest('button, input, [role=\"button\"]') != null\r\n    );\r\n  };\r\n\r\n  const {containerProps} = useMouseSelectionBox({\r\n    onPointerDown,\r\n    containerRef,\r\n  });\r\n\r\n  let content;\r\n  if (!entries.length && (!query.isLoading || query.fetchStatus === 'idle')) {\r\n    const noContentMessage = activePage?.noContentMessage(!!params.get('query'));\r\n    if (noContentMessage) {\r\n      content = (\r\n        <IllustratedMessage\r\n          className=\"mt-40\"\r\n          image={<SvgImage src={noContentMessage.image} />}\r\n          title={<Trans {...noContentMessage.title} />}\r\n          description={<Trans {...noContentMessage.description} />}\r\n        />\r\n      );\r\n    }\r\n  } else {\r\n    content = viewMode === 'list' ? (\r\n      <FileTable entries={entries} />\r\n    ) : (\r\n      <FileGrid entries={entries} />\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div\r\n      {...mergeProps(containerProps, droppableProps, {\r\n        onKeyDown: handleKeybinds,\r\n      })}\r\n      className={className}\r\n      ref={containerRef}\r\n    >\r\n      <div className=\"relative flex min-h-full flex-col pt-10\">\r\n        {isMobileMode ? (\r\n          <PageBreadcrumbs className=\"mb-10 px-14\" />\r\n        ) : (\r\n          <Toolbar />\r\n        )}\r\n        <div className=\"relative flex-auto px-18 pb-18 md:px-24\">\r\n          {content}\r\n          <InfiniteScrollSentinel query={query} variant=\"infiniteScroll\" />\r\n        </div>\r\n        <DropTargetMask isVisible={isDragOver} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import {\r\n  ComponentPropsWithoutRef,\r\n  CSSProperties,\r\n  memo,\r\n  ReactElement,\r\n  useMemo,\r\n  useState,\r\n} from 'react';\r\nimport {AnimatePresence, m} from 'framer-motion';\r\nimport {IconButton} from '@ui/buttons/icon-button';\r\nimport {CloseIcon} from '@ui/icons/material/Close';\r\nimport {ProgressCircle} from '@ui/progress/progress-circle';\r\nimport {CheckCircleIcon} from '@ui/icons/material/CheckCircle';\r\nimport {\r\n  UploadedFile,\r\n  UploadedFileFromEntry,\r\n} from '@ui/utils/files/uploaded-file';\r\nimport {useFileUploadStore} from '@common/uploads/uploader/file-upload-provider';\r\nimport {Trans} from '@ui/i18n/trans';\r\nimport {MixedText} from '@ui/i18n/mixed-text';\r\nimport {Tooltip} from '@ui/tooltip/tooltip';\r\nimport {ErrorIcon} from '@ui/icons/material/Error';\r\nimport {WarningIcon} from '@ui/icons/material/Warning';\r\nimport {message} from '@ui/i18n/message';\r\nimport {FileTypeIcon} from '@common/uploads/components/file-type-icon/file-type-icon';\r\nimport {prettyBytes} from '@ui/utils/files/pretty-bytes';\r\n\r\ninterface UploadQueueProps {\r\n  file: UploadedFile | UploadedFileFromEntry;\r\n  style: CSSProperties;\r\n}\r\nexport const UploadQueueItem = memo(({file, style}: UploadQueueProps) => {\r\n  return (\r\n    <div\r\n      className=\"absolute left-0 top-0 flex w-full items-center gap-14 p-10\"\r\n      style={style}\r\n    >\r\n      <div className=\"shrink-0 rounded border p-8\">\r\n        <FileTypeIcon className=\"h-22 w-22\" mime={file.mime} />\r\n      </div>\r\n      <div className=\"min-w-0 flex-auto pr-10\">\r\n        <div className=\"mb-2 flex min-w-0 items-center gap-10\">\r\n          <div className=\"min-w-0 flex-auto overflow-hidden overflow-ellipsis whitespace-nowrap font-medium\">\r\n            {file.name}\r\n          </div>\r\n        </div>\r\n        <SizeInfo file={file} />\r\n      </div>\r\n      <div className=\"mr-10\">\r\n        <FileStatus file={file} />\r\n      </div>\r\n    </div>\r\n  );\r\n});\r\n\r\ninterface SizeInfoProps {\r\n  file: UploadedFile | UploadedFileFromEntry;\r\n}\r\nfunction SizeInfo({file}: SizeInfoProps) {\r\n  const fileUpload = useFileUploadStore(s => s.fileUploads.get(file.id));\r\n  const bytesUploaded = fileUpload?.bytesUploaded || 0;\r\n\r\n  const totalBytes = useMemo(() => prettyBytes(file.size), [file]);\r\n  const uploadedBytes = useMemo(\r\n    () => prettyBytes(bytesUploaded),\r\n    [bytesUploaded],\r\n  );\r\n\r\n  let statusMessage: ReactElement;\r\n  if (fileUpload?.status === 'completed') {\r\n    statusMessage = <Trans message=\"Upload complete\" />;\r\n  } else if (fileUpload?.status === 'aborted') {\r\n    statusMessage = <Trans message=\"Upload cancelled\" />;\r\n  } else if (fileUpload?.status === 'failed') {\r\n    statusMessage = <Trans message=\"Upload failed\" />;\r\n  } else {\r\n    statusMessage = (\r\n      <Trans\r\n        message=\":bytesUploaded of :totalBytes\"\r\n        values={{\r\n          bytesUploaded: uploadedBytes,\r\n          totalBytes,\r\n        }}\r\n      />\r\n    );\r\n  }\r\n\r\n  return <div className=\"text-xs text-muted\">{statusMessage}</div>;\r\n}\r\n\r\ninterface FileStatusProps {\r\n  file: UploadedFile | UploadedFileFromEntry;\r\n}\r\nfunction FileStatus({file}: FileStatusProps) {\r\n  const fileUpload = useFileUploadStore(s => s.fileUploads.get(file.id));\r\n  const abortUpload = useFileUploadStore(s => s.abortUpload);\r\n  const percentage = fileUpload?.percentage || 0;\r\n  const status = fileUpload?.status;\r\n  const errorMessage = fileUpload?.errorMessage;\r\n\r\n  const [isHovered, setIsHovered] = useState(false);\r\n\r\n  const abortButton = (\r\n    <IconButton\r\n      size=\"xs\"\r\n      iconSize=\"sm\"\r\n      onClick={() => {\r\n        abortUpload(file.id);\r\n      }}\r\n    >\r\n      <CloseIcon />\r\n    </IconButton>\r\n  );\r\n\r\n  const progressButton = (\r\n    <ProgressCircle\r\n      aria-label=\"Upload progress\"\r\n      size=\"w-24 h-24\"\r\n      value={percentage}\r\n      trackWidth={3}\r\n    />\r\n  );\r\n\r\n  let statusButton: ReactElement;\r\n  if (status === 'failed') {\r\n    const errMessage =\r\n      errorMessage || message('This file could not be uploaded');\r\n    statusButton = (\r\n      <AnimatedStatus>\r\n        <Tooltip variant=\"danger\" label={<MixedText value={errMessage} />}>\r\n          <ErrorIcon className=\"text-danger\" size=\"md\" />\r\n        </Tooltip>\r\n      </AnimatedStatus>\r\n    );\r\n  } else if (status === 'aborted') {\r\n    statusButton = (\r\n      <AnimatedStatus>\r\n        <WarningIcon className=\"text-warning\" size=\"md\" />\r\n      </AnimatedStatus>\r\n    );\r\n  } else if (status === 'completed') {\r\n    statusButton = (\r\n      <AnimatedStatus>\r\n        <CheckCircleIcon size=\"md\" className=\"text-positive\" />\r\n      </AnimatedStatus>\r\n    );\r\n  } else {\r\n    statusButton = (\r\n      <AnimatedStatus\r\n        onPointerEnter={e => {\r\n          if (e.pointerType === 'mouse') {\r\n            setIsHovered(true);\r\n          }\r\n        }}\r\n        onPointerLeave={e => {\r\n          if (e.pointerType === 'mouse') {\r\n            setIsHovered(false);\r\n          }\r\n        }}\r\n      >\r\n        {isHovered ? abortButton : progressButton}\r\n      </AnimatedStatus>\r\n    );\r\n  }\r\n\r\n  return <AnimatePresence>{statusButton}</AnimatePresence>;\r\n}\r\n\r\ninterface AnimatedStatusProps\r\n  extends Omit<\r\n    ComponentPropsWithoutRef<'div'>,\r\n    'onAnimationStart' | 'onDragStart' | 'onDragEnd' | 'onDrag'\r\n  > {\r\n  children: ReactElement;\r\n}\r\nfunction AnimatedStatus({children, ...domProps}: AnimatedStatusProps) {\r\n  return (\r\n    <m.div\r\n      {...domProps}\r\n      initial={{scale: 0, opacity: 0}}\r\n      animate={{scale: 1, opacity: 1}}\r\n      exit={{scale: 0, opacity: 0}}\r\n    >\r\n      {children}\r\n    </m.div>\r\n  );\r\n}\r\n","import {ReactElement, useRef} from 'react';\r\nimport {AnimatePresence, m} from 'framer-motion';\r\nimport {driveState, useDriveStore} from '../drive-store';\r\nimport {IconButton} from '@ui/buttons/icon-button';\r\nimport {CloseIcon} from '@ui/icons/material/Close';\r\nimport {useFileUploadStore} from '@common/uploads/uploader/file-upload-provider';\r\nimport {Trans} from '@ui/i18n/trans';\r\nimport {UploadQueueItem} from './upload-queue-item';\r\nimport {useVirtualizer} from '@tanstack/react-virtual';\r\n\r\nexport function UploadQueue() {\r\n  const isOpen = useDriveStore(s => s.uploadQueueIsOpen);\r\n\r\n  return (\r\n    <AnimatePresence>\r\n      {isOpen && (\r\n        <m.div\r\n          key=\"upload-queue\"\r\n          className=\"fixed bottom-16 right-16 z-modal w-375 rounded border bg text-sm shadow-xl\"\r\n          initial={{y: '100%', opacity: 0}}\r\n          animate={{y: 0, opacity: 1}}\r\n          exit={{y: '100%', opacity: 0}}\r\n        >\r\n          <Header />\r\n          <UploadList />\r\n        </m.div>\r\n      )}\r\n    </AnimatePresence>\r\n  );\r\n}\r\n\r\nexport function Header() {\r\n  const inProgressUploadsCount = useFileUploadStore(s => s.activeUploadsCount);\r\n  const completedUploadsCount = useFileUploadStore(\r\n    s => s.completedUploadsCount,\r\n  );\r\n  const clearInactive = useFileUploadStore(s => s.clearInactive);\r\n\r\n  let message: ReactElement;\r\n  if (inProgressUploadsCount) {\r\n    message = (\r\n      <Trans\r\n        message=\"Uploading :count files\"\r\n        values={{count: inProgressUploadsCount}}\r\n      />\r\n    );\r\n  } else if (completedUploadsCount) {\r\n    message = (\r\n      <Trans\r\n        message=\"Uploaded :count files\"\r\n        values={{count: completedUploadsCount}}\r\n      />\r\n    );\r\n  } else {\r\n    message = <Trans message=\"No active uploads\" />;\r\n  }\r\n\r\n  // only allow closing upload queue if there are no active uploads\r\n  return (\r\n    <div className=\"flex min-h-[45px] items-center justify-between gap-10 border-b bg-alt px-10 py-4\">\r\n      {message}\r\n      {inProgressUploadsCount === 0 ? (\r\n        <IconButton\r\n          size=\"sm\"\r\n          onClick={() => {\r\n            driveState().setUploadQueueIsOpen(false);\r\n            // wait for upload queue panel animation to complete, then clear inactive uploads\r\n            setTimeout(() => {\r\n              clearInactive();\r\n            }, 200);\r\n          }}\r\n        >\r\n          <CloseIcon />\r\n        </IconButton>\r\n      ) : undefined}\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction UploadList() {\r\n  const uploads = useFileUploadStore(s => s.fileUploads);\r\n  const uploadsArray = [...uploads.values()];\r\n  const ref = useRef<HTMLDivElement>(null);\r\n  const virtualizer = useVirtualizer({\r\n    count: uploads.size,\r\n    getScrollElement: () => ref.current,\r\n    estimateSize: () => 60,\r\n    overscan: 4,\r\n  });\r\n\r\n  return (\r\n    <div className=\"max-h-320 overflow-y-auto\" ref={ref}>\r\n      <div\r\n        className=\"relative w-full\"\r\n        style={{\r\n          height: `${virtualizer.getTotalSize()}px`,\r\n        }}\r\n      >\r\n        {virtualizer.getVirtualItems().map(virtualItem => {\r\n          const upload = uploadsArray[virtualItem.index];\r\n          return (\r\n            <UploadQueueItem\r\n              style={{\r\n                height: `${virtualItem.size}px`,\r\n                transform: `translateY(${virtualItem.start}px)`,\r\n              }}\r\n              key={upload.file.id}\r\n              file={upload.file}\r\n            />\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","export default \"__VITE_ASSET__6b065fb0__\"","import React, {ReactNode, useContext} from 'react';\nimport {IconButton} from '@ui/buttons/icon-button';\nimport {CloseIcon} from '@ui/icons/material/Close';\nimport {DashboardLayoutContext} from '@common/ui/dashboard-layout/dashboard-layout-context';\nimport {FileTypeIcon} from '@common/uploads/components/file-type-icon/file-type-icon';\n\ninterface HeaderProps {\n  entryType: string;\n  entryName: ReactNode;\n}\nexport function DetailsSidebarHeader({entryType, entryName}: HeaderProps) {\n  const {setRightSidenavStatus} = useContext(DashboardLayoutContext);\n  return (\n    <div className=\"mb-38 flex items-center gap-16 text-text-main\">\n      <FileTypeIcon className=\"h-24 w-24\" type={entryType} />\n      <div className=\"mr-auto min-w-0 flex-auto text-ellipsis break-words text-xl font-normal\">\n        {entryName}\n      </div>\n      <IconButton\n        size=\"md\"\n        className=\"flex-shrink-0\"\n        onClick={() => {\n          setRightSidenavStatus('closed');\n        }}\n      >\n        <CloseIcon />\n      </IconButton>\n    </div>\n  );\n}\n","import React, {ReactNode} from 'react';\nimport clsx from 'clsx';\n\ninterface Props {\n  children: ReactNode;\n  margin?: string;\n  className?: string;\n}\nexport function DetailsSidebarSectionHeader({\n  children,\n  margin = 'mb-20',\n}: Props) {\n  return <div className={clsx('text-base text-main', margin)}>{children}</div>;\n}\n","import {useQuery} from '@tanstack/react-query';\nimport {apiClient, queryClient} from '@common/http/query-client';\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\nimport {Tag} from '@common/tags/tag';\n\ninterface Response extends BackendResponse {\n  tags: Tag[];\n}\n\ninterface Params {\n  taggableType: string;\n  taggableId: string | number;\n  initialData?: Tag[];\n  notType?: string;\n  type?: string;\n}\n\nexport function useTaggableTags(params: Params) {\n  return useQuery<Response>({\n    queryKey: getQueryKey(params),\n    queryFn: () => fetchTaggableTags(params),\n    initialData: params.initialData ? {tags: params.initialData} : undefined,\n  });\n}\n\nfunction getQueryKey(params: Params) {\n  const {taggableType, taggableId, type, notType} = params;\n  const key = ['tags', 'taggable', taggableType, `${taggableId}`];\n  if (type != null) {\n    key.push(type);\n  }\n  if (notType != null) {\n    key.push(notType);\n  }\n  return key;\n}\n\nexport function invalidateTaggableTagsQuery({\n  taggableType,\n  taggableIds,\n}: {\n  taggableType: string;\n  taggableIds: (string | number)[];\n}) {\n  return Promise.allSettled(\n    taggableIds.map(taggableId =>\n      queryClient.invalidateQueries({\n        queryKey: getQueryKey({taggableType, taggableId}),\n      }),\n    ),\n  );\n}\n\nasync function fetchTaggableTags({\n  taggableType,\n  taggableId,\n  notType,\n  type,\n}: Params) {\n  return apiClient\n    .get<Response>(`taggable/${taggableType}/${taggableId}/list-tags`, {\n      params: {\n        notType,\n        type,\n      },\n    })\n    .then(response => response.data);\n}\n","import {useMutation} from '@tanstack/react-query';\nimport {apiClient} from '@common/http/query-client';\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\nimport {showHttpErrorToast} from '@common/http/show-http-error-toast';\nimport {invalidateTaggableTagsQuery} from '@common/tags/use-taggable-tags';\n\ninterface Payload {\n  tagId: number;\n  taggableIds: (number | string)[];\n  taggableType: string;\n}\n\nexport function useDetachTagFromTaggables() {\n  return useMutation({\n    mutationFn: (payload: Payload) => detachTag(payload),\n    onSuccess: (_, payload) => {\n      invalidateTaggableTagsQuery(payload);\n    },\n    onError: err => showHttpErrorToast(err),\n  });\n}\n\nfunction detachTag(payload: Payload): Promise<BackendResponse> {\n  return apiClient.post(`taggable/detach-tag`, payload).then(r => r.data);\n}\n","import {keepPreviousData, useQuery} from '@tanstack/react-query';\nimport {apiClient} from '@common/http/query-client';\nimport {PaginationResponse} from '@common/http/backend-response/pagination-response';\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\nimport {Tag} from '@common/tags/tag';\n\ninterface Response extends BackendResponse {\n  pagination: PaginationResponse<Tag>;\n}\n\ninterface Params {\n  type?: string;\n  notType?: string;\n  perPage?: number;\n  query?: string;\n  userId?: number;\n}\n\nexport function useTags(params: Params) {\n  return useQuery({\n    queryKey: ['tags', params],\n    queryFn: ({signal}) => fetchTags(params, signal),\n    placeholderData: keepPreviousData,\n  });\n}\n\nasync function fetchTags(params: Params, signal?: AbortSignal) {\n  if (params.query) {\n    await new Promise(resolve => setTimeout(resolve, 300));\n  }\n  return apiClient\n    .get<Response>(`tags`, {\n      params: {paginate: 'simple', ...params},\n      signal: params.query ? signal : undefined,\n    })\n    .then(response => response.data);\n}\n","import {useMutation} from '@tanstack/react-query';\nimport {apiClient} from '@common/http/query-client';\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\nimport {showHttpErrorToast} from '@common/http/show-http-error-toast';\nimport {Tag} from '@common/tags/tag';\nimport {invalidateTaggableTagsQuery} from '@common/tags/use-taggable-tags';\n\ninterface Response extends BackendResponse {\n  tag: Tag;\n}\n\ninterface Payload {\n  tagName: string;\n  tagType?: string;\n  taggableIds: number[];\n  taggableType: string;\n  userId?: number;\n}\n\nexport function useAttachTagToTaggables() {\n  return useMutation({\n    mutationFn: (payload: Payload) => attachTag(payload),\n    onSuccess: async (_, payload) => {\n      invalidateTaggableTagsQuery(payload);\n    },\n    onError: err => showHttpErrorToast(err),\n  });\n}\n\nfunction attachTag(payload: Payload): Promise<Response> {\n  return apiClient.post(`taggable/attach-tag`, payload).then(r => r.data);\n}\n","import {Dialog} from '@ui/overlays/dialog/dialog';\nimport {DialogBody} from '@ui/overlays/dialog/dialog-body';\nimport {TextField} from '@ui/forms/input-field/text-field/text-field';\nimport {useTrans} from '@ui/i18n/use-trans';\nimport {List, ListItem} from '@ui/list/list';\nimport {useTags} from '@common/tags/use-tags';\nimport {PushPinIcon} from '@ui/icons/material/PushPin';\nimport {SearchIcon} from '@ui/icons/material/Search';\nimport {CheckIcon} from '@ui/icons/material/Check';\nimport clsx from 'clsx';\nimport {useMemo, useState} from 'react';\nimport {Trans} from '@ui/i18n/trans';\nimport {Tag} from '@common/tags/tag';\nimport {useDetachTagFromTaggables} from '@common/tags/use-detach-tag-from-taggables';\nimport {useAttachTagToTaggables} from '@common/tags/use-attach-tag-to-taggables';\nimport {ProgressCircle} from '@ui/progress/progress-circle';\n\ninterface Props {\n  attachedTags?: Tag[];\n  tagType?: string;\n  notTagType?: string;\n  taggableType: string;\n  taggableIds: number[];\n  userId?: number;\n  isLoading?: boolean;\n  onChange?: (tagId: number) => void;\n}\nexport function ManageTagsDialog({\n  attachedTags: propsAttachedTags,\n  tagType,\n  notTagType,\n  taggableType,\n  taggableIds,\n  userId,\n  isLoading,\n  onChange,\n}: Props) {\n  const {trans} = useTrans();\n  const [query, setQuery] = useState('');\n  const {\n    data,\n    isPlaceholderData,\n    isLoading: queryIsLoading,\n  } = useTags({\n    type: tagType,\n    notType: notTagType,\n    query,\n    userId,\n  });\n  const detachTag = useDetachTagFromTaggables();\n  const attachTag = useAttachTagToTaggables();\n\n  // if all tags does not include tag in attached tags, add it to the top\n  const {tags, attachedTagIds} = useMemo(() => {\n    const allTags = data?.pagination.data || [];\n    const attachedTags = propsAttachedTags || [];\n    const attachedTagIds = attachedTags.map(tag => tag.id);\n\n    const tags = allTags.filter(tag => !attachedTagIds.includes(tag.id));\n    tags.unshift(...attachedTags);\n    return {tags, attachedTagIds};\n  }, [propsAttachedTags, data]);\n\n  return (\n    <Dialog>\n      <DialogBody padding=\"p-8\">\n        <form>\n          <TextField\n            placeholder={trans({message: 'Type tag name...'})}\n            inputBorder=\"border-b\"\n            inputRadius=\"rounded-none\"\n            inputRing=\"ring-0\"\n            inputShadow=\"shadow-none\"\n            startAdornment={<SearchIcon />}\n            value={query}\n            onChange={e => setQuery(e.target.value)}\n            endAdornment={\n              isPlaceholderData && (\n                <ProgressCircle isIndeterminate size=\"w-24 h-24\" />\n              )\n            }\n          />\n        </form>\n        <List className=\"compact-scrollbar h-320 overflow-y-auto stable-scrollbar\">\n          {tags.map(tag => {\n            const isAttached = attachedTagIds.includes(tag.id);\n            const isDisabled =\n              attachTag.isPending || detachTag.isPending || isLoading;\n            return (\n              <ListItem\n                isDisabled={isDisabled}\n                onSelected={() => {\n                  if (isAttached) {\n                    detachTag.mutate(\n                      {\n                        tagId: tag.id,\n                        taggableIds,\n                        taggableType,\n                      },\n                      {\n                        onSuccess: () => onChange?.(tag.id),\n                      },\n                    );\n                  } else {\n                    attachTag.mutate(\n                      {\n                        taggableType,\n                        taggableIds,\n                        tagName: tag.name,\n                        userId,\n                        tagType,\n                      },\n                      {\n                        onSuccess: () => onChange?.(tag.id),\n                      },\n                    );\n                  }\n                }}\n                className={clsx(\n                  isAttached &&\n                    (isDisabled ? 'text-primary-light' : 'text-primary'),\n                )}\n                startIcon={<PushPinIcon size=\"xs\" />}\n                key={tag.id}\n                endSection={\n                  isAttached ? (\n                    <CheckIcon size=\"sm\" className=\"block text-primary\" />\n                  ) : (\n                    <div className=\"h-20 w-20\" />\n                  )\n                }\n              >\n                {tag.display_name || tag.name}\n              </ListItem>\n            );\n          })}\n          {!isPlaceholderData && !data?.pagination.data.length && query && (\n            <ListItem\n              startIcon={<PushPinIcon size=\"xs\" />}\n              onSelected={() => {\n                attachTag.mutate(\n                  {\n                    taggableType,\n                    taggableIds,\n                    tagName: query,\n                    userId,\n                    tagType,\n                  },\n                  {\n                    onSuccess: r => {\n                      setQuery('');\n                      onChange?.(r.tag.id);\n                    },\n                  },\n                );\n              }}\n            >\n              <Trans message={`Create tag \":name\"`} values={{name: query}} />\n            </ListItem>\n          )}\n          {data && !tags.length && !query && (\n            <li className=\"text-center text-muted\">\n              <Trans message=\"No tags found\" />\n            </li>\n          )}\n          {queryIsLoading && (\n            <li className=\"flex justify-center\">\n              <ProgressCircle isIndeterminate size=\"w-24 h24\" />\n            </li>\n          )}\n        </List>\n      </DialogBody>\n    </Dialog>\n  );\n}\n","import {DetailsSidebarSectionHeader} from '@app/drive/details-sidebar/details-sidebar-section-header';\nimport {Trans} from '@ui/i18n/trans';\nimport {DriveEntry} from '@app/drive/files/drive-entry';\nimport React from 'react';\nimport {useDetachTagFromTaggables} from '@common/tags/use-detach-tag-from-taggables';\nimport {useTaggableTags} from '@common/tags/use-taggable-tags';\nimport {DialogTrigger} from '@ui/overlays/dialog/dialog-trigger';\nimport {Button} from '@ui/buttons/button';\nimport {ManageTagsDialog} from '@common/tags/manage-tags-dialog';\nimport {ChipList} from '@ui/forms/input-field/chip-field/chip-list';\nimport {Chip} from '@ui/forms/input-field/chip-field/chip';\nimport {AddIcon} from '@ui/icons/material/Add';\nimport {useAuth} from '@common/auth/use-auth';\n\ninterface Props {\n  entry: DriveEntry;\n}\nexport function DetailsSidebarTags({entry}: Props) {\n  const {user} = useAuth();\n  const detachTag = useDetachTagFromTaggables();\n  const {data, isFetching} = useTaggableTags({\n    taggableType: 'fileEntry',\n    taggableId: entry.id,\n    initialData: entry.tags?.filter(tag => tag.type !== 'label'),\n    type: 'custom',\n  });\n  return (\n    <div className=\"mt-20 border-t pt-20\">\n      <DetailsSidebarSectionHeader margin=\"mb-10\">\n        <Trans message=\"Tags\" />\n      </DetailsSidebarSectionHeader>\n      <div className=\"flex items-center gap-8\">\n        <ChipList\n          size=\"sm\"\n          radius=\"rounded-button\"\n          startButton={\n            <DialogTrigger type=\"modal\">\n              <Button\n                variant=\"outline\"\n                startIcon={<AddIcon />}\n                size=\"2xs\"\n                className=\"min-h-26\"\n              >\n                <Trans message=\"Add tag\" />\n              </Button>\n              <ManageTagsDialog\n                attachedTags={data?.tags}\n                isLoading={isFetching}\n                tagType=\"custom\"\n                taggableType=\"fileEntry\"\n                taggableIds={[entry.id]}\n                userId={user?.id}\n              />\n            </DialogTrigger>\n          }\n        >\n          {data?.tags.map(tag => (\n            <Chip\n              key={tag.id}\n              disabled={detachTag.isPending || isFetching}\n              onRemove={() => {\n                detachTag.mutate({\n                  tagId: tag.id,\n                  taggableIds: [entry.id],\n                  taggableType: 'fileEntry',\n                });\n              }}\n            >\n              {tag.display_name || tag.name}\n            </Chip>\n          ))}\n        </ChipList>\n      </div>\n    </div>\n  );\n}\n","import {useSelectedEntryParent} from '@app/drive/files/use-selected-entries';\r\nimport {useNavigate} from '@common/ui/navigation/use-navigate';\r\nimport React, {ReactNode, useMemo} from 'react';\r\nimport {Trans} from '@ui/i18n/trans';\r\nimport {Button} from '@ui/buttons/button';\r\nimport {FolderIcon} from '@ui/icons/material/Folder';\r\nimport {\r\n  getPathForFolder,\r\n  RootFolderPage,\r\n} from '@app/drive/drive-page/drive-page';\r\nimport {FormattedDate} from '@ui/i18n/formatted-date';\r\nimport {DriveEntry} from '@app/drive/files/drive-entry';\r\nimport {GroupsIcon} from '@ui/icons/material/Groups';\r\nimport {Tooltip} from '@ui/tooltip/tooltip';\r\nimport {driveState} from '@app/drive/drive-store';\r\nimport {DetailsSidebarHeader} from '@app/drive/details-sidebar/details-sidebar-header';\r\nimport {DetailsSidebarSectionHeader} from '@app/drive/details-sidebar/details-sidebar-section-header';\r\nimport {DetailsSidebarTags} from '@app/drive/details-sidebar/details-sidebar-tags';\r\nimport {FileThumbnail} from '@common/uploads/components/file-type-icon/file-thumbnail';\r\nimport {Avatar} from '@ui/avatar/avatar';\r\nimport {prettyBytes} from '@ui/utils/files/pretty-bytes';\r\n\r\ninterface EntryPropertiesProps {\r\n  entry: DriveEntry;\r\n}\r\nexport function DetailsSidebarProperties({entry}: EntryPropertiesProps) {\r\n  return (\r\n    <div>\r\n      <DetailsSidebarHeader entryType={entry.type} entryName={entry.name} />\r\n      {entry.type === 'image' && (\r\n        <FileThumbnail className=\"mb-20\" file={entry} />\r\n      )}\r\n      <div>\r\n        <DetailsSidebarSectionHeader>\r\n          <Trans message=\"Who has access\" />\r\n        </DetailsSidebarSectionHeader>\r\n        <div className=\"flex items-center gap-14\">\r\n          {entry.workspace_id ? (\r\n            <div className=\"flex h-32 w-32 items-center justify-center rounded-full border\">\r\n              <GroupsIcon className=\"icon-md\" />\r\n            </div>\r\n          ) : null}\r\n          {entry.users.map(user => (\r\n            <Tooltip label={user.name} key={user.id}>\r\n              <Avatar src={user.image} size=\"md\" circle />\r\n            </Tooltip>\r\n          ))}\r\n        </div>\r\n        {entry.permissions['files.update'] && (\r\n          <Button\r\n            className=\"mt-20 block\"\r\n            variant=\"link\"\r\n            color=\"primary\"\r\n            onClick={() => {\r\n              driveState().setActiveActionDialog('share', [entry]);\r\n            }}\r\n          >\r\n            <Trans message=\"Manage Access\" />\r\n          </Button>\r\n        )}\r\n      </div>\r\n      <PropertyList entry={entry} />\r\n      <DetailsSidebarTags entry={entry} />\r\n    </div>\r\n  );\r\n}\r\n\r\ninterface Props {\r\n  entry: DriveEntry;\r\n}\r\nfunction PropertyList({entry}: Props) {\r\n  const parent = useSelectedEntryParent();\r\n  const navigate = useNavigate();\r\n  const owner = entry.users.find(user => user.owns_entry);\r\n  const prettySize = useMemo(\r\n    () => prettyBytes(entry.file_size),\r\n    [entry.file_size],\r\n  );\r\n\r\n  return (\r\n    <div className=\"mt-20 border-t pt-20\">\r\n      <DetailsSidebarSectionHeader>\r\n        <Trans message=\"Properties\" />\r\n      </DetailsSidebarSectionHeader>\r\n      <PropertyItem\r\n        label={<Trans message=\"Type\" />}\r\n        value={\r\n          <span className=\"capitalize\">\r\n            <Trans message={entry.type} />\r\n          </span>\r\n        }\r\n      />\r\n      <PropertyItem\r\n        label={<Trans message=\"Size\" />}\r\n        value={entry.file_size ? prettySize : '-'}\r\n      />\r\n      <PropertyItem\r\n        label={<Trans message=\"Location\" />}\r\n        value={\r\n          <Button\r\n            variant=\"link\"\r\n            startIcon={<FolderIcon />}\r\n            onClick={() => {\r\n              navigate(\r\n                parent ? getPathForFolder(parent.hash) : RootFolderPage.path,\r\n              );\r\n            }}\r\n          >\r\n            {parent ? parent.name : <Trans message=\"Root\" />}\r\n          </Button>\r\n        }\r\n      />\r\n      {owner && (\r\n        <PropertyItem label={<Trans message=\"Owner\" />} value={owner.name} />\r\n      )}\r\n      <PropertyItem\r\n        label={<Trans message=\"Modified\" />}\r\n        value={<FormattedDate date={entry.updated_at} />}\r\n      />\r\n      <PropertyItem\r\n        label={<Trans message=\"Created\" />}\r\n        value={<FormattedDate date={entry.updated_at} />}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\ninterface PropertyItemProps {\r\n  label: ReactNode;\r\n  value: ReactNode;\r\n}\r\nfunction PropertyItem({label, value}: PropertyItemProps) {\r\n  return (\r\n    <div className=\"mb-14 flex items-center\">\r\n      <div className=\"w-1/3 text-xs text-muted\">{label}</div>\r\n      <div className=\"w-2/3 text-sm text-main\">{value}</div>\r\n    </div>\r\n  );\r\n}\r\n","import React, {Fragment} from 'react';\nimport {useSelectedEntry} from '../files/use-selected-entries';\nimport {Trans} from '@ui/i18n/trans';\nimport detailedExamination from './detailed-examination.svg';\nimport clsx from 'clsx';\nimport {DetailsSidebarHeader} from '@app/drive/details-sidebar/details-sidebar-header';\nimport {DetailsSidebarProperties} from '@app/drive/details-sidebar/details-sidebar-properties';\nimport {IllustratedMessage} from '@ui/images/illustrated-message';\nimport {SvgImage} from '@ui/images/svg-image';\n\ninterface DetailsSidebarProps {\n  className?: string;\n}\nexport function DetailsSidebar({className}: DetailsSidebarProps) {\n  const selectedEntry = useSelectedEntry();\n  return (\n    <div\n      className={clsx(\n        className,\n        'h-full overflow-y-auto border-l bg p-18 text-sm text-muted',\n      )}\n    >\n      {selectedEntry ? (\n        <DetailsSidebarProperties entry={selectedEntry} />\n      ) : (\n        <NothingSelected />\n      )}\n    </div>\n  );\n}\n\nfunction NothingSelected() {\n  return (\n    <Fragment>\n      <DetailsSidebarHeader\n        entryType=\"folder\"\n        entryName={<Trans message=\"All files\" />}\n      />\n      <IllustratedMessage\n        image={<SvgImage src={detailedExamination} />}\n        description={\n          <Trans message=\"Select file or folder to see details here\" />\n        }\n      />\n    </Fragment>\n  );\n}\n","import {useMutation} from '@tanstack/react-query';\nimport {UseFormReturn} from 'react-hook-form';\nimport {toast} from '@ui/toast/toast';\nimport {message} from '@ui/i18n/message';\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\nimport {FileEntry} from '@common/uploads/file-entry';\nimport {apiClient} from '@common/http/query-client';\nimport {invalidateEntryQueries} from '../../drive-query-keys';\nimport {onFormQueryError} from '@common/errors/on-form-query-error';\n\ninterface Response extends BackendResponse {\n  fileEntry: FileEntry;\n}\n\ninterface Payload {\n  entryId: number;\n  name: string;\n  initialName: string;\n}\n\nexport function useRenameEntry(form: UseFormReturn<any>) {\n  return useMutation({\n    mutationFn: (payload: Payload) => renameEntry(payload),\n    onSuccess: (r, p) => {\n      invalidateEntryQueries();\n      toast(\n        message(':oldName renamed to :newName', {\n          values: {oldName: p.initialName, newName: r.fileEntry.name},\n        }),\n      );\n    },\n    onError: err => onFormQueryError(err, form),\n  });\n}\n\nfunction renameEntry({entryId, ...payload}: Payload): Promise<Response> {\n  return apiClient\n    .put(`file-entries/${entryId}`, payload)\n    .then(response => response.data);\n}\n","import React from 'react';\nimport {useForm} from 'react-hook-form';\nimport {useRenameEntry} from '../queries/use-rename-entry';\nimport {FormTextField} from '@ui/forms/input-field/text-field/text-field';\nimport {Button} from '@ui/buttons/button';\nimport {Form} from '@ui/forms/form';\nimport {DialogFooter} from '@ui/overlays/dialog/dialog-footer';\nimport {useDialogContext} from '@ui/overlays/dialog/dialog-context';\nimport {Dialog} from '@ui/overlays/dialog/dialog';\nimport {DialogHeader} from '@ui/overlays/dialog/dialog-header';\nimport {DialogBody} from '@ui/overlays/dialog/dialog-body';\nimport {Trans} from '@ui/i18n/trans';\nimport {DriveEntry} from '../drive-entry';\n\ninterface FormValue {\n  name?: string;\n}\n\ninterface RenameEntryDialogProps {\n  entries: DriveEntry[];\n}\nexport function RenameEntryDialog({entries}: RenameEntryDialogProps) {\n  const {close, formId} = useDialogContext();\n  const initialName = entries[0]?.name;\n  const form = useForm({defaultValues: {name: initialName}});\n  const renameEntry = useRenameEntry(form);\n\n  const onSubmit = (e: Required<FormValue>) => {\n    renameEntry.mutate(\n      {\n        entryId: entries[0].id,\n        name: e.name,\n        initialName,\n      },\n      {onSuccess: close},\n    );\n  };\n\n  return (\n    <Dialog>\n      <DialogHeader>\n        <Trans message=\"Rename\" />\n      </DialogHeader>\n      <DialogBody>\n        <Form onSubmit={onSubmit} form={form} id={formId}>\n          <FormTextField\n            placeholder=\"Enter a name...\"\n            aria-label=\"Entry name\"\n            autoFocus\n            name=\"name\"\n            required\n            minLength={3}\n            maxLength={200}\n          />\n        </Form>\n      </DialogBody>\n      <DialogFooter>\n        <Button variant=\"flat\" onClick={() => close()}>\n          <Trans message=\"Cancel\" />\n        </Button>\n        <Button\n          form={formId}\n          type=\"submit\"\n          variant=\"flat\"\n          color=\"primary\"\n          disabled={renameEntry.isPending || !form.formState.isDirty}\n        >\n          <Trans message=\"Save\" />\n        </Button>\n      </DialogFooter>\n    </Dialog>\n  );\n}\n","import {useMutation} from '@tanstack/react-query';\nimport {UseFormReturn} from 'react-hook-form';\nimport {apiClient} from '@common/http/query-client';\nimport {onFormQueryError} from '@common/errors/on-form-query-error';\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\nimport {DriveFolder} from '../drive-entry';\nimport {invalidateEntryQueries} from '../../drive-query-keys';\n\ninterface Response extends BackendResponse {\n  folder: DriveFolder;\n}\n\ninterface CreateFolderProps {\n  name: string;\n  parentId?: number | null;\n}\n\nfunction createFolder({name, parentId}: CreateFolderProps): Promise<Response> {\n  return apiClient\n    .post('folders', {\n      name,\n      parentId: parentId === 0 ? null : parentId,\n    })\n    .then(response => response.data);\n}\n\nexport function useCreateFolder(form: UseFormReturn<any>) {\n  return useMutation({\n    mutationFn: ({name, parentId}: CreateFolderProps) => {\n      return createFolder({name, parentId});\n    },\n    onSuccess: () => invalidateEntryQueries(),\n    onError: r => onFormQueryError(r, form),\n  });\n}\n","import React from 'react';\nimport {useForm} from 'react-hook-form';\nimport {FormTextField} from '@ui/forms/input-field/text-field/text-field';\nimport {Button} from '@ui/buttons/button';\nimport {toast} from '@ui/toast/toast';\nimport {Form} from '@ui/forms/form';\nimport {useCreateFolder} from '../queries/create-folder';\nimport {DialogFooter} from '@ui/overlays/dialog/dialog-footer';\nimport {useDialogContext} from '@ui/overlays/dialog/dialog-context';\nimport {Dialog} from '@ui/overlays/dialog/dialog';\nimport {DialogHeader} from '@ui/overlays/dialog/dialog-header';\nimport {DialogBody} from '@ui/overlays/dialog/dialog-body';\nimport {Trans} from '@ui/i18n/trans';\nimport {message} from '@ui/i18n/message';\nimport {useTrans} from '@ui/i18n/use-trans';\n\ninterface FormValue {\n  name?: string;\n}\n\ninterface NewFolderDialogProps {\n  parentId: number;\n}\nexport function NewFolderDialog({parentId}: NewFolderDialogProps) {\n  const {close, formId} = useDialogContext();\n  const {trans} = useTrans();\n  const form = useForm({\n    defaultValues: {\n      name: trans({message: 'Untitled Folder'}),\n    },\n  });\n  const createFolder = useCreateFolder(form);\n\n  const onSubmit = (value: Required<FormValue>) => {\n    createFolder.mutate(\n      {...value, parentId},\n      {\n        onSuccess: response => {\n          close(response.folder);\n          toast(message('Folder created'));\n        },\n      },\n    );\n  };\n\n  return (\n    <Dialog>\n      <DialogHeader>\n        <Trans message=\"New Folder\" />\n      </DialogHeader>\n      <DialogBody>\n        <Form onSubmit={onSubmit} form={form} id={formId}>\n          <FormTextField\n            placeholder={trans({\n              message: 'Enter a name...',\n            })}\n            aria-label=\"Entry name\"\n            autoFocus\n            autoSelectText\n            name=\"name\"\n            required\n            minLength={3}\n            maxLength={200}\n          />\n        </Form>\n      </DialogBody>\n      <DialogFooter>\n        <Button variant=\"flat\" onClick={() => close()}>\n          <Trans message=\"Cancel\" />\n        </Button>\n        <Button\n          form={formId}\n          type=\"submit\"\n          variant=\"flat\"\n          color=\"primary\"\n          disabled={createFolder.isPending}\n        >\n          <Trans message=\"Create\" />\n        </Button>\n      </DialogFooter>\n    </Dialog>\n  );\n}\n","import {DriveEntry} from '@app/drive/files/drive-entry';\nimport {createElement, Fragment, useState} from 'react';\nimport {useShareAction} from '@app/drive/entry-actions/use-entry-actions';\nimport {Button} from '@ui/buttons/button';\nimport {Trans} from '@ui/i18n/trans';\nimport {IconButton} from '@ui/buttons/icon-button';\nimport {useEntries} from '@app/drive/files/queries/use-entries';\nimport {FilePreviewDialog} from '@common/uploads/components/file-preview/file-preview-dialog';\n\ninterface EntryPreviewDialogProps {\n  selectedEntry: DriveEntry;\n}\nexport function EntryPreviewDialog({selectedEntry}: EntryPreviewDialogProps) {\n  const files = useEntries().filter(entry => entry.type !== 'folder');\n  const defaultActiveIndex = files.findIndex(\n    file => file.id === selectedEntry?.id,\n  );\n  const [activeIndex, setActiveIndex] = useState(defaultActiveIndex);\n  return (\n    <FilePreviewDialog\n      allowDownload={selectedEntry.permissions['files.download']}\n      headerActionsLeft={\n        <DriveActions activeIndex={activeIndex} entries={files} />\n      }\n      activeIndex={activeIndex}\n      onActiveIndexChange={setActiveIndex}\n      entries={files}\n    />\n  );\n}\n\ninterface DriveActionsProps {\n  activeIndex: number;\n  entries: DriveEntry[];\n}\nfunction DriveActions({activeIndex, entries}: DriveActionsProps) {\n  const selectedEntry = entries[activeIndex];\n  const share = useShareAction([selectedEntry]);\n  if (!selectedEntry || !share) return null;\n\n  return (\n    <Fragment>\n      <IconButton\n        className=\"md:hidden\"\n        onClick={() => {\n          share.execute();\n        }}\n      >\n        {createElement(share.icon)}\n      </IconButton>\n      <Button\n        className=\"max-md:hidden\"\n        variant=\"text\"\n        startIcon={createElement(share.icon)}\n        onClick={() => {\n          share.execute();\n        }}\n      >\n        <Trans {...share.label} />\n      </Button>\n    </Fragment>\n  );\n}\n","import axios from 'axios';\nimport {useMutation} from '@tanstack/react-query';\nimport {DriveEntryPermissions} from '../../files/drive-entry';\nimport {apiClient} from '@common/http/query-client';\nimport {toast} from '@ui/toast/toast';\nimport {invalidateEntryQueries} from '../../drive-query-keys';\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\nimport {BackendErrorResponse} from '@common/errors/backend-error-response';\nimport {showHttpErrorToast} from '@common/http/show-http-error-toast';\n\nexport interface ShareEntryPayload {\n  emails: string[];\n  permissions: DriveEntryPermissions;\n  entryId: number;\n}\n\nfunction shareEntry({\n  entryId,\n  ...payload\n}: ShareEntryPayload): Promise<BackendResponse> {\n  return apiClient\n    .post(`file-entries/${entryId}/share`, payload)\n    .then(response => response.data);\n}\n\nexport function useShareEntry() {\n  return useMutation({\n    mutationFn: (payload: ShareEntryPayload) => shareEntry(payload),\n    onSuccess: () => {\n      invalidateEntryQueries();\n    },\n    onError: err => {\n      if (axios.isAxiosError(err) && err.response) {\n        const response = err.response.data as BackendErrorResponse;\n        if (response.errors?.emails) {\n          toast.danger(response.errors?.emails[0]);\n        } else {\n          showHttpErrorToast(err);\n        }\n      }\n    },\n  });\n}\n","import {FileEntry} from '@common/uploads/file-entry';\r\n\r\nexport interface DriveEntry extends FileEntry {\r\n  users: DriveEntryUser[];\r\n  workspace_id?: number;\r\n  permissions: {\r\n    'files.create': boolean;\r\n    'files.update': boolean;\r\n    'files.delete': boolean;\r\n    'files.download': boolean;\r\n  };\r\n}\r\n\r\nexport interface DriveFolder extends DriveEntry {\r\n  type: 'folder';\r\n  model_type?: string;\r\n}\r\n\r\nexport interface DriveEntryUser {\r\n  id: number;\r\n  email: string;\r\n  name: string;\r\n  image?: string;\r\n  owns_entry: boolean;\r\n  entry_permissions: DriveEntryPermissions;\r\n}\r\n\r\nexport interface DriveEntryPermissions {\r\n  edit?: boolean;\r\n  view?: boolean;\r\n  download?: boolean;\r\n}\r\n\r\nexport const DRIVE_ENTRY_FULL_PERMISSIONS = {\r\n  edit: true,\r\n  view: true,\r\n  download: true,\r\n};\r\n","import {Button} from '@ui/buttons/button';\r\nimport {ArrowDropDownIcon} from '@ui/icons/material/ArrowDropDown';\r\nimport {\r\n  DRIVE_ENTRY_FULL_PERMISSIONS,\r\n  DriveEntryPermissions,\r\n  DriveEntryUser,\r\n} from '../files/drive-entry';\r\nimport {message} from '@ui/i18n/message';\r\nimport {Trans} from '@ui/i18n/trans';\r\nimport {MessageDescriptor} from '@ui/i18n/message-descriptor';\r\nimport {Menu, MenuItem, MenuTrigger} from '@ui/menu/menu-trigger';\r\n\r\nexport interface PermissionSelectorItem {\r\n  key: keyof DriveEntryPermissions;\r\n  value: DriveEntryPermissions;\r\n  label: MessageDescriptor;\r\n}\r\n\r\nexport const PermissionSelectorItems: PermissionSelectorItem[] = [\r\n  {\r\n    key: 'view',\r\n    value: {view: true},\r\n    label: message('Can view'),\r\n  },\r\n  {\r\n    key: 'download',\r\n    value: {view: true, download: true},\r\n    label: message('Can Download'),\r\n  },\r\n  {\r\n    key: 'edit',\r\n    value: DRIVE_ENTRY_FULL_PERMISSIONS,\r\n    label: message('Can edit'),\r\n  },\r\n];\r\n\r\ninterface Props {\r\n  onChange: (value: PermissionSelectorItem) => void;\r\n  value: PermissionSelectorItem;\r\n  isDisabled?: boolean;\r\n}\r\nexport function PermissionSelector({value, onChange, isDisabled}: Props) {\r\n  return (\r\n    <MenuTrigger\r\n      selectedValue={value.key}\r\n      selectionMode=\"single\"\r\n      onSelectionChange={key => {\r\n        if (key !== value.key) {\r\n          onChange(PermissionSelectorItems.find(p => p.key === key)!);\r\n        }\r\n      }}\r\n    >\r\n      <Button\r\n        variant=\"flat\"\r\n        color=\"chip\"\r\n        size=\"xs\"\r\n        endIcon={<ArrowDropDownIcon />}\r\n        disabled={isDisabled}\r\n      >\r\n        <Trans {...value.label} />\r\n      </Button>\r\n      <Menu>\r\n        {PermissionSelectorItems.map(item => {\r\n          return (\r\n            <MenuItem key={item.key} value={item.key}>\r\n              <Trans {...item.label} />\r\n            </MenuItem>\r\n          );\r\n        })}\r\n      </Menu>\r\n    </MenuTrigger>\r\n  );\r\n}\r\n\r\nexport function getPermissionItemForUser(\r\n  user: DriveEntryUser,\r\n): PermissionSelectorItem {\r\n  const {download, edit} = user.entry_permissions;\r\n  if (edit) {\r\n    return PermissionSelectorItems.find(item => item.key === 'edit')!;\r\n  }\r\n  if (download) {\r\n    return PermissionSelectorItems.find(item => item.key === 'download')!;\r\n  }\r\n  return PermissionSelectorItems.find(item => item.key === 'view')!;\r\n}\r\n","import {useMutation} from '@tanstack/react-query';\nimport {DriveEntryPermissions} from '../../files/drive-entry';\nimport {apiClient} from '@common/http/query-client';\nimport {toast} from '@ui/toast/toast';\nimport {invalidateEntryQueries} from '../../drive-query-keys';\nimport {message} from '@ui/i18n/message';\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\nimport {showHttpErrorToast} from '@common/http/show-http-error-toast';\n\nexport interface ChangePermissionsPayload {\n  userId: number;\n  permissions: DriveEntryPermissions;\n  entryId: number;\n}\n\nexport function useChangePermission() {\n  return useMutation({\n    mutationFn: (payload: ChangePermissionsPayload) =>\n      changePermission(payload),\n    onSuccess: () => {\n      invalidateEntryQueries();\n      toast(message('Updated user permissions'));\n    },\n    onError: err =>\n      showHttpErrorToast(err, message('Could not update permissions')),\n  });\n}\n\nfunction changePermission({\n  entryId,\n  ...payload\n}: ChangePermissionsPayload): Promise<BackendResponse> {\n  return apiClient\n    .put(`file-entries/${entryId}/change-permissions`, payload)\n    .then(response => response.data);\n}\n","import {useState} from 'react';\r\nimport {AnimatePresence, m} from 'framer-motion';\r\nimport clsx from 'clsx';\r\nimport {DriveEntry, DriveEntryUser} from '../files/drive-entry';\r\nimport {\r\n  getPermissionItemForUser,\r\n  PermissionSelector,\r\n  PermissionSelectorItem,\r\n} from './permission-selector';\r\nimport {IconButton} from '@ui/buttons/icon-button';\r\nimport {CloseIcon} from '@ui/icons/material/Close';\r\nimport {useChangePermission} from './queries/use-change-permission';\r\nimport {useUnshareEntries} from './queries/use-unshare-entries';\r\nimport {Trans} from '@ui/i18n/trans';\r\nimport {toast} from '@ui/toast/toast';\r\nimport {message} from '@ui/i18n/message';\r\nimport {showHttpErrorToast} from '@common/http/show-http-error-toast';\r\nimport {UserAvatar} from '@common/auth/user-avatar';\r\n\r\ninterface MemberListProps {\r\n  className?: string;\r\n  entry: DriveEntry;\r\n}\r\n\r\nexport function MemberList({className, entry}: MemberListProps) {\r\n  if (!entry) return null;\r\n\r\n  const users = entry.users;\r\n\r\n  return (\r\n    <div className={clsx(className, 'overflow-hidden')}>\r\n      <div className=\"mb-14 text-sm\">\r\n        <Trans message=\"Who has access\" />\r\n      </div>\r\n      <AnimatePresence initial={false}>\r\n        {users.map(user => (\r\n          <MemberListItem key={user.id} user={user} entry={entry} />\r\n        ))}\r\n      </AnimatePresence>\r\n    </div>\r\n  );\r\n}\r\n\r\ninterface MemberListItemProps {\r\n  user: DriveEntryUser;\r\n  entry: DriveEntry;\r\n}\r\nfunction MemberListItem({user, entry}: MemberListItemProps) {\r\n  return (\r\n    <m.div\r\n      initial={{x: '-100%', opacity: 0}}\r\n      animate={{x: 0, opacity: 1}}\r\n      exit={{x: '100%', opacity: 0}}\r\n      transition={{type: 'tween', duration: 0.125}}\r\n      className=\"mb-20 flex items-center gap-14 text-sm\"\r\n      key={user.id}\r\n    >\r\n      <UserAvatar user={user as any} circle size=\"w-44 h-44\" />\r\n      <div>\r\n        <div>{user.name}</div>\r\n        <div className=\"text-muted\">{user.email}</div>\r\n      </div>\r\n      <div className=\"ml-auto\">\r\n        {user.owns_entry ? (\r\n          <span className=\"text-muted\">\r\n            <Trans message=\"Owner\" />\r\n          </span>\r\n        ) : (\r\n          <ActionButtons user={user} entry={entry} />\r\n        )}\r\n      </div>\r\n    </m.div>\r\n  );\r\n}\r\n\r\ninterface ActionButtonsProps {\r\n  user: DriveEntryUser;\r\n  entry: DriveEntry;\r\n}\r\nfunction ActionButtons({user, entry}: ActionButtonsProps) {\r\n  const changePermissions = useChangePermission();\r\n  const unshareEntry = useUnshareEntries();\r\n  const [activePermission, setActivePermission] =\r\n    useState<PermissionSelectorItem>(() => {\r\n      return getPermissionItemForUser(user);\r\n    });\r\n\r\n  return (\r\n    <div className=\"flex items-center gap-10\">\r\n      <PermissionSelector\r\n        isDisabled={changePermissions.isPending}\r\n        onChange={item => {\r\n          changePermissions.mutate({\r\n            userId: user.id,\r\n            permissions: item.value,\r\n            entryId: entry.id,\r\n          });\r\n          setActivePermission(item);\r\n        }}\r\n        value={activePermission}\r\n      />\r\n      <IconButton\r\n        disabled={unshareEntry.isPending}\r\n        onClick={() => {\r\n          unshareEntry.mutate(\r\n            {userId: user.id, entryIds: [entry.id]},\r\n            {\r\n              onSuccess: () => {\r\n                toast(message('Member removed'));\r\n              },\r\n              onError: err =>\r\n                showHttpErrorToast(err, message('Could not remove member')),\r\n            },\r\n          );\r\n        }}\r\n      >\r\n        <CloseIcon />\r\n      </IconButton>\r\n    </div>\r\n  );\r\n}\r\n","import {useState} from 'react';\nimport {Button} from '@ui/buttons/button';\nimport {useShareEntry} from './queries/use-share-entry';\nimport {\n  PermissionSelector,\n  PermissionSelectorItem,\n  PermissionSelectorItems,\n} from './permission-selector';\nimport {MemberList} from './member-list';\nimport {\n  ChipField,\n  ChipValue,\n} from '@ui/forms/input-field/chip-field/chip-field';\nimport {useTrans} from '@ui/i18n/use-trans';\nimport {Trans} from '@ui/i18n/trans';\nimport {DriveEntry} from '../files/drive-entry';\nimport {Item} from '@ui/forms/listbox/item';\nimport {useSettings} from '@ui/settings/use-settings';\nimport {useNormalizedModels} from '@common/ui/normalized-model/use-normalized-models';\nimport {isEmail} from '@ui/utils/string/is-email';\nimport {Avatar} from '@ui/avatar/avatar';\n\ninterface SharePanelProps {\n  className?: string;\n  entry: DriveEntry;\n}\nexport function SharePanel({className, entry}: SharePanelProps) {\n  const {trans} = useTrans();\n  const {share} = useSettings();\n  const shareEntry = useShareEntry();\n  const [chips, setChips] = useState<ChipValue[]>([]);\n  const [isSharing, setIsSharing] = useState(false);\n  const [selectedPermission, setSelectedPermission] =\n    useState<PermissionSelectorItem>(PermissionSelectorItems[0]);\n  const allEmailsValid = chips.every(chip => !chip.invalid);\n  const [inputValue, setInputValue] = useState('');\n  const query = useNormalizedModels(\n    'normalized-models/user',\n    {perPage: 7, query: inputValue},\n    {enabled: share?.suggest_emails},\n  );\n\n  // show user's email, instead of name in the chip\n  const displayWith = (chip: ChipValue) => chip.description || chip.name;\n\n  return (\n    <div className={className}>\n      <ChipField\n        value={chips}\n        onChange={setChips}\n        isAsync\n        isLoading={query.fetchStatus === 'fetching'}\n        inputValue={inputValue}\n        onInputValueChange={setInputValue}\n        suggestions={query.data?.results}\n        displayWith={displayWith}\n        validateWith={chip => {\n          const invalid = !isEmail(chip.description);\n          return {\n            ...chip,\n            invalid,\n            errorMessage: invalid\n              ? trans({message: 'Not a valid email'})\n              : undefined,\n          };\n        }}\n        placeholder={trans({message: 'Enter email addresses'})}\n        label={<Trans message=\"Invite people\" />}\n      >\n        {user => (\n          <Item\n            value={user.id}\n            startIcon={<Avatar circle src={user.image} alt=\"\" />}\n            description={user.description}\n          >\n            {user.name}\n          </Item>\n        )}\n      </ChipField>\n      <div className=\"mt-14 flex items-center justify-between gap-14\">\n        <PermissionSelector\n          onChange={setSelectedPermission}\n          value={selectedPermission}\n        />\n        {chips.length ? (\n          <Button\n            variant=\"flat\"\n            color=\"primary\"\n            size=\"sm\"\n            disabled={isSharing || !allEmailsValid}\n            onClick={() => {\n              setIsSharing(true);\n              shareEntry.mutate(\n                {\n                  emails: chips.map(c => displayWith(c)),\n                  permissions: selectedPermission.value,\n                  entryId: entry.id,\n                },\n                {\n                  onSuccess: () => {\n                    setChips([]);\n                  },\n                  onSettled: () => {\n                    setIsSharing(false);\n                  },\n                },\n              );\n            }}\n          >\n            <Trans message=\"Share\" />\n          </Button>\n        ) : null}\n      </div>\n      <MemberList className=\"mt-30\" entry={entry} />\n    </div>\n  );\n}\n","import {useQuery} from '@tanstack/react-query';\nimport {ShareableLink} from '../shareable-link';\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\nimport {DriveQueryKeys} from '../../drive-query-keys';\nimport {apiClient} from '@common/http/query-client';\n\nexport interface FetchShareableLinkResponse extends BackendResponse {\n  link: ShareableLink | null;\n}\n\nexport function useEntryShareableLink(entryId: number) {\n  return useQuery({\n    queryKey: DriveQueryKeys.fetchEntryShareableLink(entryId!),\n    queryFn: () => fetchLinkByEntryId(entryId!),\n    enabled: !!entryId,\n  });\n}\n\nfunction fetchLinkByEntryId(\n  entryId: number,\n): Promise<FetchShareableLinkResponse> {\n  return apiClient\n    .get(`file-entries/${entryId}/shareable-link`, {\n      params: {loader: 'shareableLink'},\n    })\n    .then(response => response.data);\n}\n","import {useMutation} from '@tanstack/react-query';\nimport {apiClient, queryClient} from '@common/http/query-client';\nimport {FetchShareableLinkResponse} from './use-entry-shareable-link';\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\nimport {DriveQueryKeys} from '../../drive-query-keys';\nimport {message} from '@ui/i18n/message';\nimport {showHttpErrorToast} from '@common/http/show-http-error-toast';\n\ninterface DeleteLinkParams {\n  entryId: number;\n}\n\nfunction deleteShareableLink({\n  entryId,\n}: DeleteLinkParams): Promise<BackendResponse> {\n  return apiClient\n    .delete(`file-entries/${entryId}/shareable-link`)\n    .then(r => r.data);\n}\n\ninterface Payload {\n  entryId: number;\n}\nexport function useDeleteShareableLink() {\n  return useMutation({\n    mutationFn: ({entryId}: Payload) => deleteShareableLink({entryId}),\n    onSuccess: (response, {entryId}) => {\n      queryClient.setQueryData<FetchShareableLinkResponse>(\n        DriveQueryKeys.fetchEntryShareableLink(entryId),\n        {...response, link: null},\n      );\n    },\n    onError: err => showHttpErrorToast(err, message('Could not delete link')),\n  });\n}\n","export function randomString(length: number = 36) {\n  let random = '';\n  const possible =\n    'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n\n  for (let i = 0; i < length; i += 1) {\n    random += possible.charAt(Math.floor(Math.random() * possible.length));\n  }\n\n  return random;\n}\n","import useClipboard from 'react-use-clipboard';\nimport {useEntryShareableLink} from '../../shareable-link/queries/use-entry-shareable-link';\nimport {useCreateShareableLink} from '../../shareable-link/queries/create-shareable-link';\nimport {useDeleteShareableLink} from '../../shareable-link/queries/use-delete-shareable-link';\nimport {Button} from '@ui/buttons/button';\nimport {ShareableLink} from '../../shareable-link/shareable-link';\nimport {TextField} from '@ui/forms/input-field/text-field/text-field';\nimport type {ShareDialogActivePanel} from '../share-dialog';\nimport {Switch} from '@ui/forms/toggle/switch';\nimport {Trans} from '@ui/i18n/trans';\nimport {useTrans} from '@ui/i18n/use-trans';\nimport {useActiveDialogEntry} from '../../drive-store';\nimport {DriveEntry} from '../../files/drive-entry';\nimport {useSettings} from '@ui/settings/use-settings';\nimport {randomString} from '@ui/utils/string/random-string';\n\ninterface ShareableLinkPanelProps {\n  setActivePanel: (name: ShareDialogActivePanel) => void;\n  entry: DriveEntry;\n  focusInput?: boolean;\n}\nexport function ShareableLinkPanel({\n  setActivePanel,\n  entry,\n  focusInput,\n}: ShareableLinkPanelProps) {\n  const query = useEntryShareableLink(entry.id);\n  const linkExists = !!query.data?.link;\n  const createLink = useCreateShareableLink();\n  const deleteLink = useDeleteShareableLink();\n  const isLoading =\n    query.isLoading || createLink.isPending || deleteLink.isPending;\n  return (\n    <div>\n      <div className=\"mb-10\">\n        <Trans message=\"Share link\" />\n      </div>\n      <div className=\"flex items-center justify-between gap-14 px-2 pb-4\">\n        <Switch\n          checked={linkExists}\n          disabled={isLoading}\n          onChange={() => {\n            if (linkExists) {\n              deleteLink.mutate({entryId: entry.id});\n            } else {\n              createLink.mutate({entryId: entry.id});\n            }\n          }}\n        >\n          {linkExists ? (\n            <Trans message=\"Shareable link is created\" />\n          ) : (\n            <Trans message=\"Create shareable link\" />\n          )}\n        </Switch>\n        {linkExists && (\n          <Button\n            variant=\"link\"\n            color=\"primary\"\n            onClick={() => {\n              setActivePanel('linkSettings');\n            }}\n          >\n            <Trans message=\"Link settings\" />\n          </Button>\n        )}\n      </div>\n      <ShareableLinkInput autoFocus={focusInput} link={query.data?.link} />\n    </div>\n  );\n}\n\ninterface ShareableLinkInputProps {\n  link?: ShareableLink | null;\n  autoFocus?: boolean;\n}\nfunction ShareableLinkInput({link, autoFocus}: ShareableLinkInputProps) {\n  const {base_url} = useSettings();\n  const {trans} = useTrans();\n  const entry = useActiveDialogEntry();\n  const hash = link?.hash || entry?.hash || randomString();\n  const linkUrl = `${base_url}/drive/s/${hash}`;\n  const [isCopied, setCopied] = useClipboard(linkUrl, {\n    successDuration: 1000,\n  });\n  return (\n    <TextField\n      autoFocus={autoFocus}\n      disabled={!link}\n      className=\"mt-10\"\n      readOnly\n      value={linkUrl}\n      aria-label={trans({message: 'Shareable link'})}\n      onFocus={e => {\n        (e.target as HTMLInputElement).select();\n      }}\n      endAppend={\n        <Button\n          className=\"min-w-100\"\n          variant=\"flat\"\n          color=\"primary\"\n          onClick={setCopied}\n        >\n          {isCopied ? <Trans message=\"Copied!\" /> : <Trans message=\"Copy\" />}\n        </Button>\n      }\n    />\n  );\n}\n","import {useMutation} from '@tanstack/react-query';\nimport {UseFormReturn} from 'react-hook-form';\nimport {apiClient, queryClient} from '@common/http/query-client';\nimport {FetchShareableLinkResponse} from './use-entry-shareable-link';\nimport {onFormQueryError} from '@common/errors/on-form-query-error';\nimport {DriveQueryKeys} from '../../drive-query-keys';\n\nexport interface UpdateShareableLinkPayload {\n  allowEdit: boolean;\n  allowDownload: boolean;\n  expiresAt: string;\n  password: string;\n  entryId: number;\n}\n\nfunction updateShareableLink({\n  entryId,\n  ...payload\n}: UpdateShareableLinkPayload): Promise<FetchShareableLinkResponse> {\n  return apiClient\n    .put(`file-entries/${entryId}/shareable-link`, payload)\n    .then(response => response.data);\n}\n\nexport function useUpdateShareableLink(\n  form: UseFormReturn<UpdateShareableLinkPayload>,\n) {\n  return useMutation({\n    mutationFn: (payload: UpdateShareableLinkPayload) =>\n      updateShareableLink(payload),\n    onSuccess: (data, {entryId}) => {\n      queryClient.setQueryData<FetchShareableLinkResponse>(\n        DriveQueryKeys.fetchEntryShareableLink(entryId),\n        data,\n      );\n    },\n    onError: r => onFormQueryError(r, form),\n  });\n}\n","import {useForm} from 'react-hook-form';\nimport {Fragment, ReactElement, useState} from 'react';\nimport clsx from 'clsx';\nimport {m} from 'framer-motion';\nimport {getLocalTimeZone, now} from '@internationalized/date';\nimport {Button} from '@ui/buttons/button';\nimport {FormTextField} from '@ui/forms/input-field/text-field/text-field';\nimport {DialogFooter} from '@ui/overlays/dialog/dialog-footer';\nimport type {ShareDialogActivePanel} from '@app/drive/share-dialog/share-dialog';\nimport {useEntryShareableLink} from '@app/drive/shareable-link/queries/use-entry-shareable-link';\nimport {Form} from '@ui/forms/form';\nimport {\n  UpdateShareableLinkPayload,\n  useUpdateShareableLink,\n} from '@app/drive/shareable-link/queries/use-update-shareable-link';\nimport {FormSwitch, Switch} from '@ui/forms/toggle/switch';\nimport {toast} from '@ui/toast/toast';\nimport {useDialogContext} from '@ui/overlays/dialog/dialog-context';\nimport {DialogHeader} from '@ui/overlays/dialog/dialog-header';\nimport {DialogBody} from '@ui/overlays/dialog/dialog-body';\nimport {FormDatePicker} from '@ui/forms/input-field/date/date-picker/date-picker';\nimport {useTrans} from '@ui/i18n/use-trans';\nimport {Trans} from '@ui/i18n/trans';\nimport {message} from '@ui/i18n/message';\nimport {FileEntry} from '@common/uploads/file-entry';\n\ninterface LinkSettingsDialogProps {\n  className?: string;\n  setActivePanel: (name: ShareDialogActivePanel) => void;\n  entry: FileEntry;\n}\nexport function LinkSettingsDialog({\n  className,\n  setActivePanel,\n  entry,\n}: LinkSettingsDialogProps) {\n  const {formId} = useDialogContext();\n  const {data} = useEntryShareableLink(entry.id);\n  const link = data?.link;\n  const form = useForm<UpdateShareableLinkPayload>({\n    defaultValues: {\n      allowDownload: link?.allow_download,\n      allowEdit: link?.allow_edit,\n      expiresAt: link?.expires_at,\n      entryId: entry.id,\n    },\n  });\n  const updateLink = useUpdateShareableLink(form);\n\n  return (\n    <Fragment>\n      <DialogHeader\n        onDismiss={() => {\n          setActivePanel('main');\n        }}\n      >\n        <Trans message=\"Shareable Link Settings\" />\n      </DialogHeader>\n      <DialogBody>\n        <m.div\n          key=\"link-settings-content\"\n          className=\"min-h-[335px]\"\n          animate={{opacity: 1, y: 0}}\n          initial={{opacity: 0, y: 20}}\n          exit={{opacity: 0, y: -20}}\n          transition={{duration: 0.1}}\n        >\n          <Form\n            id={formId}\n            className={className}\n            form={form}\n            onSubmit={value => {\n              updateLink.mutate(value, {\n                onSuccess: () => {\n                  setActivePanel('main');\n                  toast(message('Link settings saved'));\n                },\n              });\n            }}\n          >\n            <LinkExpirationOption showField={!!link?.expires_at} />\n            <LinkPasswordOption showField={!!link?.password} />\n            <LinkOption>\n              <Trans message=\"Allow download\" />\n              <FormSwitch name=\"allowDownload\">\n                <Trans message=\"Users with link can download this item\" />\n              </FormSwitch>\n            </LinkOption>\n            <LinkOption showBorder={false}>\n              <Trans message=\"Allow import\" />\n              <FormSwitch name=\"allowEdit\">\n                <Trans message=\"Users with link can import this item into their own drive\" />\n              </FormSwitch>\n            </LinkOption>\n          </Form>\n        </m.div>\n      </DialogBody>\n      <DialogFooter>\n        <Button\n          type=\"button\"\n          onClick={() => {\n            setActivePanel('main');\n          }}\n        >\n          <Trans message=\"Cancel\" />\n        </Button>\n        <Button\n          type=\"submit\"\n          form={formId}\n          variant=\"flat\"\n          color=\"primary\"\n          disabled={updateLink.isPending}\n        >\n          <Trans message=\"Save\" />\n        </Button>\n      </DialogFooter>\n    </Fragment>\n  );\n}\n\nconst minDate = now(getLocalTimeZone());\n\ninterface LinkExpirationOptionProps {\n  showField: boolean;\n}\nfunction LinkExpirationOption({\n  showField: showFieldDefault,\n}: LinkExpirationOptionProps) {\n  const {trans} = useTrans();\n  const [showField, setShowField] = useState(showFieldDefault);\n  return (\n    <LinkOption>\n      <Trans message=\"Link expiration\" />\n      <div>\n        <Switch\n          checked={showField}\n          onChange={e => {\n            setShowField(e.target.checked);\n          }}\n        >\n          <Trans message=\"Link is valid until\" />\n        </Switch>\n        {showField && (\n          <FormDatePicker\n            min={minDate}\n            name=\"expiresAt\"\n            granularity=\"minute\"\n            className=\"mt-20\"\n            aria-label={trans({\n              message: 'Link expiration date and time',\n            })}\n          />\n        )}\n      </div>\n    </LinkOption>\n  );\n}\n\ninterface LinkPasswordOptionProps {\n  showField: boolean;\n}\nfunction LinkPasswordOption({\n  showField: showFieldDefault,\n}: LinkPasswordOptionProps) {\n  const {trans} = useTrans();\n  const [showField, setShowField] = useState(showFieldDefault);\n  return (\n    <LinkOption>\n      <Trans message=\"Password protect\" />\n      <div>\n        <Switch\n          checked={showField}\n          onChange={e => {\n            setShowField(e.target.checked);\n          }}\n        >\n          <Trans message=\"Users will need to enter password in order to view this link\" />\n        </Switch>\n        {showField && (\n          <FormTextField\n            type=\"password\"\n            autoFocus\n            name=\"password\"\n            className=\"mt-20\"\n            aria-label={trans({message: 'Link password'})}\n            description={\n              <Trans message=\"Password will not be requested when viewing the link as file owner.\" />\n            }\n            placeholder={trans({\n              message: 'Enter new password...',\n            })}\n          />\n        )}\n      </div>\n    </LinkOption>\n  );\n}\n\ninterface LinkOptionProps {\n  children: [ReactElement, ReactElement];\n  showBorder?: boolean;\n}\nfunction LinkOption({children, showBorder = true}: LinkOptionProps) {\n  const [title, content] = children;\n  return (\n    <div className={clsx(showBorder && 'mb-20 border-b pb-20')}>\n      <div className=\"mb-8 text-sm font-medium\">{title}</div>\n      {content}\n    </div>\n  );\n}\n","import {Fragment, useState} from 'react';\nimport {AnimatePresence, m} from 'framer-motion';\nimport {SharePanel} from './share-panel';\nimport {ShareableLinkPanel} from './link-panel/shareable-link-panel';\nimport {LinkSettingsDialog} from './link-panel/link-settings-dialog';\nimport {Dialog} from '@ui/overlays/dialog/dialog';\nimport {DialogHeader} from '@ui/overlays/dialog/dialog-header';\nimport {DialogBody} from '@ui/overlays/dialog/dialog-body';\nimport {Trans} from '@ui/i18n/trans';\nimport {DriveEntry} from '../files/drive-entry';\nimport {useQuery} from '@tanstack/react-query';\nimport {apiClient} from '@common/http/query-client';\nimport {DriveQueryKeys} from '../drive-query-keys';\n\nexport type ShareDialogActivePanel = 'main' | 'linkSettings';\n\ninterface ShareDialogProps {\n  entry: DriveEntry;\n  focusLinkInput?: boolean;\n}\nexport function ShareDialog({\n  entry: initialEntry,\n  focusLinkInput,\n}: ShareDialogProps) {\n  const {\n    data: {fileEntry},\n  } = useQuery({\n    queryKey: DriveQueryKeys.fetchFileEntry(initialEntry.id),\n    queryFn: () =>\n      apiClient\n        .get(`drive/file-entries/${initialEntry.id}/model`)\n        .then(response => response.data as {fileEntry: DriveEntry}),\n    initialData: {fileEntry: initialEntry},\n  });\n\n  const [activePanel, setActivePanel] =\n    useState<ShareDialogActivePanel>('main');\n\n  return (\n    <Dialog size=\"lg\">\n      <AnimatePresence initial={false} mode=\"wait\">\n        {activePanel === 'linkSettings' ? (\n          <LinkSettingsDialog\n            key=\"one\"\n            setActivePanel={setActivePanel}\n            entry={fileEntry}\n          />\n        ) : (\n          <MainDialog\n            key=\"two\"\n            setActivePanel={setActivePanel}\n            entry={fileEntry}\n            focusLinkInput={focusLinkInput}\n          />\n        )}\n      </AnimatePresence>\n    </Dialog>\n  );\n}\n\ninterface MainDialogProps {\n  setActivePanel: (name: ShareDialogActivePanel) => void;\n  entry: DriveEntry;\n  focusLinkInput?: boolean;\n}\nfunction MainDialog({setActivePanel, entry, focusLinkInput}: MainDialogProps) {\n  return (\n    <Fragment>\n      <DialogHeader>\n        <Trans message=\"Share ‘:name’\" values={{name: entry.name}} />\n      </DialogHeader>\n      <DialogBody className=\"relative\">\n        <m.div\n          key=\"share-content\"\n          animate={{opacity: 1, y: 0}}\n          initial={{opacity: 0, y: 20}}\n          exit={{opacity: 0, y: -20}}\n          transition={{duration: 0.1}}\n        >\n          <SharePanel className=\"mb-30 border-b pb-30\" entry={entry} />\n          <ShareableLinkPanel\n            setActivePanel={setActivePanel}\n            entry={entry}\n            focusInput={!!focusLinkInput}\n          />\n        </m.div>\n      </DialogBody>\n    </Fragment>\n  );\n}\n","import {useActiveWorkspaceId} from '@common/workspace/active-workspace-id-context';\nimport {DriveQueryKeys} from '@app/drive/drive-query-keys';\nimport {DriveApiIndexParams} from '@app/drive/files/queries/use-paginated-entries';\nimport {apiClient} from '@common/http/query-client';\nimport {keepPreviousData, useQuery} from '@tanstack/react-query';\nimport {encodeBackendFilters} from '@common/datatable/filters/utils/encode-backend-filters';\nimport {useMemo} from 'react';\nimport {LengthAwarePaginationResponse} from '@common/http/backend-response/pagination-response';\nimport {DriveFolder} from '@app/drive/files/drive-entry';\n\ninterface Props {\n  query?: string;\n}\nexport function useMoveEntriesDialogFolderSearch({query}: Props) {\n  const {workspaceId} = useActiveWorkspaceId();\n  const params = useMemo(() => {\n    return {\n      section: 'search',\n      workspaceId,\n      query,\n      filters: encodeBackendFilters([\n        {\n          key: 'type',\n          value: 'folder',\n        },\n      ]),\n    } as DriveApiIndexParams;\n  }, [workspaceId, query]);\n\n  return useQuery({\n    queryKey: DriveQueryKeys.fetchEntries(params),\n    queryFn: ({signal}) => fetchEntries(params, signal),\n    enabled: !!query,\n    placeholderData: keepPreviousData,\n  });\n}\n\nasync function fetchEntries(\n  params: DriveApiIndexParams,\n  signal?: AbortSignal,\n): Promise<LengthAwarePaginationResponse<DriveFolder>> {\n  if (params.query) {\n    await new Promise(resolve => setTimeout(resolve, 300));\n  }\n  return apiClient\n    .get('drive/file-entries', {\n      params,\n      signal: params.query ? signal : undefined,\n    })\n    .then(response => response.data);\n}\n","import React, {useState} from 'react';\nimport {SearchIcon} from '@ui/icons/material/Search';\nimport {ComboBox} from '@ui/forms/combobox/combobox';\nimport {Item} from '@ui/forms/listbox/item';\nimport {useTrans} from '@ui/i18n/use-trans';\nimport {useMoveEntriesDialogFolderSearch} from '@app/drive/files/dialogs/move-entries-dialog/use-move-entries-dialog-folder-search';\nimport {DriveFolder} from '@app/drive/files/drive-entry';\n\ninterface SearchComboBoxProps {\n  onFolderSelected: (folder: DriveFolder) => void;\n}\nexport function MoveEntriesDialogSearch({\n  onFolderSelected,\n}: SearchComboBoxProps) {\n  const {trans} = useTrans();\n  const searchLabel = trans({message: 'Search folders'});\n  const [query, setQuery] = useState('');\n  const {isFetching, data} = useMoveEntriesDialogFolderSearch({query});\n  const folders = data?.data;\n  return (\n    <ComboBox\n      size=\"sm\"\n      maxItems={10}\n      placeholder={searchLabel}\n      aria-label={searchLabel}\n      className=\"pt-20\"\n      endAdornmentIcon={<SearchIcon />}\n      isAsync\n      isLoading={isFetching}\n      inputValue={query}\n      onInputValueChange={setQuery}\n      blurReferenceOnItemSelection\n      clearInputOnItemSelection\n      selectionMode=\"none\"\n      openMenuOnFocus={false}\n    >\n      {folders?.map(folder => (\n        <Item\n          key={folder.id}\n          value={folder.id}\n          textLabel={folder.name}\n          onSelected={() => {\n            onFolderSelected(folder);\n          }}\n        >\n          {folder.name}\n        </Item>\n      ))}\n    </ComboBox>\n  );\n}\n","import React from 'react';\nimport {IconButton} from '@ui/buttons/icon-button';\nimport {ArrowBackIcon} from '@ui/icons/material/ArrowBack';\nimport {Breadcrumb} from '@ui/breadcrumbs/breadcrumb';\nimport {FolderIcon} from '@ui/icons/material/Folder';\nimport {BreadcrumbItem} from '@ui/breadcrumbs/breadcrumb-item';\nimport {useFolderPath} from '@app/drive/files/queries/use-folder-path';\nimport {RootFolderPage} from '@app/drive/drive-page/drive-page';\nimport {Trans} from '@ui/i18n/trans';\nimport {DriveFolder} from '@app/drive/files/drive-entry';\n\ninterface FolderBreadCrumbsProps {\n  selectedFolder: DriveFolder;\n  onFolderSelected: (folder: DriveFolder) => void;\n}\nexport function MoveEntriesDialogBreadcrumbs({\n  selectedFolder,\n  onFolderSelected,\n}: FolderBreadCrumbsProps) {\n  const {data} = useFolderPath({\n    hash: selectedFolder.hash,\n    isEnabled: selectedFolder?.hash !== RootFolderPage.folder.hash,\n  });\n\n  let previous: DriveFolder | null = null;\n  if (data?.path) {\n    if (data.path.length === 1) {\n      previous = RootFolderPage.folder;\n    } else {\n      previous = data.path[data.path.length - 2];\n    }\n  }\n\n  return (\n    <div className=\"flex items-center gap-6 border-b pb-10\">\n      <IconButton\n        className=\"flex-shrink-0\"\n        variant=\"outline\"\n        size=\"xs\"\n        disabled={!previous}\n        onClick={() => {\n          if (previous) {\n            onFolderSelected(previous);\n          }\n        }}\n      >\n        <ArrowBackIcon />\n      </IconButton>\n      <Breadcrumb size=\"sm\" className=\"flex-auto\">\n        <BreadcrumbItem\n          onSelected={() => {\n            onFolderSelected(RootFolderPage.folder);\n          }}\n          className=\"flex items-center gap-8\"\n        >\n          <FolderIcon className=\"icon-sm\" />\n          <Trans message={RootFolderPage.folder.name} />\n        </BreadcrumbItem>\n        {data?.path.map(item => (\n          <BreadcrumbItem\n            onSelected={() => {\n              onFolderSelected(item);\n            }}\n            key={item.id || 'root'}\n            className=\"flex items-center gap-8\"\n          >\n            {!item.id && <FolderIcon className=\"icon-sm\" />}\n            {item.name}\n          </BreadcrumbItem>\n        ))}\n      </Breadcrumb>\n    </div>\n  );\n}\n","export default \"__VITE_ASSET__b64d6dd2__\"","import {useActiveWorkspaceId} from '@common/workspace/active-workspace-id-context';\nimport {DriveQueryKeys} from '@app/drive/drive-query-keys';\nimport {DriveApiIndexParams} from '@app/drive/files/queries/use-paginated-entries';\nimport {PartialFolder} from '@app/drive/files/utils/can-move-entries-into';\nimport {apiClient} from '@common/http/query-client';\nimport {useInfiniteQuery} from '@tanstack/react-query';\nimport {\n  hasNextPage,\n  LengthAwarePaginationResponse,\n} from '@common/http/backend-response/pagination-response';\nimport {encodeBackendFilters} from '@common/datatable/filters/utils/encode-backend-filters';\nimport {useMemo} from 'react';\nimport {DriveFolder} from '@app/drive/files/drive-entry';\n\ninterface Props {\n  selectedFolder: PartialFolder;\n  movingSharedFiles: boolean;\n}\nexport function useMoveEntriesDialogFolders({\n  selectedFolder,\n  movingSharedFiles,\n}: Props) {\n  const {workspaceId} = useActiveWorkspaceId();\n  const params = useMemo(() => {\n    const filters = encodeBackendFilters([\n      {\n        key: 'type',\n        value: 'folder',\n      },\n    ]);\n    return {\n      section: 'folder',\n      folderId:\n        selectedFolder.hash == '0' && movingSharedFiles\n          ? 'sharedWithMe'\n          : selectedFolder.hash,\n      workspaceId,\n      filters,\n    } as DriveApiIndexParams;\n  }, [workspaceId, selectedFolder.hash, movingSharedFiles]);\n\n  return useInfiniteQuery({\n    queryKey: DriveQueryKeys.fetchEntries(params),\n    queryFn: ({pageParam = 1}) => {\n      return fetchEntries({...params, page: pageParam});\n    },\n    initialPageParam: 1,\n    getNextPageParam: lastResponse => {\n      const currentPage = lastResponse.current_page;\n      if (!hasNextPage(lastResponse)) {\n        return undefined;\n      }\n      return currentPage + 1;\n    },\n  });\n}\n\nfunction fetchEntries(\n  params: DriveApiIndexParams,\n): Promise<LengthAwarePaginationResponse<DriveFolder>> {\n  return apiClient\n    .get('drive/file-entries', {\n      params,\n    })\n    .then(response => response.data);\n}\n","import React, {Fragment, ReactElement} from 'react';\nimport {FileTypeIcon} from '@common/uploads/components/file-type-icon/file-type-icon';\nimport {ChevronRightIcon} from '@ui/icons/material/ChevronRight';\nimport {Trans} from '@ui/i18n/trans';\nimport myFilesSvg from './my-files.svg';\nimport {useMoveEntriesDialogFolders} from '@app/drive/files/dialogs/move-entries-dialog/use-move-entries-dialog-folders';\nimport {ProgressCircle} from '@ui/progress/progress-circle';\nimport {InfiniteScrollSentinel} from '@common/ui/infinite-scroll/infinite-scroll-sentinel';\nimport {DriveFolder} from '@app/drive/files/drive-entry';\nimport {SvgImage} from '@ui/images/svg-image';\nimport {IllustratedMessage} from '@ui/images/illustrated-message';\nimport {List, ListItem} from '@ui/list/list';\n\ninterface Props {\n  selectedFolder: DriveFolder;\n  onFolderSelected: (folder: DriveFolder) => void;\n  movingSharedFiles: boolean;\n}\nexport function MoveEntriesDialogFolderList({\n  onFolderSelected,\n  selectedFolder,\n  movingSharedFiles,\n}: Props) {\n  const query = useMoveEntriesDialogFolders({\n    selectedFolder,\n    movingSharedFiles,\n  });\n  let content: ReactElement;\n\n  if (query.isLoading) {\n    content = (\n      <div className=\"flex h-full w-full items-center justify-center\">\n        <ProgressCircle isIndeterminate size=\"md\" />\n      </div>\n    );\n  } else if (query.data?.pages[0]?.data.length === 0) {\n    content = (\n      <IllustratedMessage\n        size=\"xs\"\n        className=\"pb-20 pt-64\"\n        image={<SvgImage src={myFilesSvg} />}\n        title={\n          <Trans\n            message={`There are no subfolders in \":folder\"`}\n            values={{folder: selectedFolder.name}}\n          />\n        }\n      />\n    );\n  } else {\n    content = (\n      <Fragment>\n        <List>\n          {query.data?.pages\n            .flatMap(r => r.data)\n            .map(folder => (\n              <ListItem\n                className=\"min-h-48 border-b\"\n                key={folder.id}\n                onSelected={() => {\n                  onFolderSelected(folder);\n                }}\n                startIcon={<FileTypeIcon type=\"folder\" />}\n                endIcon={<ChevronRightIcon size=\"md\" />}\n              >\n                {folder.name}\n              </ListItem>\n            ))}\n        </List>\n        <InfiniteScrollSentinel query={query} />\n      </Fragment>\n    );\n  }\n\n  return <div className=\"h-288 overflow-y-auto\">{content}</div>;\n}\n","import React, {useState} from 'react';\r\nimport {Button} from '@ui/buttons/button';\r\nimport {useMoveEntries} from '../../queries/use-move-entries';\r\nimport {NewFolderDialog} from '../new-folder-dialog';\r\nimport {CreateNewFolderIcon} from '@ui/icons/material/CreateNewFolder';\r\nimport {MoveEntriesDialogSearch} from './move-entries-dialog-search';\r\nimport {MoveEntriesDialogBreadcrumbs} from './move-entries-dialog-breadcrumbs';\r\nimport {MoveEntriesDialogFolderList} from './move-entries-dialog-folder-list';\r\nimport {DialogTrigger} from '@ui/overlays/dialog/dialog-trigger';\r\nimport {DialogFooter} from '@ui/overlays/dialog/dialog-footer';\r\nimport {useDialogContext} from '@ui/overlays/dialog/dialog-context';\r\nimport {Dialog} from '@ui/overlays/dialog/dialog';\r\nimport {DialogHeader} from '@ui/overlays/dialog/dialog-header';\r\nimport {DialogBody} from '@ui/overlays/dialog/dialog-body';\r\nimport {Trans} from '@ui/i18n/trans';\r\nimport {RootFolderPage} from '../../../drive-page/drive-page';\r\nimport {DriveEntry, DriveFolder} from '../../drive-entry';\r\nimport {useDriveStore} from '../../../drive-store';\r\nimport {canMoveEntriesInto} from '../../utils/can-move-entries-into';\r\nimport {useAuth} from '@common/auth/use-auth';\r\n\r\ninterface MoveEntriesDialogProps {\r\n  entries: DriveEntry[];\r\n}\r\nexport function MoveEntriesDialog({entries}: MoveEntriesDialogProps) {\r\n  const {user} = useAuth();\r\n  const activePage = useDriveStore(s => s.activePage);\r\n  const [selectedFolder, setSelectedFolder] = useState<DriveFolder>(\r\n    activePage?.folder || RootFolderPage.folder,\r\n  );\r\n  const movingSharedFiles = entries.some(\r\n    e => !e.users.find(u => u.id === user!.id)?.owns_entry,\r\n  );\r\n\r\n  return (\r\n    <Dialog size=\"lg\">\r\n      <DialogHeader>\r\n        <Trans\r\n          message=\"Move [one ‘:name‘|other :count items]\"\r\n          values={{\r\n            count: entries.length,\r\n            name: entries[0].name,\r\n          }}\r\n        />\r\n      </DialogHeader>\r\n      <DialogBody>\r\n        <div className=\"text-sm\">\r\n          <Trans message=\"Select a destination folder.\" />\r\n        </div>\r\n        <MoveEntriesDialogSearch onFolderSelected={setSelectedFolder} />\r\n        <div className=\"mb-20 mt-40\">\r\n          <MoveEntriesDialogBreadcrumbs\r\n            selectedFolder={selectedFolder}\r\n            onFolderSelected={setSelectedFolder}\r\n          />\r\n          <MoveEntriesDialogFolderList\r\n            movingSharedFiles={movingSharedFiles}\r\n            selectedFolder={selectedFolder}\r\n            onFolderSelected={setSelectedFolder}\r\n          />\r\n        </div>\r\n      </DialogBody>\r\n      <Footer\r\n        selectedFolder={selectedFolder}\r\n        setSelectedFolder={setSelectedFolder}\r\n        entries={entries}\r\n      />\r\n    </Dialog>\r\n  );\r\n}\r\n\r\ninterface FooterProps {\r\n  selectedFolder: DriveFolder;\r\n  setSelectedFolder: (folder: DriveFolder) => void;\r\n  entries: DriveEntry[];\r\n}\r\nfunction Footer({selectedFolder, setSelectedFolder, entries}: FooterProps) {\r\n  const {close} = useDialogContext();\r\n  const moveEntries = useMoveEntries();\r\n  return (\r\n    <DialogFooter\r\n      className=\"border-t\"\r\n      startAction={\r\n        <DialogTrigger\r\n          type=\"modal\"\r\n          onClose={folder => {\r\n            if (folder) {\r\n              setSelectedFolder(folder);\r\n            }\r\n          }}\r\n        >\r\n          <Button startIcon={<CreateNewFolderIcon />} variant=\"text\">\r\n            <Trans message=\"New Folder\" />\r\n          </Button>\r\n          <NewFolderDialog parentId={selectedFolder.id} />\r\n        </DialogTrigger>\r\n      }\r\n    >\r\n      <Button className=\"max-md:hidden\" variant=\"flat\" onClick={() => close()}>\r\n        <Trans message=\"Cancel\" />\r\n      </Button>\r\n      <Button\r\n        type=\"submit\"\r\n        variant=\"flat\"\r\n        color=\"primary\"\r\n        disabled={\r\n          !canMoveEntriesInto(entries, selectedFolder) || moveEntries.isPending\r\n        }\r\n        onClick={() => {\r\n          moveEntries.mutate(\r\n            {\r\n              destinationId: selectedFolder.id,\r\n              entryIds: entries.map(e => e.id),\r\n            },\r\n            {onSuccess: close},\r\n          );\r\n        }}\r\n      >\r\n        <Trans message=\"Move here\" />\r\n      </Button>\r\n    </DialogFooter>\r\n  );\r\n}\r\n","import {DriveEntry} from '../drive-entry';\nimport {ConfirmationDialog} from '@ui/overlays/dialog/confirmation-dialog';\nimport {Trans} from '@ui/i18n/trans';\nimport {useDeleteEntries} from '../queries/use-delete-entries';\nimport {driveState} from '../../drive-store';\nimport {useDialogContext} from '@ui/overlays/dialog/dialog-context';\n\ninterface DeleteEntriesForeverDialogProps {\n  entries: DriveEntry[];\n}\nexport function DeleteEntriesForeverDialog({\n  entries,\n}: DeleteEntriesForeverDialogProps) {\n  const deleteEntries = useDeleteEntries();\n  const {close} = useDialogContext();\n\n  const message =\n    entries.length === 1 ? (\n      <Trans\n        message=\"‘:name‘ will be deleted forever and you won't be able to restore it.\"\n        values={{name: entries[0].name}}\n      />\n    ) : (\n      <Trans\n        message=\":count items will be deleted forever and you won't be able to restore them.\"\n        values={{count: entries.length}}\n      />\n    );\n\n  return (\n    <ConfirmationDialog\n      isDanger\n      title={<Trans message=\"Delete forever?\" />}\n      body={message}\n      confirm={<Trans message=\"Delete forever\" />}\n      isLoading={deleteEntries.isPending}\n      onConfirm={() => {\n        deleteEntries.mutate(\n          {\n            entryIds: entries.map(e => e.id),\n            deleteForever: true,\n          },\n          {\n            onSuccess: () => {\n              close();\n              driveState().selectEntries([]);\n            },\n          },\n        );\n      }}\n    />\n  );\n}\n","import {DriveEntry} from '../drive-entry';\nimport {ConfirmationDialog} from '@ui/overlays/dialog/confirmation-dialog';\nimport {Trans} from '@ui/i18n/trans';\nimport {driveState} from '../../drive-store';\nimport {useRestoreEntries} from '../queries/use-restore-entries';\nimport {useDialogContext} from '@ui/overlays/dialog/dialog-context';\n\ninterface DeleteEntriesForeverDialogProps {\n  entries: DriveEntry[];\n}\nexport function BlockTrashFolderViewDialog({\n  entries,\n}: DeleteEntriesForeverDialogProps) {\n  const restoreEntries = useRestoreEntries();\n  const {close} = useDialogContext();\n\n  return (\n    <ConfirmationDialog\n      title={<Trans message=\"This folder is in your trash\" />}\n      body={<Trans message=\"To view this folder, restore it from the trash.\" />}\n      confirm={<Trans message=\"Restore\" />}\n      isLoading={restoreEntries.isPending}\n      onConfirm={() => {\n        restoreEntries.mutate(\n          {\n            entryIds: entries.map(e => e.id),\n          },\n          {\n            onSuccess: () => {\n              close();\n              driveState().selectEntries([]);\n            },\n          },\n        );\n      }}\n    />\n  );\n}\n","import React, {ReactElement} from 'react';\nimport {ActiveActionDialog, driveState, useDriveStore} from '../../drive-store';\nimport {RenameEntryDialog} from './rename-entry-dialog';\nimport {NewFolderDialog} from './new-folder-dialog';\nimport {EntryPreviewDialog} from './entry-preview-dialog';\nimport {ShareDialog} from '../../share-dialog/share-dialog';\nimport {MoveEntriesDialog} from './move-entries-dialog/move-entries-dialog';\nimport {DialogTrigger} from '@ui/overlays/dialog/dialog-trigger';\nimport {DeleteEntriesForeverDialog} from './delete-entries-forever-dialog';\nimport {BlockTrashFolderViewDialog} from './block-trash-folder-view-dialog';\n\nexport function DriveDialogsContainer() {\n  const activeDialog = useDriveStore(s => s.activeActionDialog);\n  const dialog = getDialog(activeDialog);\n\n  return (\n    <DialogTrigger\n      type=\"modal\"\n      isOpen={!!dialog}\n      onClose={() => {\n        driveState().setActiveActionDialog(null);\n      }}\n    >\n      {dialog}\n    </DialogTrigger>\n  );\n}\n\nfunction getDialog(dialog?: ActiveActionDialog | null): ReactElement | null {\n  switch (dialog?.name) {\n    case 'rename':\n      return <RenameEntryDialog entries={dialog.entries} />;\n    case 'newFolder':\n      return <NewFolderDialog parentId={dialog.entries[0]?.id} />;\n    case 'preview':\n      return <EntryPreviewDialog selectedEntry={dialog.entries[0]} />;\n    case 'share':\n      return <ShareDialog entry={dialog.entries[0]} />;\n    case 'getLink':\n      return <ShareDialog entry={dialog.entries[0]} focusLinkInput />;\n    case 'moveTo':\n      return <MoveEntriesDialog entries={dialog.entries} />;\n    case 'confirmAndDeleteForever':\n      return <DeleteEntriesForeverDialog entries={dialog.entries} />;\n    case 'trashFolderBlock':\n      return <BlockTrashFolderViewDialog entries={dialog.entries} />;\n    default:\n      return null;\n  }\n}\n","import React, {useState} from 'react';\nimport {SearchIcon} from '@ui/icons/material/Search';\nimport {TextField} from '@ui/forms/input-field/text-field/text-field';\nimport {SearchPage} from '../drive-page/drive-page';\nimport {useTrans} from '@ui/i18n/use-trans';\nimport {useDriveStore} from '../drive-store';\nimport {useSearchParams} from 'react-router';\nimport {IconButton} from '@ui/buttons/icon-button';\nimport {useNavigate} from '@common/ui/navigation/use-navigate';\n\nexport function NavbarSearch() {\n  const {trans} = useTrans();\n  const navigate = useNavigate();\n  const activePage = useDriveStore(s => s.activePage);\n  const [searchParams] = useSearchParams();\n  const [inputValue, setInputValue] = useState(searchParams.get('query') || '');\n\n  return (\n    <form\n      className=\"max-w-620 flex-auto\"\n      onSubmit={e => {\n        e.preventDefault();\n        navigate(\n          {\n            pathname: SearchPage.path,\n            search: `?query=${inputValue}`,\n          },\n          {replace: true},\n        );\n      }}\n    >\n      <TextField\n        size=\"sm\"\n        background=\"bg\"\n        value={inputValue}\n        onChange={e => setInputValue(e.target.value)}\n        onFocus={() => {\n          if (activePage !== SearchPage) {\n            navigate(SearchPage.path);\n          }\n        }}\n        startAdornment={\n          <IconButton type=\"submit\">\n            <SearchIcon />\n          </IconButton>\n        }\n        className=\"max-w-620 flex-auto\"\n        placeholder={trans({message: 'Search'})}\n        aria-label={trans({message: 'Search files and folders'})}\n      />\n    </form>\n  );\n}\n","import {InteractableEvent} from '../interactable-event';\nimport {useEffect, useId, useRef} from 'react';\nimport {dragMonitors, DragSessionStatus} from './drag-state';\nimport {ConnectedDraggable} from './use-draggable';\n\nexport interface DragMonitor {\n  type: string;\n  onDragStart?: (e: InteractableEvent, dragTarget: ConnectedDraggable) => void;\n  onDragMove?: (e: InteractableEvent, dragTarget: ConnectedDraggable) => void;\n  onDragEnd?: (\n    e: InteractableEvent,\n    dragTarget: ConnectedDraggable,\n    status: DragSessionStatus\n  ) => void;\n}\n\nexport function useDragMonitor(monitor: DragMonitor) {\n  const monitorRef = useRef(monitor);\n  const id = useId();\n\n  useEffect(() => {\n    dragMonitors.set(id, monitorRef.current);\n    return () => {\n      dragMonitors.delete(id);\n    };\n  }, [id]);\n}\n","import {useDragMonitor} from '@ui/interactions/dnd/use-drag-monitor';\nimport React, {memo, useRef, useState} from 'react';\nimport {FileTypeIcon} from '@common/uploads/components/file-type-icon/file-type-icon';\nimport {FileEntry} from '@common/uploads/file-entry';\nimport {DragSessionStatus, droppables} from '@ui/interactions/dnd/drag-state';\nimport {AnimatePresence, m} from 'framer-motion';\nimport clsx from 'clsx';\nimport {\n  isFolderTreeDragId,\n  makeFolderTreeDragId,\n} from '@app/drive/layout/sidebar/folder-tree-drag-id';\nimport {InteractableEvent} from '@ui/interactions/interactable-event';\nimport {useDriveStore} from '../drive-store';\nimport {ConnectedDraggable} from '@ui/interactions/dnd/use-draggable';\n\ninterface Point {\n  x: number;\n  y: number;\n}\n\ninterface DragPreviewState {\n  entries?: FileEntry[];\n  e?: InteractableEvent;\n  status?: DragSessionStatus;\n  draggingTreeItem?: boolean;\n}\n\nexport function EntryDragPreview() {\n  const ref = useRef<HTMLDivElement>(null);\n  const [points, setPoints] = useState<{start?: Point; end?: Point}>();\n  const [state, setState] = useState<DragPreviewState>({});\n\n  useDragMonitor({\n    type: 'fileEntry',\n    onDragStart: (e, dragTarget) => {\n      const target = dragTarget as ConnectedDraggable<FileEntry[]>;\n      if (target) {\n        setState({\n          entries: target.getData(),\n          e,\n          draggingTreeItem: isFolderTreeDragId(target.id as number),\n        });\n        setPoints({start: e});\n      }\n    },\n    onDragMove: e => {\n      setState(prev => {\n        return {...prev, e: e};\n      });\n      setPoints(prev => {\n        return {...prev, end: e};\n      });\n    },\n    onDragEnd: (e, dragTarget, status) => {\n      setState({status});\n    },\n  });\n\n  let preview = null;\n\n  if (state.entries && state.e) {\n    preview = (\n      <div\n        ref={ref}\n        style={\n          state.e\n            ? {\n                transform: `translate(${state.e.x}px, ${state.e.y}px)`,\n                width: `${state.e.rect.width}px`,\n              }\n            : undefined\n        }\n        className=\"pointer-events-none fixed left-0 top-0 isolate\"\n      >\n        {state.entries.map((item, index) => (\n          <EntryPreview\n            key={item.id}\n            index={index}\n            entry={item}\n            points={points}\n            state={state}\n          />\n        ))}\n      </div>\n    );\n  }\n\n  return <AnimatePresence custom={state.status}>{preview}</AnimatePresence>;\n}\n\ninterface EntryPreviewProps {\n  entry: FileEntry;\n  index: number;\n  points?: {start?: Point; end?: Point};\n  state: DragPreviewState;\n}\nconst EntryPreview = memo(\n  ({entry, points, index, state}: EntryPreviewProps) => {\n    const viewMode = useDriveStore(s => s.viewMode);\n    const droppableId = state.draggingTreeItem\n      ? makeFolderTreeDragId(entry)\n      : entry.id;\n    const target = droppables.get(droppableId);\n    if (!target?.rect || !points?.start) return null;\n    const rect = target.rect;\n    const itemCount = state.entries?.length || 0;\n\n    const exitVariant = (status: DragSessionStatus) => {\n      if (status === 'dropSuccess') {\n        return {\n          x: 0,\n          y: 0,\n          opacity: 0,\n          transition: {duration: 0.1, delay: 0},\n        };\n      }\n      return {\n        x: rect.left - (points.end?.x || 0),\n        y: rect.top - (points.end?.y || 0),\n        width: `${state.e?.rect.width}px`,\n      };\n    };\n\n    return (\n      <m.div\n        key={entry.id}\n        transition={{delay: 0.01 * index, bounce: 0, duration: 0.2}}\n        initial={{\n          x: rect.left - points.start.x,\n          y: rect.top - points.start.y,\n          width: `${state.e?.rect.width}px`,\n        }}\n        animate={{\n          x: 0,\n          y: 0,\n          // in list/table mode limit preview size to 288px, but start and end the animation\n          // at full width, so it returns to original position at original size smoothly\n          width: viewMode === 'list' ? 288 : undefined,\n        }}\n        exit={exitVariant as any}\n        style={{\n          // in grid mode simply use the width of the draggable item\n          width: viewMode === 'grid' ? `${state.e?.rect.width}px` : undefined,\n          height: `${state.e?.rect.height}px`,\n        }}\n        className={clsx(\n          'absolute max-h-48 whitespace-nowrap rounded border border-primary-light bg-paper',\n          index < 2 && 'shadow',\n          index === 0 && 'left-0 top-0 z-10',\n          index > 0 && 'left-6 top-6',\n        )}\n      >\n        {itemCount > 1 && index === 0 && <EntryCount count={itemCount} />}\n        <div className=\"flex h-full items-center justify-center gap-10 overflow-hidden bg-primary-light/20 px-16 text-sm\">\n          <FileTypeIcon type={entry.type} />\n          <div className=\"flex-auto overflow-hidden text-ellipsis\">\n            {entry.name}\n          </div>\n        </div>\n      </m.div>\n    );\n  },\n);\n\ninterface EntryCountProps {\n  count: number;\n}\nconst EntryCount = memo(({count}: EntryCountProps) => {\n  return (\n    <m.div\n      key=\"entryCount\"\n      initial={{opacity: 0}}\n      animate={{opacity: 1, transition: {delay: 0.1}}}\n      exit={{opacity: 0}}\n      transition={{duration: 0.1}}\n      className=\"absolute -right-6 -top-6 z-10 z-30 flex h-20 w-20 items-center justify-center rounded-full bg-danger text-sm font-bold text-white shadow-lg\"\n    >\n      {count}\n    </m.div>\n  );\n});\n","import {ReactNode} from 'react';\nimport clsx from 'clsx';\n\ninterface DashboardContentHeaderProps {\n  children: ReactNode;\n  className?: string;\n}\nexport function DashboardContentHeader({\n  children,\n  className,\n}: DashboardContentHeaderProps) {\n  return (\n    <div className={clsx(className, 'dashboard-grid-header')}>{children}</div>\n  );\n}\n","import {PageBreadcrumbs} from '../page-breadcrumbs';\r\nimport React, {useContext} from 'react';\r\nimport {driveState, useDriveStore} from '../drive-store';\r\nimport {Trans} from '@ui/i18n/trans';\r\nimport {Tooltip} from '@ui/tooltip/tooltip';\r\nimport {IconButton} from '@ui/buttons/icon-button';\r\nimport {ViewListIcon} from '@ui/icons/material/ViewList';\r\nimport {ViewModuleIcon} from '@ui/icons/material/ViewModule';\r\nimport {InfoIcon} from '@ui/icons/material/Info';\r\nimport {DriveSortButton} from './sorting/drive-sort-button';\r\nimport {DashboardContentHeader} from '@common/ui/dashboard-layout/dashboard-content-header';\r\nimport {DashboardLayoutContext} from '@common/ui/dashboard-layout/dashboard-layout-context';\r\n\r\nexport function DriveContentHeader() {\r\n  const {isMobileMode} = useContext(DashboardLayoutContext);\r\n  const activePage = useDriveStore(s => s.activePage);\r\n  return (\r\n    <DashboardContentHeader className=\"flex h-60 items-center gap-20 border-b px-8 py-4 md:px-26\">\r\n      {isMobileMode ? (\r\n        <DriveSortButton isDisabled={activePage?.disableSort} />\r\n      ) : (\r\n        <PageBreadcrumbs />\r\n      )}\r\n      <div className=\"ml-auto flex-shrink-0 text-muted\">\r\n        <ToggleViewModeButton />\r\n        <ToggleDetailsButton />\r\n      </div>\r\n    </DashboardContentHeader>\r\n  );\r\n}\r\n\r\nfunction ToggleViewModeButton() {\r\n  const viewMode = useDriveStore(s => s.viewMode);\r\n  const tooltip =\r\n    viewMode === 'grid' ? (\r\n      <Trans message=\"List view\" />\r\n    ) : (\r\n      <Trans message=\"Grid view\" />\r\n    );\r\n  return (\r\n    <Tooltip label={tooltip}>\r\n      <IconButton\r\n        size=\"md\"\r\n        onClick={() => {\r\n          driveState().setViewMode(\r\n            driveState().viewMode === 'list' ? 'grid' : 'list',\r\n          );\r\n        }}\r\n      >\r\n        {viewMode === 'list' ? <ViewListIcon /> : <ViewModuleIcon />}\r\n      </IconButton>\r\n    </Tooltip>\r\n  );\r\n}\r\n\r\nfunction ToggleDetailsButton() {\r\n  const {rightSidenavStatus: status, setRightSidenavStatus} = useContext(\r\n    DashboardLayoutContext,\r\n  );\r\n  const tooltip = status ? (\r\n    <Trans message=\"Hide details\" />\r\n  ) : (\r\n    <Trans message=\"Show details\" />\r\n  );\r\n  return (\r\n    <Tooltip label={tooltip}>\r\n      <IconButton\r\n        size=\"md\"\r\n        color={status === 'open' ? 'primary' : null}\r\n        onClick={() => {\r\n          setRightSidenavStatus(status === 'open' ? 'closed' : 'open');\r\n        }}\r\n      >\r\n        <InfoIcon />\r\n      </IconButton>\r\n    </Tooltip>\r\n  );\r\n}\r\n","import React, {Fragment, useContext, useEffect, useMemo} from 'react';\r\nimport {Link, useLocation, useParams} from 'react-router';\r\nimport {Sidebar} from './sidebar/sidebar';\r\nimport {FileView} from '../file-view/file-view';\r\nimport {UploadQueue} from '../uploading/upload-queue';\r\nimport {driveState, useDriveStore} from '../drive-store';\r\nimport {\r\n  DRIVE_PAGES,\r\n  makePartialFolderPage,\r\n  SearchPage,\r\n} from '../drive-page/drive-page';\r\nimport {DetailsSidebar} from '../details-sidebar/details-sidebar';\r\nimport {DriveDialogsContainer} from '../files/dialogs/drive-dialogs-container';\r\nimport {NavbarSearch} from '../search/navbar-search';\r\nimport {useActiveWorkspaceId} from '@common/workspace/active-workspace-id-context';\r\nimport {FileUploadProvider} from '@common/uploads/uploader/file-upload-provider';\r\nimport {EntryDragPreview} from '../file-view/entry-drag-preview';\r\nimport {DriveContentHeader} from './drive-content-header';\r\nimport {IconButton} from '@ui/buttons/icon-button';\r\nimport {SearchIcon} from '@ui/icons/material/Search';\r\nimport {CloseIcon} from '@ui/icons/material/Close';\r\nimport {Trans} from '@ui/i18n/trans';\r\nimport {EntryActionList} from '../entry-actions/entry-action-list';\r\nimport {CreateNewButton} from './create-new-button';\r\nimport {StaticPageTitle} from '@common/seo/static-page-title';\r\nimport {DashboardSidenav} from '@common/ui/dashboard-layout/dashboard-sidenav';\r\nimport {DashboardContent} from '@common/ui/dashboard-layout/dashboard-content';\r\nimport {DashboardNavbar} from '@common/ui/dashboard-layout/dashboard-navbar';\r\nimport {DashboardLayoutContext} from '@common/ui/dashboard-layout/dashboard-layout-context';\r\nimport {DashboardLayout} from '@common/ui/dashboard-layout/dashboard-layout';\r\nimport {FileEntryUrlsContext} from '@common/uploads/file-entry-urls';\r\nimport {FileUploadStoreOptions} from '@common/uploads/uploader/file-upload-store';\r\nimport {getActiveWorkspaceId} from '@common/workspace/active-workspace-id';\r\n\r\nconst uploadStoreOptions: FileUploadStoreOptions = {\r\n  modifyUploadedFile: uploadedFile => {\r\n    const workspaceId = getActiveWorkspaceId();\r\n    uploadedFile.fingerprint = `${uploadedFile.fingerprint}-w-${workspaceId}`;\r\n    return uploadedFile;\r\n  },\r\n};\r\n\r\nexport function DriveLayout() {\r\n  const {pathname} = useLocation();\r\n  const {hash, userId} = useParams();\r\n  const {workspaceId} = useActiveWorkspaceId();\r\n  const activePage = useDriveStore(s => s.activePage);\r\n\r\n  useEffect(() => {\r\n    driveState().setActivePage(\r\n      DRIVE_PAGES.find(p => p.path === pathname) ||\r\n        makePartialFolderPage(hash!, userId ? parseInt(userId) : undefined),\r\n    );\r\n  }, [pathname, hash, userId]);\r\n\r\n  const urlsContextValue = useMemo(() => {\r\n    return {workspaceId, userId: userId ? parseInt(userId) : undefined};\r\n  }, [workspaceId, userId]);\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      driveState().reset();\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <Fragment>\r\n      {activePage?.label && (\r\n        <StaticPageTitle>\r\n          <Trans\r\n            message={\r\n              typeof activePage.label === 'string'\r\n                ? activePage.label\r\n                : activePage.label.message\r\n            }\r\n          />\r\n        </StaticPageTitle>\r\n      )}\r\n      <FileUploadProvider options={uploadStoreOptions}>\r\n        <FileEntryUrlsContext.Provider value={urlsContextValue}>\r\n          <DashboardLayout\r\n            name=\"drive\"\r\n            onDragOver={e => {\r\n              e.preventDefault();\r\n              e.stopPropagation();\r\n              e.dataTransfer.dropEffect = 'none';\r\n            }}\r\n            onDrop={e => {\r\n              // prevent files from desktop from blowing away the document\r\n              e.preventDefault();\r\n            }}\r\n          >\r\n            <Navbar />\r\n            <DashboardSidenav position=\"left\" size=\"md\">\r\n              <Sidebar />\r\n            </DashboardSidenav>\r\n            <DriveContentHeader />\r\n            <DashboardContent>\r\n              <FileView />\r\n            </DashboardContent>\r\n            <UploadQueue />\r\n            <DriveDialogsContainer />\r\n            <DashboardSidenav position=\"right\" size=\"lg\">\r\n              <DetailsSidebar />\r\n            </DashboardSidenav>\r\n          </DashboardLayout>\r\n        </FileEntryUrlsContext.Provider>\r\n        <EntryDragPreview />\r\n      </FileUploadProvider>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nfunction Navbar() {\r\n  const {isMobileMode} = useContext(DashboardLayoutContext);\r\n  const activePage = useDriveStore(s => s.activePage);\r\n\r\n  const children = isMobileMode ? null : <NavbarSearch />;\r\n  const searchButton = (\r\n    <IconButton elementType={Link} to={SearchPage.path}>\r\n      <SearchIcon />\r\n    </IconButton>\r\n  );\r\n\r\n  const mobileRightChildren = (\r\n    <Fragment>\r\n      {activePage !== SearchPage && searchButton}\r\n      <CreateNewButton isCompact />\r\n    </Fragment>\r\n  );\r\n\r\n  return (\r\n    <Fragment>\r\n      <DashboardNavbar\r\n        rightChildren={isMobileMode && mobileRightChildren}\r\n        menuPosition=\"drive-navbar\"\r\n      >\r\n        {children}\r\n      </DashboardNavbar>\r\n      {isMobileMode && <FloatingActionList />}\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nfunction FloatingActionList() {\r\n  const entriesSelected = useDriveStore(s => s.selectedEntries.size);\r\n  if (!entriesSelected) return null;\r\n  return (\r\n    <div className=\"fixed right-0 top-0 z-10 flex h-54 w-full items-center justify-center gap-10 rounded bg-primary px-6 text-on-primary shadow-xl\">\r\n      <IconButton\r\n        onClick={() => {\r\n          driveState().selectEntries([]);\r\n        }}\r\n      >\r\n        <CloseIcon />\r\n      </IconButton>\r\n      <Trans message=\":count selected\" values={{count: entriesSelected}} />\r\n      <EntryActionList className=\"ml-auto\" />\r\n    </div>\r\n  );\r\n}\r\n","import {create} from 'zustand';\nimport {immer} from 'zustand/middleware/immer';\nimport {DriveSortDescriptor} from '../../drive-store';\nimport {\n  getFromLocalStorage,\n  setInLocalStorage,\n} from '@ui/utils/hooks/local-storage';\n\ninterface LinkPageState {\n  password: string | null;\n  setPassword: (value: string) => void;\n  isPasswordProtected: boolean;\n  setIsPasswordProtected: (value: boolean) => void;\n  activeSort: DriveSortDescriptor;\n  setActiveSort: (value: DriveSortDescriptor) => void;\n  viewMode: 'grid' | 'list';\n  setViewMode: (mode: 'grid' | 'list') => void;\n}\n\nexport const useLinkPageStore = create<LinkPageState>()(\n  immer(set => ({\n    password: null,\n    viewMode: getFromLocalStorage<'list' | 'grid'>('drive.viewMode'),\n    activeSort: {\n      orderBy: 'updated_at',\n      orderDir: 'desc',\n    },\n    setPassword: value => {\n      set(state => {\n        state.password = value;\n      });\n    },\n    isPasswordProtected: false,\n    setIsPasswordProtected: value => {\n      set(state => {\n        state.isPasswordProtected = value;\n      });\n    },\n    setViewMode: mode => {\n      set(state => {\n        state.viewMode = mode;\n        setInLocalStorage('drive.viewMode', mode);\n      });\n    },\n    setActiveSort: value => {\n      set(state => {\n        state.activeSort = value;\n      });\n    },\n  })),\n);\n\nexport function linkPageState() {\n  return useLinkPageStore.getState();\n}\n","import {keepPreviousData, useInfiniteQuery} from '@tanstack/react-query';\nimport {useParams} from 'react-router';\nimport type {FetchShareableLinkResponse} from './use-entry-shareable-link';\nimport type {DriveEntry} from '../../files/drive-entry';\nimport {DriveQueryKeys} from '../../drive-query-keys';\nimport {\n  linkPageState,\n  useLinkPageStore,\n} from '../shareable-link-page/link-page-store';\nimport {LengthAwarePaginationResponse} from '@common/http/backend-response/pagination-response';\nimport {apiClient} from '@common/http/query-client';\nimport {getBootstrapData} from '@ui/bootstrap-data/bootstrap-data-store';\n\nexport interface FetchShareableLinkPageResponse\n  extends FetchShareableLinkResponse {\n  folderChildren: LengthAwarePaginationResponse<DriveEntry>;\n  passwordInvalid: boolean;\n}\n\nexport function useShareableLinkPage() {\n  const {hash} = useParams();\n  const {orderBy, orderDir} = useLinkPageStore(s => s.activeSort);\n  const order = `${orderBy}:${orderDir}`;\n  const isPasswordProtected = useLinkPageStore(s => s.isPasswordProtected);\n  const password = useLinkPageStore(s => s.password);\n\n  const query = useInfiniteQuery({\n    queryKey: DriveQueryKeys.fetchShareableLink({hash, sort: order}),\n    queryFn: async ({pageParam = 1}) => {\n      const response = await fetchLinkByHash({\n        hash: hash!,\n        page: pageParam,\n        order,\n        password,\n      });\n      if (response.passwordInvalid) {\n        linkPageState().setIsPasswordProtected(true);\n      }\n      return response;\n    },\n    initialData: () => {\n      const data = getBootstrapData().loaders?.shareableLinkPage;\n      if (data && data.link?.hash === hash) {\n        if (data.passwordInvalid) {\n          linkPageState().setIsPasswordProtected(true);\n        }\n        return {\n          pageParams: [undefined, 1],\n          pages: [data],\n        };\n      }\n    },\n    initialPageParam: 1,\n    getNextPageParam: lastResponse => {\n      if (!lastResponse.folderChildren) return undefined;\n      const currentPage = lastResponse.folderChildren.current_page;\n      const lastPage = lastResponse.folderChildren.last_page;\n      if (currentPage >= lastPage) {\n        return undefined;\n      }\n      return currentPage + 1;\n    },\n    // disable query if link is password protected and correct\n    // password was not entered yet, to prevent unnecessary requests\n    enabled: (!!hash && !isPasswordProtected) || password != null,\n    placeholderData: keepPreviousData,\n  });\n\n  return {\n    ...query,\n    link: query.data?.pages[0].link,\n    entries: query.data?.pages.flatMap(p => p.folderChildren?.data),\n  };\n}\n\ninterface FetchLinkByHashParams {\n  hash: string;\n  page?: number;\n  order?: string;\n  password?: string | null;\n}\nfunction fetchLinkByHash({\n  hash,\n  page = 1,\n  order,\n  password,\n}: FetchLinkByHashParams): Promise<FetchShareableLinkPageResponse> {\n  return apiClient\n    .get(`shareable-links/${hash}`, {\n      params: {loader: 'shareableLinkPage', page, order, password},\n    })\n    .then(response => response.data);\n}\n","import {useMutation} from '@tanstack/react-query';\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\nimport {linkPageState} from '../link-page-store';\nimport {apiClient} from '@common/http/query-client';\nimport {showHttpErrorToast} from '@common/http/show-http-error-toast';\nimport {message} from '@ui/i18n/message';\n\ninterface Response extends BackendResponse {\n  matches: boolean;\n}\n\ninterface Props {\n  password: string;\n  linkHash: string;\n}\n\nfunction checkLinkPassword({password, linkHash}: Props): Promise<Response> {\n  return apiClient\n    .post(`shareable-links/${linkHash}/check-password`, {password})\n    .then(r => r.data);\n}\n\nexport function useCheckLinkPassword() {\n  return useMutation({\n    mutationFn: (props: Props) => checkLinkPassword(props),\n    onSuccess: (response, props) => {\n      if (response.matches) {\n        linkPageState().setPassword(props.password);\n      }\n    },\n    onError: err => showHttpErrorToast(err, message('Could not create link')),\n  });\n}\n","import {useMutation} from '@tanstack/react-query';\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\nimport {DriveEntryUser} from '../../../files/drive-entry';\nimport {toast} from '@ui/toast/toast';\nimport {useLinkPageStore} from '../link-page-store';\nimport {apiClient, queryClient} from '@common/http/query-client';\nimport {DriveQueryKeys} from '../../../drive-query-keys';\nimport {message} from '@ui/i18n/message';\nimport {showHttpErrorToast} from '@common/http/show-http-error-toast';\n\ninterface Response extends BackendResponse {\n  users: DriveEntryUser[];\n}\n\ninterface Props {\n  password: string | null;\n  linkId: number;\n}\n\nfunction importIntoOwnDrive({linkId, password}: Props): Promise<Response> {\n  return apiClient\n    .post(`shareable-links/${linkId}/import`, {password})\n    .then(r => r.data);\n}\n\nexport function useImportIntoOwnDrive() {\n  const password = useLinkPageStore(s => s.password);\n  return useMutation({\n    mutationFn: (props: Omit<Props, 'password'>) =>\n      importIntoOwnDrive({...props, password}),\n    onSuccess: async () => {\n      await queryClient.invalidateQueries({\n        queryKey: DriveQueryKeys.fetchShareableLink(),\n      });\n      toast(message('Item imported into your drive'));\n    },\n    onError: err => showHttpErrorToast(err, message('Could not create link')),\n  });\n}\n","import {useShareableLinkPage} from '../queries/use-shareable-link-page';\nimport {useAuth} from '@common/auth/use-auth';\nimport {useFileEntryUrls} from '@common/uploads/file-entry-urls';\nimport {useImportIntoOwnDrive} from './queries/import-into-own-drive';\nimport {Button} from '@ui/buttons/button';\nimport {FileDownloadIcon} from '@ui/icons/material/FileDownload';\nimport {Trans} from '@ui/i18n/trans';\nimport {IconButton} from '@ui/buttons/icon-button';\nimport {KeyboardArrowDownIcon} from '@ui/icons/material/KeyboardArrowDown';\nimport {ImportExportIcon} from '@ui/icons/material/ImportExport';\nimport React, {Fragment} from 'react';\nimport {Tooltip} from '@ui/tooltip/tooltip';\nimport {Menu, MenuItem, MenuTrigger} from '@ui/menu/menu-trigger';\nimport {downloadFileFromUrl} from '@ui/utils/files/download-file-from-url';\n\nexport function ShareableLinkPageActionButtons() {\n  const {link} = useShareableLinkPage();\n  const {user, isLoggedIn} = useAuth();\n  const {downloadUrl} = useFileEntryUrls(link?.entry);\n  const importIntoOwnDrive = useImportIntoOwnDrive();\n  const alreadyImported = link?.entry?.users!.find(u => u.id === user?.id);\n\n  if (!link?.entry) return null;\n\n  return (\n    <div>\n      {link.allow_download && <DownloadButton downloadUrl={downloadUrl} />}\n      {!alreadyImported && isLoggedIn && link.allow_edit && (\n        <MenuTrigger\n          onItemSelected={key => {\n            if (key === 'import') {\n              importIntoOwnDrive.mutate({linkId: link.id});\n            } else if (key === 'download') {\n              if (downloadUrl) {\n                downloadFileFromUrl(downloadUrl);\n              }\n            }\n          }}\n        >\n          <IconButton className=\"ml-6\" disabled={importIntoOwnDrive.isPending}>\n            <KeyboardArrowDownIcon />\n          </IconButton>\n          <Menu>\n            <MenuItem value=\"download\" startIcon={<FileDownloadIcon />}>\n              <Trans message=\"Download\" />\n            </MenuItem>\n            <MenuItem value=\"import\" startIcon={<ImportExportIcon />}>\n              <Trans message=\"Save a copy to your own drive\" />\n            </MenuItem>\n          </Menu>\n        </MenuTrigger>\n      )}\n    </div>\n  );\n}\n\ninterface DownloadButtonProps {\n  downloadUrl: string | undefined;\n}\nfunction DownloadButton({downloadUrl}: DownloadButtonProps) {\n  return (\n    <Fragment>\n      <Tooltip label={<Trans message=\"Download\" />}>\n        <IconButton\n          className=\"md:hidden\"\n          onClick={() => {\n            if (downloadUrl) {\n              downloadFileFromUrl(downloadUrl);\n            }\n          }}\n        >\n          <FileDownloadIcon />\n        </IconButton>\n      </Tooltip>\n      <Button\n        className=\"max-md:hidden\"\n        size=\"sm\"\n        variant=\"flat\"\n        color=\"chip\"\n        startIcon={<FileDownloadIcon />}\n        onClick={() => {\n          if (downloadUrl) {\n            downloadFileFromUrl(downloadUrl);\n          }\n        }}\n      >\n        <Trans message=\"Download\" />\n      </Button>\n    </Fragment>\n  );\n}\n","import React from 'react';\nimport {Navbar} from '@common/ui/navigation/navbar/navbar';\nimport {useShareableLinkPage} from '../queries/use-shareable-link-page';\nimport {ShareableLinkPageActionButtons} from './shareable-link-page-action-buttons';\nimport {useIsMobileMediaQuery} from '@ui/utils/hooks/is-mobile-media-query';\nimport {FileTypeIcon} from '@common/uploads/components/file-type-icon/file-type-icon';\n\nexport function ShareableLinkNavbar() {\n  const {link} = useShareableLinkPage();\n  const isMobile = useIsMobileMediaQuery();\n  return (\n    <Navbar\n      size=\"md\"\n      color=\"bg\"\n      className=\"flex-shrink-0\"\n      rightChildren={link?.entry && <ShareableLinkPageActionButtons />}\n      menuPosition=\"shareable-link-page\"\n      hideLogo={isMobile}\n    >\n      {link?.entry && link.entry.type !== 'folder' && (\n        <div className=\"fex-auto flex min-w-0 items-center gap-10\">\n          <FileTypeIcon className=\"flex-shrink-0\" type={link.entry.type} />\n          <div className=\"flex-auto overflow-hidden overflow-ellipsis whitespace-nowrap font-medium\">\n            {link.entry.name}\n          </div>\n        </div>\n      )}\n    </Navbar>\n  );\n}\n","import {useState} from 'react';\nimport {TextField} from '@ui/forms/input-field/text-field/text-field';\nimport {Button} from '@ui/buttons/button';\nimport {useCheckLinkPassword} from './queries/check-link-password';\nimport {Trans} from '@ui/i18n/trans';\nimport {useTrans} from '@ui/i18n/use-trans';\nimport {ShareableLinkNavbar} from './shareable-link-navbar';\nimport {useParams} from 'react-router';\nimport secureFilesSvg from '@common/auth/ui/account-settings/access-token-panel/secure-files.svg';\nimport {SvgImage} from '@ui/images/svg-image';\n\nexport function PasswordPage() {\n  const {trans} = useTrans();\n  const {hash} = useParams();\n  const fieldLabel = trans({message: 'Password'});\n  const [password, setPassword] = useState<string>('');\n  const checkPassword = useCheckLinkPassword();\n  const linkHash = hash ? hash.split(':')[0] : null;\n\n  const passwordIsInvalid = checkPassword.data && !checkPassword.data.matches;\n\n  return (\n    <div className=\"flex h-screen flex-col bg-alt\">\n      <ShareableLinkNavbar />\n      <div className=\"mx-auto my-80 px-10 md:px-20\">\n        <div className=\"flex max-w-[560px] flex-col items-center gap-40 rounded border bg p-24 md:flex-row md:gap-14\">\n          <div className=\"h-132 w-[165px]\">\n            <SvgImage src={secureFilesSvg} />\n          </div>\n          <form\n            onSubmit={e => {\n              e.preventDefault();\n              checkPassword.mutate({\n                linkHash: linkHash!,\n                password,\n              });\n            }}\n          >\n            <span className=\"text-sm\">\n              <Trans message=\"The link you are trying to access is password protected.\" />\n            </span>\n            <TextField\n              autoFocus\n              placeholder={fieldLabel}\n              aria-label={fieldLabel}\n              className=\"mb-20 mt-10\"\n              type=\"password\"\n              value={password}\n              required\n              errorMessage={\n                passwordIsInvalid && <Trans message=\"Password is not valid\" />\n              }\n              onChange={e => {\n                setPassword(e.target.value);\n              }}\n            />\n            <div className=\"text-right\">\n              <Button\n                variant=\"flat\"\n                color=\"primary\"\n                type=\"submit\"\n                className=\"w-full md:w-auto\"\n                disabled={checkPassword.isPending}\n              >\n                <Trans message=\"Enter\" />\n              </Button>\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import {BaseFileGridItem} from '../../../file-view/file-grid/base-file-grid-item';\nimport React from 'react';\nimport {DriveEntry} from '../../../files/drive-entry';\n\nexport interface FolderPreviewGridProps {\n  entries: DriveEntry[];\n  onEntrySelected: (entry: DriveEntry, index: number) => void;\n}\nexport function FolderPreviewFileGrid({\n  entries,\n  onEntrySelected,\n}: FolderPreviewGridProps) {\n  return (\n    <div className=\"file-grid\">\n      {entries.map((entry, index) => (\n        <BaseFileGridItem\n          tabIndex={-1}\n          className=\"hover:shadow-md cursor-pointer bg\"\n          entry={entry}\n          key={entry.id}\n          onContextMenu={e => {\n            e.preventDefault();\n          }}\n          onKeyDown={e => {\n            if (e.key === 'Enter' || e.key === ' ') {\n              onEntrySelected(entry, index);\n            }\n          }}\n          onClick={() => {\n            onEntrySelected(entry, index);\n          }}\n        />\n      ))}\n    </div>\n  );\n}\n","import {DriveSortDescriptor} from '@app/drive/drive-store';\nimport React from 'react';\nimport {Table} from '@common/ui/tables/table';\nimport {\n  linkPageState,\n  useLinkPageStore,\n} from '@app/drive/shareable-link/shareable-link-page/link-page-store';\nimport type {FolderPreviewGridProps} from '@app/drive/shareable-link/shareable-link-page/folder-preview/folder-preview-file-grid';\nimport {fileTableColumns} from '@app/drive/file-view/file-table/file-table-columns';\nimport {useIsMobileMediaQuery} from '@ui/utils/hooks/is-mobile-media-query';\n\nconst mobileColumns = fileTableColumns.filter(\n  config => config.key !== 'updated_at',\n);\n\nexport function FolderPreviewFileTable({\n  entries,\n  onEntrySelected,\n}: FolderPreviewGridProps) {\n  const sortDescriptor = useLinkPageStore(s => s.activeSort);\n  const isMobile = useIsMobileMediaQuery();\n\n  return (\n    <Table\n      columns={isMobile ? mobileColumns : fileTableColumns}\n      data={entries}\n      sortDescriptor={sortDescriptor}\n      onSortChange={value => {\n        linkPageState().setActiveSort(value as DriveSortDescriptor);\n      }}\n      onAction={(item, index) => {\n        onEntrySelected(item, index);\n      }}\n      enableSelection={false}\n    />\n  );\n}\n","import {useShareableLinkPage} from '../../queries/use-shareable-link-page';\nimport {useNavigate} from 'react-router';\nimport {ShareableLink} from '../../shareable-link';\n\nfunction buildFolderHash(link: ShareableLink, folderHash?: string) {\n  let hash = link.hash;\n  if (folderHash && link.entry?.hash !== folderHash) {\n    hash = `${hash}:${folderHash}`;\n  }\n  return hash;\n}\n\nexport function useNavigateToSubfolder() {\n  const {link} = useShareableLinkPage();\n  const navigate = useNavigate();\n  return (hash: string) => {\n    if (!link) return;\n    navigate(`/drive/s/${buildFolderHash(link, hash)}`);\n  };\n}\n","import {AnimatePresence, m} from 'framer-motion';\nimport React, {useEffect, useRef, useState} from 'react';\nimport {ProgressCircle} from '@ui/progress/progress-circle';\nimport {useShareableLinkPage} from '../../queries/use-shareable-link-page';\nimport {DialogTrigger} from '@ui/overlays/dialog/dialog-trigger';\nimport clsx from 'clsx';\nimport {DriveEntry} from '../../../files/drive-entry';\nimport {FolderPreviewFileGrid} from './folder-preview-file-grid';\nimport {useLinkPageStore} from '../link-page-store';\nimport {FolderPreviewFileTable} from './folder-preview-file-table';\nimport {useNavigateToSubfolder} from './use-navigate-to-subfolder';\nimport {useLocation} from 'react-router';\nimport {AdHost} from '@common/admin/ads/ad-host';\nimport {opacityAnimation} from '@ui/animation/opacity-animation';\nimport {FilePreviewDialog} from '@common/uploads/components/file-preview/file-preview-dialog';\n\ninterface FolderPreviewChildrenProps {\n  className?: string;\n}\nexport function FolderPreviewFileView({className}: FolderPreviewChildrenProps) {\n  const {pathname} = useLocation();\n  const navigateToSubfolder = useNavigateToSubfolder();\n  const [activePreviewIndex, setActivePreviewIndex] = useState<number>();\n  const viewMode = useLinkPageStore(s => s.viewMode);\n  const sentinelRef = useRef<HTMLDivElement>(null);\n  const {\n    link,\n    entries,\n    isFetchingNextPage,\n    hasNextPage,\n    fetchNextPage,\n    isPlaceholderData,\n  } = useShareableLinkPage();\n\n  // close preview modal on back/forward navigation\n  useEffect(() => {\n    setActivePreviewIndex(undefined);\n  }, [pathname]);\n\n  useEffect(() => {\n    const sentinelEl = sentinelRef.current;\n    if (!sentinelEl) return;\n    const observer = new IntersectionObserver(([entry]) => {\n      if (entry.isIntersecting && hasNextPage) {\n        fetchNextPage();\n      }\n    });\n    observer.observe(sentinelEl);\n    return () => {\n      observer.unobserve(sentinelEl);\n    };\n  }, [hasNextPage, fetchNextPage]);\n\n  if (!link || isPlaceholderData) {\n    return (\n      <div className={clsx('flex justify-center', className)}>\n        <ProgressCircle isIndeterminate />\n      </div>\n    );\n  }\n\n  const handlePreview = (entry: DriveEntry, index: number) => {\n    if (entry.type === 'folder') {\n      navigateToSubfolder(entry.hash);\n    } else {\n      setActivePreviewIndex(index);\n    }\n  };\n\n  const folderEntries = entries || [];\n\n  return (\n    <>\n      <div\n        className={clsx(\n          'file-grid-container flex-auto overflow-auto px-14 pb-14 md:px-24 md:pb-24',\n          className,\n        )}\n      >\n        <AdHost slot=\"file-preview\" className=\"mb-40\" />\n        {viewMode === 'grid' ? (\n          <FolderPreviewFileGrid\n            entries={folderEntries}\n            onEntrySelected={handlePreview}\n          />\n        ) : (\n          <FolderPreviewFileTable\n            entries={folderEntries}\n            onEntrySelected={handlePreview}\n          />\n        )}\n        <span ref={sentinelRef} aria-hidden />\n        <AnimatePresence>\n          {isFetchingNextPage && (\n            <m.div\n              className=\"mt-24 flex w-full justify-center\"\n              {...opacityAnimation}\n            >\n              <ProgressCircle isIndeterminate aria-label=\"loading\" />\n            </m.div>\n          )}\n        </AnimatePresence>\n      </div>\n      <DialogTrigger\n        type=\"modal\"\n        isOpen={activePreviewIndex != undefined}\n        onClose={() => setActivePreviewIndex(undefined)}\n      >\n        <FilePreviewDialog\n          entries={folderEntries}\n          defaultActiveIndex={activePreviewIndex}\n          allowDownload={link.allow_download}\n        />\n      </DialogTrigger>\n    </>\n  );\n}\n","import React, {ReactElement, ReactNode} from 'react';\nimport clsx from 'clsx';\nimport {DriveFolder} from '../../../files/drive-entry';\nimport {useFolderPath} from '../../../files/queries/use-folder-path';\nimport {Breadcrumb} from '@ui/breadcrumbs/breadcrumb';\nimport {ShareableLink} from '../../shareable-link';\nimport {useLinkPageStore} from '../link-page-store';\nimport {BreadcrumbItem} from '@ui/breadcrumbs/breadcrumb-item';\nimport {useNavigateToSubfolder} from './use-navigate-to-subfolder';\n\ninterface Props {\n  className?: string;\n  folder?: DriveFolder;\n  link: ShareableLink;\n}\nexport function FolderPreviewBreadcrumb({className, folder, link}: Props) {\n  const navigateToSubfolder = useNavigateToSubfolder();\n  const password = useLinkPageStore(s => s.password);\n  const query = useFolderPath({\n    hash: folder?.hash,\n    params: {\n      shareable_link: link.id,\n      password,\n    },\n  });\n\n  let content: ReactNode;\n\n  if (query.isLoading) {\n    content = null;\n  } else {\n    const items: {folder: DriveFolder; label: ReactElement}[] = [];\n    if (query.data) {\n      query.data.path.forEach(parent => {\n        items.push({\n          folder: parent,\n          label: <>{parent.name}</>,\n        });\n      });\n    }\n\n    content = (\n      <Breadcrumb size=\"lg\" isNavigation>\n        {items.map(item => {\n          return (\n            <BreadcrumbItem\n              onSelected={() => {\n                navigateToSubfolder(item.folder.hash);\n              }}\n              key={item.folder.hash}\n            >\n              {item.label}\n            </BreadcrumbItem>\n          );\n        })}\n      </Breadcrumb>\n    );\n  }\n\n  return <div className={clsx('h-36 flex-shrink-0', className)}>{content}</div>;\n}\n","import React from 'react';\nimport {FolderPreviewBreadcrumb} from './folder-preview-breadcrumb';\nimport {EntriesSortButton} from '../../../layout/sorting/entries-sort-button';\nimport {linkPageState, useLinkPageStore} from '../link-page-store';\nimport {IconButton} from '@ui/buttons/icon-button';\nimport {GridViewIcon} from '@ui/icons/material/GridView';\nimport {useShareableLinkPage} from '../../queries/use-shareable-link-page';\nimport {DriveFolder} from '../../../files/drive-entry';\n\nexport function FolderPreviewHeader() {\n  const activeSort = useLinkPageStore(s => s.activeSort);\n  const {link, isFetching} = useShareableLinkPage();\n  const hasEntry = link && link.entry;\n\n  return (\n    <div className=\"flex flex-col justify-between gap-14 p-14 md:h-90 md:flex-row md:items-center md:p-24\">\n      {hasEntry && (\n        <FolderPreviewBreadcrumb\n          link={link}\n          folder={link.entry as DriveFolder}\n          className=\"flex-auto\"\n        />\n      )}\n      {hasEntry && (\n        <div className=\"flex items-center justify-between text-muted md:justify-start\">\n          <EntriesSortButton\n            isDisabled={isFetching}\n            descriptor={activeSort}\n            onChange={value => {\n              linkPageState().setActiveSort(value);\n            }}\n          />\n          <div className=\"ml-10 md:border-l md:pl-10\">\n            <IconButton\n              onClick={() => {\n                linkPageState().setViewMode(\n                  linkPageState().viewMode === 'grid' ? 'list' : 'grid',\n                );\n              }}\n            >\n              <GridViewIcon />\n            </IconButton>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n","import React from 'react';\r\nimport {useShareableLinkPage} from '../../queries/use-shareable-link-page';\r\nimport {FolderPreviewFileView} from './folder-preview-file-view';\r\nimport {Trans} from '@ui/i18n/trans';\r\nimport {FileUploadProvider} from '@common/uploads/uploader/file-upload-provider';\r\nimport {ShareableLinkPageActionButtons} from '../shareable-link-page-action-buttons';\r\nimport {FolderPreviewHeader} from './folder-preview-header';\r\nimport shareSvg from './share.svg';\r\nimport clsx from 'clsx';\r\nimport {DashboardLayout} from '@common/ui/dashboard-layout/dashboard-layout';\r\nimport {DashboardNavbar} from '@common/ui/dashboard-layout/dashboard-navbar';\r\nimport {DashboardContentHeader} from '@common/ui/dashboard-layout/dashboard-content-header';\r\nimport {DashboardContent} from '@common/ui/dashboard-layout/dashboard-content';\r\nimport {IllustratedMessage} from '@ui/images/illustrated-message';\r\nimport {SvgImage} from '@ui/images/svg-image';\r\n\r\nexport function FolderPreview() {\r\n  const {entries, isFetched} = useShareableLinkPage();\r\n  const showEmptyMessage = isFetched && !entries?.length;\r\n\r\n  return (\r\n    <DashboardLayout name=\"folder-preview\">\r\n      <DashboardNavbar\r\n        hideToggleButton\r\n        rightChildren={<ShareableLinkPageActionButtons />}\r\n        color=\"bg\"\r\n      />\r\n      <DashboardContentHeader>\r\n        <FolderPreviewHeader />\r\n      </DashboardContentHeader>\r\n      <FileUploadProvider>\r\n        <DashboardContent>\r\n          {showEmptyMessage ? <EmptyMessage /> : <FolderPreviewFileView />}\r\n        </DashboardContent>\r\n      </FileUploadProvider>\r\n    </DashboardLayout>\r\n  );\r\n}\r\n\r\ninterface EmptyMessageProps {\r\n  className?: string;\r\n}\r\nfunction EmptyMessage({className}: EmptyMessageProps) {\r\n  return (\r\n    <IllustratedMessage\r\n      className={clsx(className, 'mt-80')}\r\n      image={<SvgImage src={shareSvg} />}\r\n      title={<Trans message=\"Folder is empty\" />}\r\n      description={\r\n        <Trans message=\"No files have been uploaded to this folder yet\" />\r\n      }\r\n    />\r\n  );\r\n}\r\n","import React from 'react';\r\nimport {useShareableLinkPage} from '../queries/use-shareable-link-page';\r\nimport {ShareableLinkNavbar} from './shareable-link-navbar';\r\nimport {AdHost} from '@common/admin/ads/ad-host';\r\nimport {FilePreviewContainer} from '@common/uploads/components/file-preview/file-preview-container';\r\n\r\nexport function ShareableLinkPageFilePreview() {\r\n  const {link} = useShareableLinkPage();\r\n\r\n  if (!link?.entry) return null;\r\n\r\n  return (\r\n    <div className=\"flex h-screen flex-col bg-alt\">\r\n      <ShareableLinkNavbar />\r\n      <AdHost slot=\"file-preview\" className=\"mx-auto mt-24\" />\r\n      <FilePreviewContainer\r\n        entries={[link.entry]}\r\n        showHeader={false}\r\n        allowDownload={link.allow_download}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import React, {ReactElement} from 'react';\nimport {useShareableLinkPage} from '@app/drive/shareable-link/queries/use-shareable-link-page';\nimport {useLinkPageStore} from '@app/drive/shareable-link/shareable-link-page/link-page-store';\nimport {useTrans} from '@ui/i18n/use-trans';\nimport {ProgressCircle} from '@ui/progress/progress-circle';\nimport {PasswordPage} from '@app/drive/shareable-link/shareable-link-page/password-page';\nimport {FolderPreview} from '@app/drive/shareable-link/shareable-link-page/folder-preview/folder-preview';\nimport {ShareableLinkPageFilePreview} from './shareable-link-page-file-preview';\nimport {NotFoundPage} from '@common/ui/not-found-page/not-found-page';\nimport {FileEntryUrlsContext} from '@common/uploads/file-entry-urls';\nimport {ActiveWorkspaceProvider} from '@common/workspace/active-workspace-id-context';\n\nexport function ShareableLinkPage() {\n  const {status, link} = useShareableLinkPage();\n  const {trans} = useTrans();\n  const isPasswordProtected = useLinkPageStore(s => s.isPasswordProtected);\n  const password = useLinkPageStore(s => s.password);\n\n  let content: ReactElement;\n\n  if (status === 'pending') {\n    content = (\n      <div className=\"flex h-screen flex-auto items-center justify-center\">\n        <ProgressCircle\n          aria-label={trans({message: 'Loading link'})}\n          isIndeterminate\n        />\n      </div>\n    );\n  } else if (!link && !isPasswordProtected) {\n    return <NotFoundPage />;\n  } else if (isPasswordProtected && !password) {\n    content = <PasswordPage />;\n  } else if (link?.entry?.type === 'folder') {\n    content = <FolderPreview />;\n  } else {\n    content = <ShareableLinkPageFilePreview />;\n  }\n\n  return (\n    <ActiveWorkspaceProvider>\n      <FileEntryUrlsContext.Provider\n        value={{shareable_link: link?.id, password}}\n      >\n        {content}\n      </FileEntryUrlsContext.Provider>\n    </ActiveWorkspaceProvider>\n  );\n}\n"],"names":["InfiniteQueryObserver","QueryObserver","client","options","notifyOptions","infiniteQueryBehavior","query","state","result","isFetching","isRefetching","isFetchingNextPage","_b","_a","isFetchingPreviousPage","_d","_c","hasNextPage","hasPreviousPage","useInfiniteQuery","queryClient","useBaseQuery","DriveQueryKeys","params","key","_","__","cleanParams","hash","entryId","id","invalidateEntryQueries","useStorageSummary","useQuery","fetchStorageSummary","formatResponse","apiClient","response","percentage","prettyBytes","Meter","props","jsx","ProgressBarBase","StorageMeter","isLoading","data","label","clsx","Trans","jsxs","StorageIcon","useCreateWorkspace","form","useMutation","createWorkspace","toast","message","WorkspaceQueryKeys","r","onFormQueryError","NewWorkspaceDialog","useForm","formId","close","useDialogContext","Dialog","DialogHeader","DialogBody","Form","FormTextField","DialogFooter","Button","fetchWorkspaceWithMembers","workspaceId","useWorkspaceWithMembers","InviteMembers","other","useInviteMembers","err","showHttpErrorToast","ResendInvite","inviteId","useResendInvite","ChangeRole","member","modelType","memberId","useChangeRole","removeMember","memberType","endpoint","useRemoveMember","setWorkspaceId","useActiveWorkspaceId","user","useAuth","PersonalWorkspace","LeaveWorkspaceConfirmation","onConfirm","ConfirmationDialog","matcher","isEmail","string","WorkspaceMembersDialog","workspace","ProgressCircle","Manager","can","usePermissions","members","shouldHideOtherMembers","InviteChipField","GroupIcon","AnimatePresence","MemberListItem","m","Avatar","MemberDisplayNameAppend","MemberActions","authUser","permissions","authMember","mb","permission","p","selectedRole","setSelectedRole","useState","changeRole","isOwner","isCurrentUser","roleSelector","RoleMenuTrigger","roleId","Fragment","RemoveMemberButton","trans","useTrans","chips","setChips","allEmailsValid","chip","displayWith","inviteMembers","useValueLists","useEffect","ChipField","invalid","c","type","DialogTrigger","isConfirmed","IconButton","ExitToAppIcon","CloseIcon","RemoveMemberConfirmation","value","onChange","size","className","isDisabled","role","MenuTrigger","newValue","ArrowDropDownIcon","Menu","MenuItem","ResendInviteDialogTrigger","resendInvite","updateWorkspace","useUpdateWorkspace","RenameWorkspaceDialog","deleteWorkspace","useDeleteWorkspace","payload","PolicyFailMessage","resourceName","color","reason","MessageText","SectionHelper","billing","useSettings","upgradeMsgValues","text","Link","LinkStyle","WorkspaceSelector","trigger","placement","workspaces","isFetched","useUserWorkspaces","activeWorkspace","useActiveWorkspace","selectorIsOpen","setSelectorIsOpen","hasPermission","cloneElement","DefaultTrigger","WorkspaceItem","CreateWorkspaceButton","onClick","onCreated","workspaceCount","checkOverQuotaOrNoPermission","overQuotaOrNoPermission","e","openDialog","AddIcon","forwardRef","ref","ButtonBase","UnfoldMoreIcon","isActive","CheckIcon","ManageButton","LeaveWorkspaceDialog","DeleteWorkspaceConfirmation","KeyboardArrowDownIcon","PersonAddIcon","EditIcon","DeleteIcon","addFilesSvg","timeManagement","fileSearching","throwAwaySvg","lovingItSvg","shareSvg","defaultSortDescriptor","makeFolderPage","folder","userId","makePartialFolderPage","getPathForFolder","rootFolder","getBootstrapData","RootFolderPage","RecentPage","SearchPage","isSearchingOrFiltering","SharesPage","TrashPage","StarredPage","DRIVE_PAGES","MenuPositions","__assign","this","t","n","o","defaultConfig","exports","arrayToTree","a","s","h","i","d","getNestedProperty","l","countNodes","fetchUserFolders","useFolders","stableArray","enableMapSet","initialState","getFromLocalStorage","useDriveStore","create","immer","set","get","isOpen","activePageId","setInLocalStorage","storedDescriptor","name","entries","current","mode","index","merge","driveState","useActiveDialogEntry","dialog","useMoveEntries","moveEntries","EightMB","useDriveUploadQueue","uploadMultiple","useFileUploadStore","usage","uploads","maxFileSize","allowedFileTypes","blockedFileTypes","useCallback","files","getActiveWorkspaceId","file","UploadedFile","sizeOfFiles","sum","currentlyUsing","availableSpace","entry","canMoveEntriesInto","targets","destination","target","destinationIsInTarget","destinationPath","part","useFolderDropAction","uploadFiles","folderAcceptsDrop","makeFolderTreeDragId","isFolderTreeDragId","useSidebarTreeDropTarget","isDragOver","setIsDragOver","onDrop","useDroppable","draggable","TreeContext","createContext","renderTree","nodes","itemRenderer","parentNode","level","node","Tree","children","expandedKeys","setExpandedKeys","useControlledState","selectedKeys","setSelectedKeys","focusedNode","setFocusedNode","FocusScope","TreeRoot","TreeLabel","icon","domProps","useContext","isExpanded","isSelected","handleExpandIconClick","newExpandedKeys","ArrowRightIcon","TreeItem","labelRef","labelClassName","focusManager","useFocusManager","hasChildren","isFirstNode","isFocused","onKeyDown","newKeys","parentEl","childNode","createEventHandler","FolderTree","navigate","useNavigate","activePage","tree","useMemo","folders","keys","entryHash","findHash","FolderTreeItem","useRef","isRootFolder","isDragging","draggableProps","useDraggable","droppableProps","mergeProps","BackupIcon","FolderIcon","item","deleteEntries","useDeleteEntries","getLoaderMessage","entryIds","emptyTrash","deleteForever","backendError","getAxiosErrorMessage","SidebarMenu","CustomMenu","TrashMenuItem","CustomMenuItem","CreateNewButton","isCompact","button","FileUploadIcon","openUploadWindow","activeFolder","UploadFileIcon","DriveFolderUploadIcon","CreateNewFolderIcon","Sidebar","isSubscribed","WorkspaceSwitcher","usePaginatedEntries","page","sortDescriptor","searchParams","useSearchParams","useParams","optionsUserId","isDisabledInSearch","pageParam","queryParams","lastResponse","currentPage","currentFolder","getAllEntries","all","cache","restrictResizableWithinBoundary","rect","boundaryRect","boundedRect","leftRestriction","topRestriction","mouseSelectables","useMouseSelectable","optionsRef","useLayoutEffect","droppables","rectsIntersect","rectA","rectB","useMouseSelectionBox","onPointerDown","defaultRef","containerRef","boxRef","drawSelectionBox","startPoint","endPoint","initialScrollTop","currentScrollTop","newRect","scrollDiff","scrollValue","absoluteRect","selectable","intersect","_e","_f","_g","usePointerEvents","activeInteraction","updateRects","el","reachedBottomEdge","reachedTopEdge","useEntries","useSelectedEntries","ids","useSelectedEntry","useSelectedEntryParent","getSelectedEntries","allEntries","useIsTouchDevice","useMediaQuery","useFileViewDnd","isTouchDevice","itemClassName","FileTableRow","isCollapsedMode","TableContext","useViewItemActionHandler","selectedEntries","createShareableLink","useCreateShareableLink","addStarToEntries","useAddStarToEntries","removeStarFromEntries","useRemoveStarFromEntries","duplicateEntries","useDuplicateEntries","useUnshareEntries","unshareEntries","useRestoreEntries","restoreEntries","useEntryActions","preview","usePreviewAction","share","useShareAction","getLink","useGetLinkAction","addStar","useAddToStarredAction","removeStar","useRemoveFromStarred","moveTo","useMoveToAction","rename","useRenameAction","makeCopy","useMakeCopyAction","download","useDownloadEntriesAction","deleteAction","useDeleteEntriesAction","removeSharedEntries","useRemoveSharedEntriesAction","useRestoreEntriesAction","action","RemoveRedEyeIcon","createLink","LinkIcon","starEntries","tag","StarIcon","StarOutlineIcon","DriveFileMoveIcon","DriveFileRenameOutlineIcon","ContentCopyIcon","downloadUrl","useFileEntryUrls","FileDownloadIcon","downloadFileFromUrl","RestoreIcon","useDrivePageActions","newFolder","useNewFolderAction","useUploadFilesAction","uploadFolder","useUploadFolderAction","useEmptyTrashAction","DeleteForeverIcon","EntryActionMenuTrigger","showIfNoActions","PageMenu","EntriesMenu","actions","BaseMenu","createElement","formatFileSize","memoize","bytes","fileTableColumns","FileNameColumn","FormattedDate","ActionsColumn","sizeClassName","FileThumbnail","selectedRows","Checkbox","MoreVertIcon","FileTable","performViewItemAction","Table","BaseFileGridItem","React","isMobileMode","footerAdornment","Footer","isMobile","adornment","FileGridItem","DashboardLayoutContext","toggleEntry","pressHandler","isCtrlOrShiftPressed","pressProps","keyboardHandler","contextMenuHandler","FooterAdornment","FileGrid","useFolderPath","isEnabled","fetchFolderPath","PageBreadcrumbs","rootItem","useRootItem","content","items","parent","Breadcrumb","BreadcrumbItem","isMenuItem","MixedText","owner","u","InfiniteScrollSentinel","isInitialLoading","fetchNextPage","loaderMarginTop","style","_variant","loadMoreExtraContent","sentinelRef","loadMoreClickCount","setLoadMoreClickCount","innerVariant","leftViewAfterLoading","sentinelEl","observer","opacityAnimation","DropTargetMask","isVisible","mask","AVAILABLE_SORTS","EntriesSortButton","descriptor","column","direction","sort","SortIcon","MenuSection","DriveSortButton","EntryActionList","ActionList","removeShared","Tooltip","Toolbar","FileView","viewMode","deleteEntriesMutation","handleKeybinds","containerProps","noContentMessage","IllustratedMessage","SvgImage","UploadQueueItem","memo","FileTypeIcon","SizeInfo","FileStatus","fileUpload","bytesUploaded","totalBytes","uploadedBytes","statusMessage","abortUpload","status","errorMessage","isHovered","setIsHovered","abortButton","progressButton","statusButton","errMessage","AnimatedStatus","ErrorIcon","WarningIcon","CheckCircleIcon","UploadQueue","Header","UploadList","inProgressUploadsCount","completedUploadsCount","clearInactive","uploadsArray","virtualizer","useVirtualizer","virtualItem","upload","detailedExamination","DetailsSidebarHeader","entryType","entryName","setRightSidenavStatus","DetailsSidebarSectionHeader","margin","useTaggableTags","getQueryKey","fetchTaggableTags","taggableType","taggableId","notType","invalidateTaggableTagsQuery","taggableIds","useDetachTagFromTaggables","detachTag","useTags","signal","fetchTags","keepPreviousData","resolve","useAttachTagToTaggables","attachTag","ManageTagsDialog","propsAttachedTags","tagType","notTagType","setQuery","isPlaceholderData","queryIsLoading","tags","attachedTagIds","allTags","attachedTags","TextField","SearchIcon","List","isAttached","ListItem","PushPinIcon","DetailsSidebarTags","ChipList","Chip","DetailsSidebarProperties","GroupsIcon","PropertyList","prettySize","PropertyItem","DetailsSidebar","selectedEntry","NothingSelected","useRenameEntry","renameEntry","RenameEntryDialog","initialName","onSubmit","createFolder","parentId","useCreateFolder","NewFolderDialog","EntryPreviewDialog","defaultActiveIndex","activeIndex","setActiveIndex","FilePreviewDialog","DriveActions","shareEntry","useShareEntry","axios","DRIVE_ENTRY_FULL_PERMISSIONS","PermissionSelectorItems","PermissionSelector","getPermissionItemForUser","edit","useChangePermission","changePermission","MemberList","users","UserAvatar","ActionButtons","changePermissions","unshareEntry","activePermission","setActivePermission","SharePanel","isSharing","setIsSharing","selectedPermission","setSelectedPermission","inputValue","setInputValue","useNormalizedModels","Item","useEntryShareableLink","fetchLinkByEntryId","deleteShareableLink","useDeleteShareableLink","randomString","length","random","possible","ShareableLinkPanel","setActivePanel","focusInput","linkExists","deleteLink","Switch","ShareableLinkInput","link","autoFocus","base_url","linkUrl","isCopied","setCopied","useClipboard","updateShareableLink","useUpdateShareableLink","LinkSettingsDialog","updateLink","LinkExpirationOption","LinkPasswordOption","LinkOption","FormSwitch","minDate","now","getLocalTimeZone","showFieldDefault","showField","setShowField","FormDatePicker","showBorder","title","ShareDialog","initialEntry","focusLinkInput","fileEntry","activePanel","MainDialog","useMoveEntriesDialogFolderSearch","encodeBackendFilters","fetchEntries","MoveEntriesDialogSearch","onFolderSelected","searchLabel","ComboBox","MoveEntriesDialogBreadcrumbs","selectedFolder","previous","ArrowBackIcon","myFilesSvg","useMoveEntriesDialogFolders","movingSharedFiles","filters","MoveEntriesDialogFolderList","ChevronRightIcon","MoveEntriesDialog","setSelectedFolder","DeleteEntriesForeverDialog","BlockTrashFolderViewDialog","DriveDialogsContainer","activeDialog","getDialog","NavbarSearch","useDragMonitor","monitor","monitorRef","useId","dragMonitors","EntryDragPreview","points","setPoints","setState","dragTarget","prev","EntryPreview","droppableId","itemCount","exitVariant","EntryCount","count","DashboardContentHeader","DriveContentHeader","ToggleViewModeButton","ToggleDetailsButton","tooltip","ViewListIcon","ViewModuleIcon","InfoIcon","uploadStoreOptions","uploadedFile","DriveLayout","pathname","useLocation","urlsContextValue","StaticPageTitle","FileUploadProvider","FileEntryUrlsContext","DashboardLayout","Navbar","DashboardSidenav","DashboardContent","searchButton","mobileRightChildren","DashboardNavbar","FloatingActionList","entriesSelected","useLinkPageStore","linkPageState","useShareableLinkPage","orderBy","orderDir","order","isPasswordProtected","password","fetchLinkByHash","lastPage","checkLinkPassword","linkHash","useCheckLinkPassword","importIntoOwnDrive","linkId","useImportIntoOwnDrive","ShareableLinkPageActionButtons","isLoggedIn","alreadyImported","DownloadButton","ImportExportIcon","ShareableLinkNavbar","useIsMobileMediaQuery","PasswordPage","fieldLabel","setPassword","checkPassword","passwordIsInvalid","secureFilesSvg","FolderPreviewFileGrid","onEntrySelected","mobileColumns","config","FolderPreviewFileTable","buildFolderHash","folderHash","useNavigateToSubfolder","FolderPreviewFileView","navigateToSubfolder","activePreviewIndex","setActivePreviewIndex","handlePreview","folderEntries","AdHost","FolderPreviewBreadcrumb","FolderPreviewHeader","activeSort","hasEntry","GridViewIcon","FolderPreview","showEmptyMessage","EmptyMessage","ShareableLinkPageFilePreview","FilePreviewContainer","ShareableLinkPage","NotFoundPage","ActiveWorkspaceProvider"],"mappings":"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","x_google_ignoreList":[0,1,29]}